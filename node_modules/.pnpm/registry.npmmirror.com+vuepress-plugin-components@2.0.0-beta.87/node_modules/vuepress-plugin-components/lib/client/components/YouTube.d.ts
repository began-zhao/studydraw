import * as vue from 'vue';
import { VNode } from 'vue';

declare const _default: vue.DefineComponent<{
    id: {
        type: StringConstructor;
        default: string;
    };
    height: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    autoplay: BooleanConstructor;
    loop: BooleanConstructor;
    showCc: BooleanConstructor;
    showAnnotations: BooleanConstructor;
    start: {
        type: NumberConstructor;
        default: undefined;
    };
    end: {
        type: NumberConstructor;
        default: undefined;
    };
    defaultCcLang: {
        type: StringConstructor;
        default: string;
    };
    uiLang: {
        type: StringConstructor;
        default: string;
    };
    listType: {
        type: StringConstructor;
        default: string;
    };
    list: {
        type: StringConstructor;
        default: string;
    };
    playlist: {
        type: StringConstructor;
        default: string;
    };
    disableControls: BooleanConstructor;
    disableFullscreen: BooleanConstructor;
    disableKeyboard: BooleanConstructor;
}, () => VNode | null, unknown, {}, {}, vue.ComponentOptionsMixin, vue.ComponentOptionsMixin, Record<string, any>, string, vue.VNodeProps & vue.AllowedComponentProps & vue.ComponentCustomProps, Readonly<vue.ExtractPropTypes<{
    id: {
        type: StringConstructor;
        default: string;
    };
    height: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    autoplay: BooleanConstructor;
    loop: BooleanConstructor;
    showCc: BooleanConstructor;
    showAnnotations: BooleanConstructor;
    start: {
        type: NumberConstructor;
        default: undefined;
    };
    end: {
        type: NumberConstructor;
        default: undefined;
    };
    defaultCcLang: {
        type: StringConstructor;
        default: string;
    };
    uiLang: {
        type: StringConstructor;
        default: string;
    };
    listType: {
        type: StringConstructor;
        default: string;
    };
    list: {
        type: StringConstructor;
        default: string;
    };
    playlist: {
        type: StringConstructor;
        default: string;
    };
    disableControls: BooleanConstructor;
    disableFullscreen: BooleanConstructor;
    disableKeyboard: BooleanConstructor;
}>>, {
    id: string;
    height: string | number;
    autoplay: boolean;
    loop: boolean;
    showCc: boolean;
    showAnnotations: boolean;
    start: number;
    end: number;
    defaultCcLang: string;
    uiLang: string;
    listType: string;
    list: string;
    playlist: string;
    disableControls: boolean;
    disableFullscreen: boolean;
    disableKeyboard: boolean;
}>;

export { _default as default };
