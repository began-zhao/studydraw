import{useEventListener,useDebounceFn}from"@vueuse/core";import{defineComponent,ref,onMounted,onBeforeUnmount,h}from"vue";import"vuepress-shared/lib/client";import"../styles/echarts.scss";const LOADING_SVG='<svg xmlns="http://www.w3.org/2000/svg" class="loading-icon" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid"><circle cx="50" cy="50" r="0" fill="none" stroke="currentColor" stroke-width="2"><animate attributeName="r" repeatCount="indefinite" dur="1s" values="0;40" keyTimes="0;1" keySplines="0 0.2 0.8 1" calcMode="spline" begin="0s"/><animate attributeName="opacity" repeatCount="indefinite" dur="1s" values="1;0" keyTimes="0;1" keySplines="0.2 0 0.8 1" calcMode="spline" begin="0s"/></circle><circle cx="50" cy="50" r="0" fill="none" stroke="currentColor" stroke-width="2"><animate attributeName="r" repeatCount="indefinite" dur="1s" values="0;40" keyTimes="0;1" keySplines="0 0.2 0.8 1" calcMode="spline" begin="-0.3333333333333333s"/><animate attributeName="opacity" repeatCount="indefinite" dur="1s" values="1;0" keyTimes="0;1" keySplines="0.2 0 0.8 1" calcMode="spline" begin="-0.3333333333333333s"/></circle><circle cx="50" cy="50" r="0" fill="none" stroke="currentColor" stroke-width="2"><animate attributeName="r" repeatCount="indefinite" dur="1s" values="0;40" keyTimes="0;1" keySplines="0 0.2 0.8 1" calcMode="spline" begin="-0.6666666666666666s"/><animate attributeName="opacity" repeatCount="indefinite" dur="1s" values="1;0" keyTimes="0;1" keySplines="0.2 0 0.8 1" calcMode="spline" begin="-0.6666666666666666s"/></circle></svg>',parseEChartsConfig=(config,type)=>{if("json"===type)return JSON.parse(config);const exports={},module={exports:exports};return eval(config),module.exports};var ECharts=defineComponent({name:"ECharts",props:{config:{type:String,required:!0},id:{type:String,required:!0},title:{type:String,default:""},type:{type:String,default:"json"}},setup(e){const t=ref(null);let i;const n=ref(!0);return onMounted((()=>{Promise.all([import("echarts"),new Promise((e=>setTimeout(e,MARKDOWN_ENHANCE_DELAY)))]).then((([r])=>{const s=parseEChartsConfig(decodeURIComponent(e.config),e.type);i=r.init(t.value),i.showLoading(),i.setOption(s),i.hideLoading(),n.value=!1})),useEventListener("resize",useDebounceFn((()=>i?.resize()),100))})),onBeforeUnmount((()=>{i?.dispose()})),()=>[e.title?h("div",{class:"echarts-title"},decodeURIComponent(e.title)):null,n.value?h("div",{class:"echarts-loading-wrapper",innerHTML:LOADING_SVG}):null,h("div",{ref:t,class:"echarts-wrapper",id:e.id})]}});export{ECharts as default};
//# sourceMappingURL=ECharts.js.map
