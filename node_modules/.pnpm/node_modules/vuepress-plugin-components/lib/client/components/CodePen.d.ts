import * as vue from 'vue';
import { PropType, VNode } from 'vue';

declare global {
    interface Window {
        __CPEmbed: (selector: string) => void;
    }
}
declare const _default: vue.DefineComponent<{
    link: {
        type: StringConstructor;
        default: string;
    };
    user: {
        type: StringConstructor;
        default: string;
    };
    slugHash: {
        type: StringConstructor;
        default: string;
    };
    title: {
        type: StringConstructor;
        default: string;
    };
    height: {
        type: NumberConstructor;
        default: number;
    };
    theme: {
        type: PropType<"default" | "light" | "dark">;
        default: string;
    };
    defaultTab: {
        type: PropType<string[]>;
        default: () => string[];
    };
    status: {
        type: PropType<"autoload" | "preview" | "clicktorun">;
        default: string;
    };
}, () => VNode, unknown, {}, {}, vue.ComponentOptionsMixin, vue.ComponentOptionsMixin, Record<string, any>, string, vue.VNodeProps & vue.AllowedComponentProps & vue.ComponentCustomProps, Readonly<vue.ExtractPropTypes<{
    link: {
        type: StringConstructor;
        default: string;
    };
    user: {
        type: StringConstructor;
        default: string;
    };
    slugHash: {
        type: StringConstructor;
        default: string;
    };
    title: {
        type: StringConstructor;
        default: string;
    };
    height: {
        type: NumberConstructor;
        default: number;
    };
    theme: {
        type: PropType<"default" | "light" | "dark">;
        default: string;
    };
    defaultTab: {
        type: PropType<string[]>;
        default: () => string[];
    };
    status: {
        type: PropType<"autoload" | "preview" | "clicktorun">;
        default: string;
    };
}>>, {
    link: string;
    user: string;
    slugHash: string;
    title: string;
    height: number;
    theme: "default" | "light" | "dark";
    defaultTab: string[];
    status: "autoload" | "preview" | "clicktorun";
}>;

export { _default as default };
