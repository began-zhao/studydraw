{"version":3,"file":"setup.js","sources":["../../../src/client/composables/useForceUpdate.ts","../../../src/client/composables/usePWAEvent.ts","../../../src/client/composables/setup.ts","../../../src/client/composables/useRegister.ts","../../../../../node_modules/.pnpm/register-service-worker@1.7.2/node_modules/register-service-worker/index.js"],"sourcesContent":[null,null,null,null,"// Register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\nvar isLocalhost = function () { return Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n); }\n\nvar waitWindowLoad\n// https://github.com/yyx990803/register-service-worker/pull/33#discussion_r394181861\nif (typeof window !== 'undefined') {\n  // Typically, a browser that supports `serviceWorker` should also have supported\n  // `Promise`. But as this package can be used in environments without service\n  // worker support (in that case it would do nothing), there's a chance that\n  // `Promise` does not exist. So we must check for its existence first.\n  if (typeof Promise !== 'undefined') {\n    waitWindowLoad = new Promise(function (resolve) { return window.addEventListener('load', resolve); })\n  } else {\n    waitWindowLoad = { then: function (cb) { return window.addEventListener('load', cb); } }\n  }\n}\n\nexport function register (swUrl, hooks) {\n  if ( hooks === void 0 ) hooks = {};\n\n  var registrationOptions = hooks.registrationOptions; if ( registrationOptions === void 0 ) registrationOptions = {};\n  delete hooks.registrationOptions\n\n  var emit = function (hook) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    if (hooks && hooks[hook]) {\n      hooks[hook].apply(hooks, args)\n    }\n  }\n\n  if ('serviceWorker' in navigator) {\n    waitWindowLoad.then(function () {\n      if (isLocalhost()) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        }).catch(function (error) { return handleError(emit, error); })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        }).catch(function (error) { return handleError(emit, error); })\n      }\n    })\n  }\n}\n\nfunction handleError (emit, error) {\n  if (!navigator.onLine) {\n    emit('offline')\n  }\n  emit('error', error)\n}\n\nfunction registerValidSW (swUrl, emit, registrationOptions) {\n  navigator.serviceWorker\n    .register(swUrl, registrationOptions)\n    .then(function (registration) {\n      emit('registered', registration)\n      if (registration.waiting) {\n        emit('updated', registration)\n        return\n      }\n      registration.onupdatefound = function () {\n        emit('updatefound', registration)\n        var installingWorker = registration.installing\n        installingWorker.onstatechange = function () {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              emit('updated', registration)\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              emit('cached', registration)\n            }\n          }\n        }\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); })\n}\n\nfunction checkValidServiceWorker (swUrl, emit, registrationOptions) {\n  // Check if the service worker can be found.\n  fetch(swUrl)\n    .then(function (response) {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404) {\n        // No service worker found.\n        emit('error', new Error((\"Service worker not found at \" + swUrl)))\n        unregister()\n      } else if (response.headers.get('content-type').indexOf('javascript') === -1) {\n        emit('error', new Error(\n          \"Expected \" + swUrl + \" to have javascript content-type, \" +\n          \"but received \" + (response.headers.get('content-type'))))\n        unregister()\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, emit, registrationOptions)\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.unregister()\n    }).catch(function (error) { return handleError(emit, error); })\n  }\n}\n"],"names":["pwaEventSymbol","Symbol","for","setupPWA","__VUEPRESS_SSR__","event","mitt","provide","onMounted","async","process","env","refreshing","navigator","serviceWorker","controller","addEventListener","window","location","reload","SW_FORCE_UPDATE","on","getRegistration","then","registration","active","useForceUpdate","register","Promise","withBase","SW_PATH","ready","console","log","emit","registered","cached","updatefound","updated","key","version","Number","localStorage","getItem","setItem","toString","removeItem","offline","error","err","useRegister","waitWindowLoad","handleError","onLine","registerValidSW","swUrl","registrationOptions","waiting","onupdatefound","installingWorker","installing","onstatechange","state","catch","unregister","resolve","cb","hooks","hook","args","len","arguments","length","apply","Boolean","hostname","match","fetch","response","status","Error","headers","get","indexOf","checkValidServiceWorker"],"mappings":"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"}