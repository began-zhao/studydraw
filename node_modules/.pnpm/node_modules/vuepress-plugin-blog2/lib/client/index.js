import{categoryMap as t}from"@temp/blog/category";import{useRouteLocale as e,usePageFrontmatter as o}from"@vuepress/client";import{ref as a,computed as n}from"vue";import{useRouter as p,useRoute as r}from"vue-router";import{resolveRouteWithRedirect as i}from"vuepress-shared/lib/client";import{typeMap as s}from"@temp/blog/type";const m=a(t),u=(t="")=>{const a=p(),s=r(),u=e();return n((()=>{const e=t||o().value.blog?.key||"",n=a.getRoutes();if(!m.value[e])throw new Error("useBlogCategory: "+(t?`key ${t} is invalid`:"can not bind to an exisiting key on non blog pages"));const p=m.value[e][u.value],r={path:p.path,map:{}};for(const t in p.map){const e=p.map[t];r.map[t]={path:e.path,items:[]};for(const o of e.keys){const e=n.find((({name:t})=>t===o));if(e){const o=i(a,e.path);r.map[t].items.push({path:o.path,info:""===BLOG_META_SCOPE?o.meta:o.meta[BLOG_META_SCOPE]})}}s.path===e.path&&(r.currentItems=r.map[t].items)}return r}))};(import.meta.webpackHot||import.meta.hot)&&(__VUE_HMR_RUNTIME__.updateBlogCategory=t=>{m.value=t});const l=a(s),c=(t="")=>{const a=p(),r=e();return n((()=>{const e=t||o().value.blog?.key||"";if(!l.value[e])throw new Error("useBlogType: "+(t?`key ${t} is invalid`:"can not bind to an exisiting key on non blog pages"));const n=a.getRoutes(),p=l.value[e][r.value],s={path:p.path,items:[]};for(const t of p.keys){const e=n.find((({name:e})=>e===t));if(e){const t=i(a,e.path);s.items.push({path:t.path,info:""===BLOG_META_SCOPE?t.meta:t.meta[BLOG_META_SCOPE]})}}return s}))};(import.meta.webpackHot||import.meta.hot)&&(__VUE_HMR_RUNTIME__.updateBlogType=t=>{l.value=t});export{m as blogCategoryMap,l as blogTypeMap,u as useBlogCategory,c as useBlogType};
//# sourceMappingURL=index.js.map
