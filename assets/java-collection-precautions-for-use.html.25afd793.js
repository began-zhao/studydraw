import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c,b as n,a as t,e as p,d as s,r as l}from"./app.1b4b1cb5.js";const u={},i=p(`<p>\u8FD9\u7BC7\u6587\u7AE0\u6211\u6839\u636E\u300A\u963F\u91CC\u5DF4\u5DF4 Java \u5F00\u53D1\u624B\u518C\u300B\u603B\u7ED3\u4E86\u5173\u4E8E\u96C6\u5408\u4F7F\u7528\u5E38\u89C1\u7684\u6CE8\u610F\u4E8B\u9879\u4EE5\u53CA\u5176\u5177\u4F53\u539F\u7406\u3002</p><p>\u5F3A\u70C8\u5EFA\u8BAE\u5C0F\u4F19\u4F34\u4EEC\u591A\u591A\u9605\u8BFB\u51E0\u904D\uFF0C\u907F\u514D\u81EA\u5DF1\u5199\u4EE3\u7801\u7684\u65F6\u5019\u51FA\u73B0\u8FD9\u4E9B\u4F4E\u7EA7\u7684\u95EE\u9898\u3002</p><h2 id="\u96C6\u5408\u5224\u7A7A" tabindex="-1"><a class="header-anchor" href="#\u96C6\u5408\u5224\u7A7A" aria-hidden="true">#</a> \u96C6\u5408\u5224\u7A7A</h2><p>\u300A\u963F\u91CC\u5DF4\u5DF4 Java \u5F00\u53D1\u624B\u518C\u300B\u7684\u63CF\u8FF0\u5982\u4E0B\uFF1A</p><blockquote><p><strong>\u5224\u65AD\u6240\u6709\u96C6\u5408\u5185\u90E8\u7684\u5143\u7D20\u662F\u5426\u4E3A\u7A7A\uFF0C\u4F7F\u7528 <code>isEmpty()</code> \u65B9\u6CD5\uFF0C\u800C\u4E0D\u662F <code>size()==0</code> \u7684\u65B9\u5F0F\u3002</strong></p></blockquote><p>\u8FD9\u662F\u56E0\u4E3A <code>isEmpty()</code> \u65B9\u6CD5\u7684\u53EF\u8BFB\u6027\u66F4\u597D\uFF0C\u5E76\u4E14\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\u3002</p><p>\u7EDD\u5927\u90E8\u5206\u6211\u4EEC\u4F7F\u7528\u7684\u96C6\u5408\u7684 <code>size()</code> \u65B9\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E5F\u662F O(1)\uFF0C\u4E0D\u8FC7\uFF0C\u4E5F\u6709\u5F88\u591A\u590D\u6742\u5EA6\u4E0D\u662F O(1) \u7684\uFF0C\u6BD4\u5982 <code>java.util.concurrent</code> \u5305\u4E0B\u7684\u67D0\u4E9B\u96C6\u5408\uFF08<code>ConcurrentLinkedQueue</code> \u3001<code>ConcurrentHashMap</code>...\uFF09\u3002</p><p>\u4E0B\u9762\u662F <code>ConcurrentHashMap</code> \u7684 <code>size()</code> \u65B9\u6CD5\u548C <code>isEmpty()</code> \u65B9\u6CD5\u7684\u6E90\u7801\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> n <span class="token operator">=</span> <span class="token function">sumCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span>
            <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">:</span>
            <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token function">sumCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">CounterCell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as <span class="token operator">=</span> counterCells<span class="token punctuation">;</span> <span class="token class-name">CounterCell</span> a<span class="token punctuation">;</span>
    <span class="token keyword">long</span> sum <span class="token operator">=</span> baseCount<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> as<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                sum <span class="token operator">+=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">sumCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0L</span><span class="token punctuation">;</span> <span class="token comment">// ignore transient negative values</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u96C6\u5408\u8F6C-map" tabindex="-1"><a class="header-anchor" href="#\u96C6\u5408\u8F6C-map" aria-hidden="true">#</a> \u96C6\u5408\u8F6C Map</h2><p>\u300A\u963F\u91CC\u5DF4\u5DF4 Java \u5F00\u53D1\u624B\u518C\u300B\u7684\u63CF\u8FF0\u5982\u4E0B\uFF1A</p><blockquote><p><strong>\u5728\u4F7F\u7528 <code>java.util.stream.Collectors</code> \u7C7B\u7684 <code>toMap()</code> \u65B9\u6CD5\u8F6C\u4E3A <code>Map</code> \u96C6\u5408\u65F6\uFF0C\u4E00\u5B9A\u8981\u6CE8\u610F\u5F53 value \u4E3A null \u65F6\u4F1A\u629B NPE \u5F02\u5E38\u3002</strong></p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> phoneNumber<span class="token punctuation">;</span>
     <span class="token comment">// getters and setters</span>
<span class="token punctuation">}</span>

<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> bookList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bookList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;jack&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;18163138123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bookList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;martin&quot;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7A7A\u6307\u9488\u5F02\u5E38</span>
bookList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">,</span> <span class="token class-name">Person</span><span class="token operator">::</span><span class="token function">getPhoneNumber</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u6211\u4EEC\u6765\u89E3\u91CA\u4E00\u4E0B\u539F\u56E0\u3002</p><p>\u9996\u5148\uFF0C\u6211\u4EEC\u6765\u770B <code>java.util.stream.Collectors</code> \u7C7B\u7684 <code>toMap()</code> \u65B9\u6CD5 \uFF0C\u53EF\u4EE5\u770B\u5230\u5176\u5185\u90E8\u8C03\u7528\u4E86 <code>Map</code> \u63A5\u53E3\u7684 <code>merge()</code> \u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">U</span><span class="token punctuation">,</span> <span class="token class-name">M</span> <span class="token keyword">extends</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span>
<span class="token class-name">Collector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token punctuation">,</span> <span class="token class-name">M</span><span class="token punctuation">&gt;</span></span> <span class="token function">toMap</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">K</span><span class="token punctuation">&gt;</span></span> keyMapper<span class="token punctuation">,</span>
                            <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> valueMapper<span class="token punctuation">,</span>
                            <span class="token class-name">BinaryOperator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> mergeFunction<span class="token punctuation">,</span>
                            <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">M</span><span class="token punctuation">&gt;</span></span> mapSupplier<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">M</span><span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> accumulator
            <span class="token operator">=</span> <span class="token punctuation">(</span>map<span class="token punctuation">,</span> element<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> map<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>keyMapper<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                          valueMapper<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">,</span> mergeFunction<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CollectorImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>mapSupplier<span class="token punctuation">,</span> accumulator<span class="token punctuation">,</span> <span class="token function">mapMerger</span><span class="token punctuation">(</span>mergeFunction<span class="token punctuation">)</span><span class="token punctuation">,</span> CH_ID<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Map</code> \u63A5\u53E3\u7684 <code>merge()</code> \u65B9\u6CD5\u5982\u4E0B\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u662F\u63A5\u53E3\u4E2D\u7684\u9ED8\u8BA4\u5B9E\u73B0\u3002</p>`,17),k=s("\u5982\u679C\u4F60\u8FD8\u4E0D\u4E86\u89E3 Java 8 \u65B0\u7279\u6027\u7684\u8BDD\uFF0C\u8BF7\u770B\u8FD9\u7BC7\u6587\u7AE0\uFF1A"),r={href:"https://mp.weixin.qq.com/s/ojyl7B6PiHaTWADqmUq2rw",target:"_blank",rel:"noopener noreferrer"},d=s("\u300AJava8 \u65B0\u7279\u6027\u603B\u7ED3\u300B"),m=s(" \u3002"),v=p(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">default</span> <span class="token class-name">V</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span>
        <span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">V</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">V</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> remappingFunction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>remappingFunction<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">V</span> oldValue <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">V</span> newValue <span class="token operator">=</span> <span class="token punctuation">(</span>oldValue <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> value <span class="token operator">:</span>
               remappingFunction<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>oldValue<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>newValue <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">remove</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> newValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>merge()</code> \u65B9\u6CD5\u4F1A\u5148\u8C03\u7528 <code>Objects.requireNonNull()</code> \u65B9\u6CD5\u5224\u65AD value \u662F\u5426\u4E3A\u7A7A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">requireNonNull</span><span class="token punctuation">(</span><span class="token class-name">T</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u96C6\u5408\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u96C6\u5408\u904D\u5386" aria-hidden="true">#</a> \u96C6\u5408\u904D\u5386</h2><p>\u300A\u963F\u91CC\u5DF4\u5DF4 Java \u5F00\u53D1\u624B\u518C\u300B\u7684\u63CF\u8FF0\u5982\u4E0B\uFF1A</p><blockquote><p><strong>\u4E0D\u8981\u5728 foreach \u5FAA\u73AF\u91CC\u8FDB\u884C\u5143\u7D20\u7684 <code>remove/add</code> \u64CD\u4F5C\u3002remove \u5143\u7D20\u8BF7\u4F7F\u7528 <code>Iterator</code> \u65B9\u5F0F\uFF0C\u5982\u679C\u5E76\u53D1\u64CD\u4F5C\uFF0C\u9700\u8981\u5BF9 <code>Iterator</code> \u5BF9\u8C61\u52A0\u9501\u3002</strong></p></blockquote><p>\u901A\u8FC7\u53CD\u7F16\u8BD1\u4F60\u4F1A\u53D1\u73B0 foreach \u8BED\u6CD5\u7CD6\u5E95\u5C42\u5176\u5B9E\u8FD8\u662F\u4F9D\u8D56 <code>Iterator</code> \u3002\u4E0D\u8FC7\uFF0C <code>remove/add</code> \u64CD\u4F5C\u76F4\u63A5\u8C03\u7528\u7684\u662F\u96C6\u5408\u81EA\u5DF1\u7684\u65B9\u6CD5\uFF0C\u800C\u4E0D\u662F <code>Iterator</code> \u7684 <code>remove/add</code>\u65B9\u6CD5</p><p>\u8FD9\u5C31\u5BFC\u81F4 <code>Iterator</code> \u83AB\u540D\u5176\u5999\u5730\u53D1\u73B0\u81EA\u5DF1\u6709\u5143\u7D20\u88AB <code>remove/add</code> \uFF0C\u7136\u540E\uFF0C\u5B83\u5C31\u4F1A\u629B\u51FA\u4E00\u4E2A <code>ConcurrentModificationException</code> \u6765\u63D0\u793A\u7528\u6237\u53D1\u751F\u4E86\u5E76\u53D1\u4FEE\u6539\u5F02\u5E38\u3002\u8FD9\u5C31\u662F\u5355\u7EBF\u7A0B\u72B6\u6001\u4E0B\u4EA7\u751F\u7684 <strong>fail-fast \u673A\u5236</strong>\u3002</p><blockquote><p><strong>fail-fast \u673A\u5236</strong> \uFF1A\u591A\u4E2A\u7EBF\u7A0B\u5BF9 fail-fast \u96C6\u5408\u8FDB\u884C\u4FEE\u6539\u7684\u65F6\u5019\uFF0C\u53EF\u80FD\u4F1A\u629B\u51FA<code>ConcurrentModificationException</code>\u3002 \u5373\u4F7F\u662F\u5355\u7EBF\u7A0B\u4E0B\u4E5F\u6709\u53EF\u80FD\u4F1A\u51FA\u73B0\u8FD9\u79CD\u60C5\u51B5\uFF0C\u4E0A\u9762\u5DF2\u7ECF\u63D0\u5230\u8FC7\u3002</p></blockquote><p>Java8 \u5F00\u59CB\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>Collection#removeIf()</code>\u65B9\u6CD5\u5220\u9664\u6EE1\u8DB3\u7279\u5B9A\u6761\u4EF6\u7684\u5143\u7D20,\u5982</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
list<span class="token punctuation">.</span><span class="token function">removeIf</span><span class="token punctuation">(</span>filter <span class="token operator">-&gt;</span> filter <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* \u5220\u9664list\u4E2D\u7684\u6240\u6709\u5076\u6570 */</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* [1, 3, 5, 7, 9] */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9664\u4E86\u4E0A\u9762\u4ECB\u7ECD\u7684\u76F4\u63A5\u4F7F\u7528 <code>Iterator</code> \u8FDB\u884C\u904D\u5386\u64CD\u4F5C\u4E4B\u5916\uFF0C\u4F60\u8FD8\u53EF\u4EE5\uFF1A</p><ul><li>\u4F7F\u7528\u666E\u901A\u7684 for \u5FAA\u73AF</li><li>\u4F7F\u7528 fail-safe \u7684\u96C6\u5408\u7C7B\u3002<code>java.util</code>\u5305\u4E0B\u9762\u7684\u6240\u6709\u7684\u96C6\u5408\u7C7B\u90FD\u662F fail-fast \u7684\uFF0C\u800C<code>java.util.concurrent</code>\u5305\u4E0B\u9762\u7684\u6240\u6709\u7684\u7C7B\u90FD\u662F fail-safe \u7684\u3002</li><li>......</li></ul><h2 id="\u96C6\u5408\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#\u96C6\u5408\u53BB\u91CD" aria-hidden="true">#</a> \u96C6\u5408\u53BB\u91CD</h2><p>\u300A\u963F\u91CC\u5DF4\u5DF4 Java \u5F00\u53D1\u624B\u518C\u300B\u7684\u63CF\u8FF0\u5982\u4E0B\uFF1A</p><blockquote><p><strong>\u53EF\u4EE5\u5229\u7528 <code>Set</code> \u5143\u7D20\u552F\u4E00\u7684\u7279\u6027\uFF0C\u53EF\u4EE5\u5FEB\u901F\u5BF9\u4E00\u4E2A\u96C6\u5408\u8FDB\u884C\u53BB\u91CD\u64CD\u4F5C\uFF0C\u907F\u514D\u4F7F\u7528 <code>List</code> \u7684 <code>contains()</code> \u8FDB\u884C\u904D\u5386\u53BB\u91CD\u6216\u8005\u5224\u65AD\u5305\u542B\u64CD\u4F5C\u3002</strong></p></blockquote><p>\u8FD9\u91CC\u6211\u4EEC\u4EE5 <code>HashSet</code> \u548C <code>ArrayList</code> \u4E3A\u4F8B\u8BF4\u660E\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Set \u53BB\u91CD\u4EE3\u7801\u793A\u4F8B</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">removeDuplicateBySet</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// List \u53BB\u91CD\u4EE3\u7801\u793A\u4F8B</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">removeDuplicateByList</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">T</span> current <span class="token operator">:</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E24\u8005\u7684\u6838\u5FC3\u5DEE\u522B\u5728\u4E8E <code>contains()</code> \u65B9\u6CD5\u7684\u5B9E\u73B0\u3002</p><p><code>HashSet</code> \u7684 <code>contains()</code> \u65B9\u6CD5\u5E95\u90E8\u4F9D\u8D56\u7684 <code>HashMap</code> \u7684 <code>containsKey()</code> \u65B9\u6CD5\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u63A5\u8FD1\u4E8E O\uFF081\uFF09\uFF08\u6CA1\u6709\u51FA\u73B0\u54C8\u5E0C\u51B2\u7A81\u7684\u65F6\u5019\u4E3A O\uFF081\uFF09\uFF09\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u6709 N \u4E2A\u5143\u7D20\u63D2\u5165\u8FDB Set \u4E2D\uFF0C\u90A3\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u63A5\u8FD1\u662F O (n)\u3002</p><p><code>ArrayList</code> \u7684 <code>contains()</code> \u65B9\u6CD5\u662F\u901A\u8FC7\u904D\u5386\u6240\u6709\u5143\u7D20\u7684\u65B9\u6CD5\u6765\u505A\u7684\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u63A5\u8FD1\u662F O(n)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">indexOf</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u7684 <code>List</code> \u6709 N \u4E2A\u5143\u7D20\uFF0C\u90A3\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u63A5\u8FD1\u662F O (n^2)\u3002</p><h2 id="\u96C6\u5408\u8F6C\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u96C6\u5408\u8F6C\u6570\u7EC4" aria-hidden="true">#</a> \u96C6\u5408\u8F6C\u6570\u7EC4</h2><p>\u300A\u963F\u91CC\u5DF4\u5DF4 Java \u5F00\u53D1\u624B\u518C\u300B\u7684\u63CF\u8FF0\u5982\u4E0B\uFF1A</p><blockquote><p><strong>\u4F7F\u7528\u96C6\u5408\u8F6C\u6570\u7EC4\u7684\u65B9\u6CD5\uFF0C\u5FC5\u987B\u4F7F\u7528\u96C6\u5408\u7684 <code>toArray(T[] array)</code>\uFF0C\u4F20\u5165\u7684\u662F\u7C7B\u578B\u5B8C\u5168\u4E00\u81F4\u3001\u957F\u5EA6\u4E3A 0 \u7684\u7A7A\u6570\u7EC4\u3002</strong></p></blockquote><p><code>toArray(T[] array)</code> \u65B9\u6CD5\u7684\u53C2\u6570\u662F\u4E00\u4E2A\u6CDB\u578B\u6570\u7EC4\uFF0C\u5982\u679C <code>toArray</code> \u65B9\u6CD5\u4E2D\u6CA1\u6709\u4F20\u9012\u4EFB\u4F55\u53C2\u6570\u7684\u8BDD\u8FD4\u56DE\u7684\u662F <code>Object</code>\u7C7B \u578B\u6570\u7EC4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> s<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
    <span class="token string">&quot;dog&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lazy&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;over&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jumps&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;fox&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;brown&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;quick&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6CA1\u6709\u6307\u5B9A\u7C7B\u578B\u7684\u8BDD\u4F1A\u62A5\u9519</span>
s<span class="token operator">=</span>list<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),b=s("\u7531\u4E8E JVM \u4F18\u5316\uFF0C"),g=n("code",null,"new String[0]",-1),y=s("\u4F5C\u4E3A"),f=n("code",null,"Collection.toArray()",-1),w=s("\u65B9\u6CD5\u7684\u53C2\u6570\u73B0\u5728\u4F7F\u7528\u66F4\u597D\uFF0C"),h=n("code",null,"new String[0]",-1),L=s("\u5C31\u662F\u8D77\u4E00\u4E2A\u6A21\u677F\u7684\u4F5C\u7528\uFF0C\u6307\u5B9A\u4E86\u8FD4\u56DE\u6570\u7EC4\u7684\u7C7B\u578B\uFF0C0 \u662F\u4E3A\u4E86\u8282\u7701\u7A7A\u95F4\uFF0C\u56E0\u4E3A\u5B83\u53EA\u662F\u4E3A\u4E86\u8BF4\u660E\u8FD4\u56DE\u7684\u7C7B\u578B\u3002\u8BE6\u89C1\uFF1A"),j={href:"https://shipilev.net/blog/2016/arrays-wisdom-ancients/",target:"_blank",rel:"noopener noreferrer"},_=s("https://shipilev.net/blog/2016/arrays-wisdom-ancients/"),q=p(`<h2 id="\u6570\u7EC4\u8F6C\u96C6\u5408" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u8F6C\u96C6\u5408" aria-hidden="true">#</a> \u6570\u7EC4\u8F6C\u96C6\u5408</h2><p>\u300A\u963F\u91CC\u5DF4\u5DF4 Java \u5F00\u53D1\u624B\u518C\u300B\u7684\u63CF\u8FF0\u5982\u4E0B\uFF1A</p><blockquote><p><strong>\u4F7F\u7528\u5DE5\u5177\u7C7B <code>Arrays.asList()</code> \u628A\u6570\u7EC4\u8F6C\u6362\u6210\u96C6\u5408\u65F6\uFF0C\u4E0D\u80FD\u4F7F\u7528\u5176\u4FEE\u6539\u96C6\u5408\u76F8\u5173\u7684\u65B9\u6CD5\uFF0C \u5B83\u7684 <code>add/remove/clear</code> \u65B9\u6CD5\u4F1A\u629B\u51FA <code>UnsupportedOperationException</code> \u5F02\u5E38\u3002</strong></p></blockquote><p>\u6211\u5728\u4E4B\u524D\u7684\u4E00\u4E2A\u9879\u76EE\u4E2D\u5C31\u9047\u5230\u4E00\u4E2A\u7C7B\u4F3C\u7684\u5751\u3002</p><p><code>Arrays.asList()</code>\u5728\u5E73\u65F6\u5F00\u53D1\u4E2D\u8FD8\u662F\u6BD4\u8F83\u5E38\u89C1\u7684\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u5B83\u5C06\u4E00\u4E2A\u6570\u7EC4\u8F6C\u6362\u4E3A\u4E00\u4E2A <code>List</code> \u96C6\u5408\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> myArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Banana&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Orange&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> myList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>myArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u4E0A\u9762\u4E24\u4E2A\u8BED\u53E5\u7B49\u4EF7\u4E8E\u4E0B\u9762\u4E00\u6761\u8BED\u53E5</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> myList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;Apple&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Banana&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Orange&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>JDK \u6E90\u7801\u5BF9\u4E8E\u8FD9\u4E2A\u65B9\u6CD5\u7684\u8BF4\u660E\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
  *\u8FD4\u56DE\u7531\u6307\u5B9A\u6570\u7EC4\u652F\u6301\u7684\u56FA\u5B9A\u5927\u5C0F\u7684\u5217\u8868\u3002\u6B64\u65B9\u6CD5\u4F5C\u4E3A\u57FA\u4E8E\u6570\u7EC4\u548C\u57FA\u4E8E\u96C6\u5408\u7684API\u4E4B\u95F4\u7684\u6865\u6881\uFF0C
  * \u4E0E Collection.toArray()\u7ED3\u5408\u4F7F\u7528\u3002\u8FD4\u56DE\u7684List\u662F\u53EF\u5E8F\u5217\u5316\u5E76\u5B9E\u73B0RandomAccess\u63A5\u53E3\u3002
  */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u6211\u4EEC\u6765\u603B\u7ED3\u4E00\u4E0B\u4F7F\u7528\u6CE8\u610F\u4E8B\u9879\u3002</p><p><strong>1\u3001<code>Arrays.asList()</code>\u662F\u6CDB\u578B\u65B9\u6CD5\uFF0C\u4F20\u9012\u7684\u6570\u7EC4\u5FC5\u987B\u662F\u5BF9\u8C61\u6570\u7EC4\uFF0C\u800C\u4E0D\u662F\u57FA\u672C\u7C7B\u578B\u3002</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> myArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">List</span> myList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>myArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u6570\u7EC4\u5730\u5740\u503C</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u62A5\u9519\uFF1AArrayIndexOutOfBoundsException</span>
<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> myList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u4F20\u5165\u4E00\u4E2A\u539F\u751F\u6570\u636E\u7C7B\u578B\u6570\u7EC4\u65F6\uFF0C<code>Arrays.asList()</code> \u7684\u771F\u6B63\u5F97\u5230\u7684\u53C2\u6570\u5C31\u4E0D\u662F\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\uFF0C\u800C\u662F\u6570\u7EC4\u5BF9\u8C61\u672C\u8EAB\uFF01\u6B64\u65F6 <code>List</code> \u7684\u552F\u4E00\u5143\u7D20\u5C31\u662F\u8FD9\u4E2A\u6570\u7EC4\uFF0C\u8FD9\u4E5F\u5C31\u89E3\u91CA\u4E86\u4E0A\u9762\u7684\u4EE3\u7801\u3002</p><p>\u6211\u4EEC\u4F7F\u7528\u5305\u88C5\u7C7B\u578B\u6570\u7EC4\u5C31\u53EF\u4EE5\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> myArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2\u3001\u4F7F\u7528\u96C6\u5408\u7684\u4FEE\u6539\u65B9\u6CD5: <code>add()</code>\u3001<code>remove()</code>\u3001<code>clear()</code>\u4F1A\u629B\u51FA\u5F02\u5E38\u3002</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span> myList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
myList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8FD0\u884C\u65F6\u62A5\u9519\uFF1AUnsupportedOperationException</span>
myList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8FD0\u884C\u65F6\u62A5\u9519\uFF1AUnsupportedOperationException</span>
myList<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8FD0\u884C\u65F6\u62A5\u9519\uFF1AUnsupportedOperationException</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Arrays.asList()</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u5E76\u4E0D\u662F <code>java.util.ArrayList</code> \uFF0C\u800C\u662F <code>java.util.Arrays</code> \u7684\u4E00\u4E2A\u5185\u90E8\u7C7B,\u8FD9\u4E2A\u5185\u90E8\u7C7B\u5E76\u6CA1\u6709\u5B9E\u73B0\u96C6\u5408\u7684\u4FEE\u6539\u65B9\u6CD5\u6216\u8005\u8BF4\u5E76\u6CA1\u6709\u91CD\u5199\u8FD9\u4E9B\u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span> myList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myList<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//class java.util.Arrays$ArrayList</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u56FE\u662F <code>java.util.Arrays$ArrayList</code> \u7684\u7B80\u6613\u6E90\u7801\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u8FD9\u4E2A\u7C7B\u91CD\u5199\u7684\u65B9\u6CD5\u6709\u54EA\u4E9B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
        <span class="token keyword">implements</span> <span class="token class-name">RandomAccess</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span>
    <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token class-name">UnaryOperator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> operator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u518D\u770B\u4E00\u4E0B<code>java.util.AbstractList</code>\u7684 <code>add/remove/clear</code> \u65B9\u6CD5\u5C31\u77E5\u9053\u4E3A\u4EC0\u4E48\u4F1A\u629B\u51FA <code>UnsupportedOperationException</code> \u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedOperationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">add</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedOperationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">removeRange</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">removeRange</span><span class="token punctuation">(</span><span class="token keyword">int</span> fromIndex<span class="token punctuation">,</span> <span class="token keyword">int</span> toIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ListIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> it <span class="token operator">=</span> <span class="token function">listIterator</span><span class="token punctuation">(</span>fromIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token operator">=</span>toIndex<span class="token operator">-</span>fromIndex<span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        it<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u90A3\u6211\u4EEC\u5982\u4F55\u6B63\u786E\u7684\u5C06\u6570\u7EC4\u8F6C\u6362\u4E3A <code>ArrayList</code> ?</strong></p><p>1\u3001\u624B\u52A8\u5B9E\u73B0\u5DE5\u5177\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//JDK1.5+</span>
<span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">arrayToList</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> l <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>array<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">T</span> s <span class="token operator">:</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    l<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> l<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token class-name">Integer</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> myArray <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">arrayToList</span><span class="token punctuation">(</span>myArray<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//class java.util.ArrayList</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2\u3001\u6700\u7B80\u4FBF\u7684\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3\u3001\u4F7F\u7528 Java8 \u7684 <code>Stream</code>(\u63A8\u8350)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Integer</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> myArray <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">List</span> myList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>myArray<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u57FA\u672C\u7C7B\u578B\u4E5F\u53EF\u4EE5\u5B9E\u73B0\u8F6C\u6362\uFF08\u4F9D\u8D56boxed\u7684\u88C5\u7BB1\u64CD\u4F5C\uFF09</span>
<span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> myArray2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">List</span> myList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>myArray2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4\u3001\u4F7F\u7528 Guava</p>`,30),A=s("\u5BF9\u4E8E\u4E0D\u53EF\u53D8\u96C6\u5408\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528"),x={href:"https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java",target:"_blank",rel:"noopener noreferrer"},O=n("code",null,"ImmutableList",-1),S=s("\u7C7B\u53CA\u5176"),C={href:"https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java#L101",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"of()",-1),I=s("\u4E0E"),T={href:"https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java#L225",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"copyOf()",-1),V=s("\u5DE5\u5382\u65B9\u6CD5\uFF1A\uFF08\u53C2\u6570\u4E0D\u80FD\u4E3A\u7A7A\uFF09"),N=p(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> il <span class="token operator">=</span> <span class="token class-name">ImmutableList</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;elements&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// from varargs</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> il <span class="token operator">=</span> <span class="token class-name">ImmutableList</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>aStringArray<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// from array</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),U=s("\u5BF9\u4E8E\u53EF\u53D8\u96C6\u5408\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528"),J={href:"https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Lists.java",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"Lists",-1),B=s("\u7C7B\u53CA\u5176"),P={href:"https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Lists.java#L87",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"newArrayList()",-1),H=s("\u5DE5\u5382\u65B9\u6CD5\uFF1A"),D=p(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> l1 <span class="token operator">=</span> <span class="token class-name">Lists</span><span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span>anotherListOrCollection<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// from collection</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> l2 <span class="token operator">=</span> <span class="token class-name">Lists</span><span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span>aStringArray<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">// from array</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> l3 <span class="token operator">=</span> <span class="token class-name">Lists</span><span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span><span class="token string">&quot;or&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;elements&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// from varargs</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5\u3001\u4F7F\u7528 Apache Commons Collections</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>6\u3001 \u4F7F\u7528 Java9 \u7684 <code>List.of()</code>\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function K(R,X){const a=l("ExternalLinkIcon");return o(),c("div",null,[i,n("blockquote",null,[n("p",null,[k,n("a",r,[d,t(a)]),m])]),v,n("p",null,[b,g,y,f,w,h,L,n("a",j,[_,t(a)])]),q,n("p",null,[A,n("a",x,[O,t(a)]),S,n("a",C,[E,t(a)]),I,n("a",T,[M,t(a)]),V]),N,n("p",null,[U,n("a",J,[z,t(a)]),B,n("a",P,[F,t(a)]),H]),D])}var Q=e(u,[["render",K],["__file","java-collection-precautions-for-use.html.vue"]]);export{Q as default};
