import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as o,b as n,a as c,e as a,d as s,r as l}from"./app.3d6e11ca.js";const i={},u=a('<h2 id="atomic-\u539F\u5B50\u7C7B\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#atomic-\u539F\u5B50\u7C7B\u4ECB\u7ECD" aria-hidden="true">#</a> Atomic \u539F\u5B50\u7C7B\u4ECB\u7ECD</h2><p>Atomic \u7FFB\u8BD1\u6210\u4E2D\u6587\u662F\u539F\u5B50\u7684\u610F\u601D\u3002\u5728\u5316\u5B66\u4E0A\uFF0C\u6211\u4EEC\u77E5\u9053\u539F\u5B50\u662F\u6784\u6210\u4E00\u822C\u7269\u8D28\u7684\u6700\u5C0F\u5355\u4F4D\uFF0C\u5728\u5316\u5B66\u53CD\u5E94\u4E2D\u662F\u4E0D\u53EF\u5206\u5272\u7684\u3002\u5728\u6211\u4EEC\u8FD9\u91CC Atomic \u662F\u6307\u4E00\u4E2A\u64CD\u4F5C\u662F\u4E0D\u53EF\u4E2D\u65AD\u7684\u3002\u5373\u4F7F\u662F\u5728\u591A\u4E2A\u7EBF\u7A0B\u4E00\u8D77\u6267\u884C\u7684\u65F6\u5019\uFF0C\u4E00\u4E2A\u64CD\u4F5C\u4E00\u65E6\u5F00\u59CB\uFF0C\u5C31\u4E0D\u4F1A\u88AB\u5176\u4ED6\u7EBF\u7A0B\u5E72\u6270\u3002</p><p>\u6240\u4EE5\uFF0C\u6240\u8C13\u539F\u5B50\u7C7B\u8BF4\u7B80\u5355\u70B9\u5C31\u662F\u5177\u6709\u539F\u5B50/\u539F\u5B50\u64CD\u4F5C\u7279\u5F81\u7684\u7C7B\u3002</p><p>\u5E76\u53D1\u5305 <code>java.util.concurrent</code> \u7684\u539F\u5B50\u7C7B\u90FD\u5B58\u653E\u5728<code>java.util.concurrent.atomic</code>\u4E0B,\u5982\u4E0B\u56FE\u6240\u793A\u3002</p><p><img src="https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-6/JUC\u539F\u5B50\u7C7B\u6982\u89C8.png" alt="JUC\u539F\u5B50\u7C7B\u6982\u89C8" loading="lazy"></p><p>\u6839\u636E\u64CD\u4F5C\u7684\u6570\u636E\u7C7B\u578B\uFF0C\u53EF\u4EE5\u5C06 JUC \u5305\u4E2D\u7684\u539F\u5B50\u7C7B\u5206\u4E3A 4 \u7C7B</p><p><strong>\u57FA\u672C\u7C7B\u578B</strong></p><p>\u4F7F\u7528\u539F\u5B50\u7684\u65B9\u5F0F\u66F4\u65B0\u57FA\u672C\u7C7B\u578B</p><ul><li>AtomicInteger\uFF1A\u6574\u578B\u539F\u5B50\u7C7B</li><li>AtomicLong\uFF1A\u957F\u6574\u578B\u539F\u5B50\u7C7B</li><li>AtomicBoolean \uFF1A\u5E03\u5C14\u578B\u539F\u5B50\u7C7B</li></ul><p><strong>\u6570\u7EC4\u7C7B\u578B</strong></p><p>\u4F7F\u7528\u539F\u5B50\u7684\u65B9\u5F0F\u66F4\u65B0\u6570\u7EC4\u91CC\u7684\u67D0\u4E2A\u5143\u7D20</p><ul><li>AtomicIntegerArray\uFF1A\u6574\u578B\u6570\u7EC4\u539F\u5B50\u7C7B</li><li>AtomicLongArray\uFF1A\u957F\u6574\u578B\u6570\u7EC4\u539F\u5B50\u7C7B</li><li>AtomicReferenceArray \uFF1A\u5F15\u7528\u7C7B\u578B\u6570\u7EC4\u539F\u5B50\u7C7B</li></ul><p><strong>\u5F15\u7528\u7C7B\u578B</strong></p><ul><li>AtomicReference\uFF1A\u5F15\u7528\u7C7B\u578B\u539F\u5B50\u7C7B</li><li>AtomicMarkableReference\uFF1A\u539F\u5B50\u66F4\u65B0\u5E26\u6709\u6807\u8BB0\u7684\u5F15\u7528\u7C7B\u578B\u3002\u8BE5\u7C7B\u5C06 boolean \u6807\u8BB0\u4E0E\u5F15\u7528\u5173\u8054\u8D77\u6765\uFF0C\u4E5F\u53EF\u4EE5\u89E3\u51B3\u4F7F\u7528 CAS \u8FDB\u884C\u539F\u5B50\u66F4\u65B0\u65F6\u53EF\u80FD\u51FA\u73B0\u7684 ABA \u95EE\u9898\u3002</li><li>AtomicStampedReference \uFF1A\u539F\u5B50\u66F4\u65B0\u5E26\u6709\u7248\u672C\u53F7\u7684\u5F15\u7528\u7C7B\u578B\u3002\u8BE5\u7C7B\u5C06\u6574\u6570\u503C\u4E0E\u5F15\u7528\u5173\u8054\u8D77\u6765\uFF0C\u53EF\u7528\u4E8E\u89E3\u51B3\u539F\u5B50\u7684\u66F4\u65B0\u6570\u636E\u548C\u6570\u636E\u7684\u7248\u672C\u53F7\uFF0C\u53EF\u4EE5\u89E3\u51B3\u4F7F\u7528 CAS \u8FDB\u884C\u539F\u5B50\u66F4\u65B0\u65F6\u53EF\u80FD\u51FA\u73B0\u7684 ABA \u95EE\u9898\u3002</li></ul><p><strong>\u5BF9\u8C61\u7684\u5C5E\u6027\u4FEE\u6539\u7C7B\u578B</strong></p><ul><li>AtomicIntegerFieldUpdater:\u539F\u5B50\u66F4\u65B0\u6574\u578B\u5B57\u6BB5\u7684\u66F4\u65B0\u5668</li><li>AtomicLongFieldUpdater\uFF1A\u539F\u5B50\u66F4\u65B0\u957F\u6574\u578B\u5B57\u6BB5\u7684\u66F4\u65B0\u5668</li><li>AtomicReferenceFieldUpdater\uFF1A\u539F\u5B50\u66F4\u65B0\u5F15\u7528\u7C7B\u578B\u91CC\u7684\u5B57\u6BB5</li></ul>',16),k=s("\u{1F41B} \u4FEE\u6B63\uFF08\u53C2\u89C1\uFF1A"),r={href:"https://github.com/Snailclimb/JavaGuide/issues/626",target:"_blank",rel:"noopener noreferrer"},d=s("issue#626"),m=s("\uFF09"),v=s(" : "),b=n("code",null,"AtomicMarkableReference",-1),g=s(" \u4E0D\u80FD\u89E3\u51B3 ABA \u95EE\u9898\u3002"),f=a(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**

AtomicMarkableReference\u662F\u5C06\u4E00\u4E2Aboolean\u503C\u4F5C\u662F\u5426\u6709\u66F4\u6539\u7684\u6807\u8BB0\uFF0C\u672C\u8D28\u5C31\u662F\u5B83\u7684\u7248\u672C\u53F7\u53EA\u6709\u4E24\u4E2A\uFF0Ctrue\u548Cfalse\uFF0C

\u4FEE\u6539\u7684\u65F6\u5019\u5728\u8FD9\u4E24\u4E2A\u7248\u672C\u53F7\u4E4B\u95F4\u6765\u56DE\u5207\u6362\uFF0C\u8FD9\u6837\u505A\u5E76\u4E0D\u80FD\u89E3\u51B3ABA\u7684\u95EE\u9898\uFF0C\u53EA\u662F\u4F1A\u964D\u4F4EABA\u95EE\u9898\u53D1\u751F\u7684\u51E0\u7387\u800C\u5DF2

@author : mazh

@Date : 2020/1/17 14:41
*/</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SolveABAByAtomicMarkableReference</span> <span class="token punctuation">{</span>

       <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">AtomicMarkableReference</span> atomicMarkableReference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicMarkableReference</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">Thread</span> refT1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                atomicMarkableReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> atomicMarkableReference<span class="token punctuation">.</span><span class="token function">isMarked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">!</span>atomicMarkableReference<span class="token punctuation">.</span><span class="token function">isMarked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                atomicMarkableReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> atomicMarkableReference<span class="token punctuation">.</span><span class="token function">isMarked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">!</span>atomicMarkableReference<span class="token punctuation">.</span><span class="token function">isMarked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Thread</span> refT2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">boolean</span> marked <span class="token operator">=</span> atomicMarkableReference<span class="token punctuation">.</span><span class="token function">isMarked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">boolean</span> c3 <span class="token operator">=</span> atomicMarkableReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> marked<span class="token punctuation">,</span> <span class="token operator">!</span>marked<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DEtrue,\u5B9E\u9645\u5E94\u8BE5\u8FD4\u56DEfalse</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            refT1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            refT2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>CAS ABA \u95EE\u9898</strong></p><ul><li>\u63CF\u8FF0: \u7B2C\u4E00\u4E2A\u7EBF\u7A0B\u53D6\u5230\u4E86\u53D8\u91CF x \u7684\u503C A\uFF0C\u7136\u540E\u5DF4\u62C9\u5DF4\u62C9\u5E72\u522B\u7684\u4E8B\uFF0C\u603B\u4E4B\u5C31\u662F\u53EA\u62FF\u5230\u4E86\u53D8\u91CF x \u7684\u503C A\u3002\u8FD9\u6BB5\u65F6\u95F4\u5185\u7B2C\u4E8C\u4E2A\u7EBF\u7A0B\u4E5F\u53D6\u5230\u4E86\u53D8\u91CF x \u7684\u503C A\uFF0C\u7136\u540E\u628A\u53D8\u91CF x \u7684\u503C\u6539\u4E3A B\uFF0C\u7136\u540E\u5DF4\u62C9\u5DF4\u62C9\u5E72\u522B\u7684\u4E8B\uFF0C\u6700\u540E\u53C8\u628A\u53D8\u91CF x \u7684\u503C\u53D8\u4E3A A \uFF08\u76F8\u5F53\u4E8E\u8FD8\u539F\u4E86\uFF09\u3002\u5728\u8FD9\u4E4B\u540E\u7B2C\u4E00\u4E2A\u7EBF\u7A0B\u7EC8\u4E8E\u8FDB\u884C\u4E86\u53D8\u91CF x \u7684\u64CD\u4F5C\uFF0C\u4F46\u662F\u6B64\u65F6\u53D8\u91CF x \u7684\u503C\u8FD8\u662F A\uFF0C\u6240\u4EE5 compareAndSet \u64CD\u4F5C\u662F\u6210\u529F\u3002</li><li>\u4F8B\u5B50\u63CF\u8FF0(\u53EF\u80FD\u4E0D\u592A\u5408\u9002\uFF0C\u4F46\u597D\u7406\u89E3): \u5E74\u521D\uFF0C\u73B0\u91D1\u4E3A\u96F6\uFF0C\u7136\u540E\u901A\u8FC7\u6B63\u5E38\u52B3\u52A8\u8D5A\u4E86\u4E09\u767E\u4E07\uFF0C\u4E4B\u540E\u6B63\u5E38\u6D88\u8D39\u4E86\uFF08\u6BD4\u5982\u4E70\u623F\u5B50\uFF09\u4E09\u767E\u4E07\u3002\u5E74\u672B\uFF0C\u867D\u7136\u73B0\u91D1\u96F6\u6536\u5165\uFF08\u53EF\u80FD\u53D8\u6210\u5176\u4ED6\u5F62\u5F0F\u4E86\uFF09\uFF0C\u4F46\u662F\u8D5A\u4E86\u94B1\u662F\u4E8B\u5B9E\uFF0C\u8FD8\u662F\u5F97\u4EA4\u7A0E\u7684\uFF01</li><li>\u4EE3\u7801\u4F8B\u5B50\uFF08\u4EE5<code>AtomicInteger</code>\u4E3A\u4F8B\uFF09</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicInteger</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicIntegerDefectDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">defectOfABA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">defectOfABA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> atomicInteger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Thread</span> coreThread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>
                <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">final</span> <span class="token keyword">int</span> currentValue <span class="token operator">=</span> atomicInteger<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ------ currentValue=&quot;</span> <span class="token operator">+</span> currentValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">// \u8FD9\u6BB5\u76EE\u7684\uFF1A\u6A21\u62DF\u5904\u7406\u5176\u4ED6\u4E1A\u52A1\u82B1\u8D39\u7684\u65F6\u95F4</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">boolean</span> casResult <span class="token operator">=</span> atomicInteger<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token operator">+</span> <span class="token string">&quot; ------ currentValue=&quot;</span> <span class="token operator">+</span> currentValue
                            <span class="token operator">+</span> <span class="token string">&quot;, finalValue=&quot;</span> <span class="token operator">+</span> atomicInteger<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token operator">+</span> <span class="token string">&quot;, compareAndSet Result=&quot;</span> <span class="token operator">+</span> casResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        coreThread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u8FD9\u6BB5\u76EE\u7684\uFF1A\u4E3A\u4E86\u8BA9 coreThread \u7EBF\u7A0B\u5148\u8DD1\u8D77\u6765</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">Thread</span> amateurThread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>
                <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">int</span> currentValue <span class="token operator">=</span> atomicInteger<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">boolean</span> casResult <span class="token operator">=</span> atomicInteger<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token operator">+</span> <span class="token string">&quot; ------ currentValue=&quot;</span> <span class="token operator">+</span> currentValue
                            <span class="token operator">+</span> <span class="token string">&quot;, finalValue=&quot;</span> <span class="token operator">+</span> atomicInteger<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token operator">+</span> <span class="token string">&quot;, compareAndSet Result=&quot;</span> <span class="token operator">+</span> casResult<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    currentValue <span class="token operator">=</span> atomicInteger<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    casResult <span class="token operator">=</span> atomicInteger<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token operator">+</span> <span class="token string">&quot; ------ currentValue=&quot;</span> <span class="token operator">+</span> currentValue
                            <span class="token operator">+</span> <span class="token string">&quot;, finalValue=&quot;</span> <span class="token operator">+</span> atomicInteger<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token operator">+</span> <span class="token string">&quot;, compareAndSet Result=&quot;</span> <span class="token operator">+</span> casResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        amateurThread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u5185\u5BB9\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Thread-0 ------ currentValue=1
Thread-1 ------ currentValue=1, finalValue=2, compareAndSet Result=true
Thread-1 ------ currentValue=2, finalValue=1, compareAndSet Result=true
Thread-0 ------ currentValue=1, finalValue=2, compareAndSet Result=true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u6211\u4EEC\u6765\u8BE6\u7EC6\u4ECB\u7ECD\u4E00\u4E0B\u8FD9\u4E9B\u539F\u5B50\u7C7B\u3002</p><h2 id="\u57FA\u672C\u7C7B\u578B\u539F\u5B50\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u7C7B\u578B\u539F\u5B50\u7C7B" aria-hidden="true">#</a> \u57FA\u672C\u7C7B\u578B\u539F\u5B50\u7C7B</h2><h3 id="\u57FA\u672C\u7C7B\u578B\u539F\u5B50\u7C7B\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u7C7B\u578B\u539F\u5B50\u7C7B\u4ECB\u7ECD" aria-hidden="true">#</a> \u57FA\u672C\u7C7B\u578B\u539F\u5B50\u7C7B\u4ECB\u7ECD</h3><p>\u4F7F\u7528\u539F\u5B50\u7684\u65B9\u5F0F\u66F4\u65B0\u57FA\u672C\u7C7B\u578B</p><ul><li>AtomicInteger\uFF1A\u6574\u578B\u539F\u5B50\u7C7B</li><li>AtomicLong\uFF1A\u957F\u6574\u578B\u539F\u5B50\u7C7B</li><li>AtomicBoolean \uFF1A\u5E03\u5C14\u578B\u539F\u5B50\u7C7B</li></ul><p>\u4E0A\u9762\u4E09\u4E2A\u7C7B\u63D0\u4F9B\u7684\u65B9\u6CD5\u51E0\u4E4E\u76F8\u540C\uFF0C\u6240\u4EE5\u6211\u4EEC\u8FD9\u91CC\u4EE5 AtomicInteger \u4E3A\u4F8B\u5B50\u6765\u4ECB\u7ECD\u3002</p><p><strong>AtomicInteger \u7C7B\u5E38\u7528\u65B9\u6CD5</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u83B7\u53D6\u5F53\u524D\u7684\u503C</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndSet</span><span class="token punctuation">(</span><span class="token keyword">int</span> newValue<span class="token punctuation">)</span><span class="token comment">//\u83B7\u53D6\u5F53\u524D\u7684\u503C\uFF0C\u5E76\u8BBE\u7F6E\u65B0\u7684\u503C</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//\u83B7\u53D6\u5F53\u524D\u7684\u503C\uFF0C\u5E76\u81EA\u589E</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndDecrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u83B7\u53D6\u5F53\u524D\u7684\u503C\uFF0C\u5E76\u81EA\u51CF</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndAdd</span><span class="token punctuation">(</span><span class="token keyword">int</span> delta<span class="token punctuation">)</span> <span class="token comment">//\u83B7\u53D6\u5F53\u524D\u7684\u503C\uFF0C\u5E76\u52A0\u4E0A\u9884\u671F\u7684\u503C</span>
<span class="token keyword">boolean</span> <span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token keyword">int</span> expect<span class="token punctuation">,</span> <span class="token keyword">int</span> update<span class="token punctuation">)</span> <span class="token comment">//\u5982\u679C\u8F93\u5165\u7684\u6570\u503C\u7B49\u4E8E\u9884\u671F\u503C\uFF0C\u5219\u4EE5\u539F\u5B50\u65B9\u5F0F\u5C06\u8BE5\u503C\u8BBE\u7F6E\u4E3A\u8F93\u5165\u503C\uFF08update\uFF09</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">lazySet</span><span class="token punctuation">(</span><span class="token keyword">int</span> newValue<span class="token punctuation">)</span><span class="token comment">//\u6700\u7EC8\u8BBE\u7F6E\u4E3AnewValue,\u4F7F\u7528 lazySet \u8BBE\u7F6E\u4E4B\u540E\u53EF\u80FD\u5BFC\u81F4\u5176\u4ED6\u7EBF\u7A0B\u5728\u4E4B\u540E\u7684\u4E00\u5C0F\u6BB5\u65F6\u95F4\u5185\u8FD8\u662F\u53EF\u4EE5\u8BFB\u5230\u65E7\u7684\u503C\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="atomicinteger-\u5E38\u89C1\u65B9\u6CD5\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#atomicinteger-\u5E38\u89C1\u65B9\u6CD5\u4F7F\u7528" aria-hidden="true">#</a> AtomicInteger \u5E38\u89C1\u65B9\u6CD5\u4F7F\u7528</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicInteger</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicIntegerTest</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// TODO Auto-generated method stub</span>
		<span class="token keyword">int</span> temvalue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token class-name">AtomicInteger</span> i <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		temvalue <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">getAndSet</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;temvalue:&quot;</span> <span class="token operator">+</span> temvalue <span class="token operator">+</span> <span class="token string">&quot;;  i:&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//temvalue:0;  i:3</span>
		temvalue <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;temvalue:&quot;</span> <span class="token operator">+</span> temvalue <span class="token operator">+</span> <span class="token string">&quot;;  i:&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//temvalue:3;  i:4</span>
		temvalue <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">getAndAdd</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;temvalue:&quot;</span> <span class="token operator">+</span> temvalue <span class="token operator">+</span> <span class="token string">&quot;;  i:&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//temvalue:4;  i:9</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u57FA\u672C\u6570\u636E\u7C7B\u578B\u539F\u5B50\u7C7B\u7684\u4F18\u52BF" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u6570\u636E\u7C7B\u578B\u539F\u5B50\u7C7B\u7684\u4F18\u52BF" aria-hidden="true">#</a> \u57FA\u672C\u6570\u636E\u7C7B\u578B\u539F\u5B50\u7C7B\u7684\u4F18\u52BF</h3><p>\u901A\u8FC7\u4E00\u4E2A\u7B80\u5355\u4F8B\u5B50\u5E26\u5927\u5BB6\u770B\u4E00\u4E0B\u57FA\u672C\u6570\u636E\u7C7B\u578B\u539F\u5B50\u7C7B\u7684\u4F18\u52BF</p><p><strong>\u2460 \u591A\u7EBF\u7A0B\u73AF\u5883\u4E0D\u4F7F\u7528\u539F\u5B50\u7C7B\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\uFF08\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF09</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">//\u82E5\u8981\u7EBF\u7A0B\u5B89\u5168\u6267\u884C\u6267\u884Ccount++\uFF0C\u9700\u8981\u52A0\u9501</span>
        <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  count<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token keyword">return</span> count<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u2461 \u591A\u7EBF\u7A0B\u73AF\u5883\u4F7F\u7528\u539F\u5B50\u7C7B\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\uFF08\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF09</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Test2</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">AtomicInteger</span> count <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  count<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token comment">//\u4F7F\u7528AtomicInteger\u4E4B\u540E\uFF0C\u4E0D\u9700\u8981\u52A0\u9501\uFF0C\u4E5F\u53EF\u4EE5\u5B9E\u73B0\u7EBF\u7A0B\u5B89\u5168\u3002</span>
       <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> count<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="atomicinteger-\u7EBF\u7A0B\u5B89\u5168\u539F\u7406\u7B80\u5355\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#atomicinteger-\u7EBF\u7A0B\u5B89\u5168\u539F\u7406\u7B80\u5355\u5206\u6790" aria-hidden="true">#</a> AtomicInteger \u7EBF\u7A0B\u5B89\u5168\u539F\u7406\u7B80\u5355\u5206\u6790</h3><p>AtomicInteger \u7C7B\u7684\u90E8\u5206\u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">// setup to use Unsafe.compareAndSwapInt for updates\uFF08\u66F4\u65B0\u64CD\u4F5C\u65F6\u63D0\u4F9B\u201C\u6BD4\u8F83\u5E76\u66FF\u6362\u201D\u7684\u4F5C\u7528\uFF09</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Unsafe</span> unsafe <span class="token operator">=</span> <span class="token class-name">Unsafe</span><span class="token punctuation">.</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> valueOffset<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            valueOffset <span class="token operator">=</span> unsafe<span class="token punctuation">.</span>objectFieldOffset
                <span class="token punctuation">(</span><span class="token class-name">AtomicInteger</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> value<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AtomicInteger \u7C7B\u4E3B\u8981\u5229\u7528 CAS (compare and swap) + volatile \u548C native \u65B9\u6CD5\u6765\u4FDD\u8BC1\u539F\u5B50\u64CD\u4F5C\uFF0C\u4ECE\u800C\u907F\u514D synchronized \u7684\u9AD8\u5F00\u9500\uFF0C\u6267\u884C\u6548\u7387\u5927\u4E3A\u63D0\u5347\u3002</p><p>CAS \u7684\u539F\u7406\u662F\u62FF\u671F\u671B\u7684\u503C\u548C\u539F\u672C\u7684\u4E00\u4E2A\u503C\u4F5C\u6BD4\u8F83\uFF0C\u5982\u679C\u76F8\u540C\u5219\u66F4\u65B0\u6210\u65B0\u7684\u503C\u3002UnSafe \u7C7B\u7684 objectFieldOffset() \u65B9\u6CD5\u662F\u4E00\u4E2A\u672C\u5730\u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u662F\u7528\u6765\u62FF\u5230\u201C\u539F\u6765\u7684\u503C\u201D\u7684\u5185\u5B58\u5730\u5740\u3002\u53E6\u5916 value \u662F\u4E00\u4E2A volatile \u53D8\u91CF\uFF0C\u5728\u5185\u5B58\u4E2D\u53EF\u89C1\uFF0C\u56E0\u6B64 JVM \u53EF\u4EE5\u4FDD\u8BC1\u4EFB\u4F55\u65F6\u523B\u4EFB\u4F55\u7EBF\u7A0B\u603B\u80FD\u62FF\u5230\u8BE5\u53D8\u91CF\u7684\u6700\u65B0\u503C\u3002</p><h2 id="\u6570\u7EC4\u7C7B\u578B\u539F\u5B50\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u7C7B\u578B\u539F\u5B50\u7C7B" aria-hidden="true">#</a> \u6570\u7EC4\u7C7B\u578B\u539F\u5B50\u7C7B</h2><h3 id="\u6570\u7EC4\u7C7B\u578B\u539F\u5B50\u7C7B\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u7C7B\u578B\u539F\u5B50\u7C7B\u4ECB\u7ECD" aria-hidden="true">#</a> \u6570\u7EC4\u7C7B\u578B\u539F\u5B50\u7C7B\u4ECB\u7ECD</h3><p>\u4F7F\u7528\u539F\u5B50\u7684\u65B9\u5F0F\u66F4\u65B0\u6570\u7EC4\u91CC\u7684\u67D0\u4E2A\u5143\u7D20</p><ul><li>AtomicIntegerArray\uFF1A\u6574\u5F62\u6570\u7EC4\u539F\u5B50\u7C7B</li><li>AtomicLongArray\uFF1A\u957F\u6574\u5F62\u6570\u7EC4\u539F\u5B50\u7C7B</li><li>AtomicReferenceArray \uFF1A\u5F15\u7528\u7C7B\u578B\u6570\u7EC4\u539F\u5B50\u7C7B</li></ul><p>\u4E0A\u9762\u4E09\u4E2A\u7C7B\u63D0\u4F9B\u7684\u65B9\u6CD5\u51E0\u4E4E\u76F8\u540C\uFF0C\u6240\u4EE5\u6211\u4EEC\u8FD9\u91CC\u4EE5 AtomicIntegerArray \u4E3A\u4F8B\u5B50\u6765\u4ECB\u7ECD\u3002</p><p><strong>AtomicIntegerArray \u7C7B\u5E38\u7528\u65B9\u6CD5</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token comment">//\u83B7\u53D6 index=i \u4F4D\u7F6E\u5143\u7D20\u7684\u503C</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndSet</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> newValue<span class="token punctuation">)</span><span class="token comment">//\u8FD4\u56DE index=i \u4F4D\u7F6E\u7684\u5F53\u524D\u7684\u503C\uFF0C\u5E76\u5C06\u5176\u8BBE\u7F6E\u4E3A\u65B0\u503C\uFF1AnewValue</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token comment">//\u83B7\u53D6 index=i \u4F4D\u7F6E\u5143\u7D20\u7684\u503C\uFF0C\u5E76\u8BA9\u8BE5\u4F4D\u7F6E\u7684\u5143\u7D20\u81EA\u589E</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndDecrement</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token comment">//\u83B7\u53D6 index=i \u4F4D\u7F6E\u5143\u7D20\u7684\u503C\uFF0C\u5E76\u8BA9\u8BE5\u4F4D\u7F6E\u7684\u5143\u7D20\u81EA\u51CF</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndAdd</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> delta<span class="token punctuation">)</span> <span class="token comment">//\u83B7\u53D6 index=i \u4F4D\u7F6E\u5143\u7D20\u7684\u503C\uFF0C\u5E76\u52A0\u4E0A\u9884\u671F\u7684\u503C</span>
<span class="token keyword">boolean</span> <span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> expect<span class="token punctuation">,</span> <span class="token keyword">int</span> update<span class="token punctuation">)</span> <span class="token comment">//\u5982\u679C\u8F93\u5165\u7684\u6570\u503C\u7B49\u4E8E\u9884\u671F\u503C\uFF0C\u5219\u4EE5\u539F\u5B50\u65B9\u5F0F\u5C06 index=i \u4F4D\u7F6E\u7684\u5143\u7D20\u503C\u8BBE\u7F6E\u4E3A\u8F93\u5165\u503C\uFF08update\uFF09</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">lazySet</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> newValue<span class="token punctuation">)</span><span class="token comment">//\u6700\u7EC8 \u5C06index=i \u4F4D\u7F6E\u7684\u5143\u7D20\u8BBE\u7F6E\u4E3AnewValue,\u4F7F\u7528 lazySet \u8BBE\u7F6E\u4E4B\u540E\u53EF\u80FD\u5BFC\u81F4\u5176\u4ED6\u7EBF\u7A0B\u5728\u4E4B\u540E\u7684\u4E00\u5C0F\u6BB5\u65F6\u95F4\u5185\u8FD8\u662F\u53EF\u4EE5\u8BFB\u5230\u65E7\u7684\u503C\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="atomicintegerarray-\u5E38\u89C1\u65B9\u6CD5\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#atomicintegerarray-\u5E38\u89C1\u65B9\u6CD5\u4F7F\u7528" aria-hidden="true">#</a> AtomicIntegerArray \u5E38\u89C1\u65B9\u6CD5\u4F7F\u7528</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicIntegerArray</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicIntegerArrayTest</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// TODO Auto-generated method stub</span>
		<span class="token keyword">int</span> temvalue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
		<span class="token class-name">AtomicIntegerArray</span> i <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicIntegerArray</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		temvalue <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">getAndSet</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;temvalue:&quot;</span> <span class="token operator">+</span> temvalue <span class="token operator">+</span> <span class="token string">&quot;;  i:&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
		temvalue <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;temvalue:&quot;</span> <span class="token operator">+</span> temvalue <span class="token operator">+</span> <span class="token string">&quot;;  i:&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
		temvalue <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">getAndAdd</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;temvalue:&quot;</span> <span class="token operator">+</span> temvalue <span class="token operator">+</span> <span class="token string">&quot;;  i:&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5F15\u7528\u7C7B\u578B\u539F\u5B50\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5F15\u7528\u7C7B\u578B\u539F\u5B50\u7C7B" aria-hidden="true">#</a> \u5F15\u7528\u7C7B\u578B\u539F\u5B50\u7C7B</h2><h3 id="\u5F15\u7528\u7C7B\u578B\u539F\u5B50\u7C7B\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u5F15\u7528\u7C7B\u578B\u539F\u5B50\u7C7B\u4ECB\u7ECD" aria-hidden="true">#</a> \u5F15\u7528\u7C7B\u578B\u539F\u5B50\u7C7B\u4ECB\u7ECD</h3><p>\u57FA\u672C\u7C7B\u578B\u539F\u5B50\u7C7B\u53EA\u80FD\u66F4\u65B0\u4E00\u4E2A\u53D8\u91CF\uFF0C\u5982\u679C\u9700\u8981\u539F\u5B50\u66F4\u65B0\u591A\u4E2A\u53D8\u91CF\uFF0C\u9700\u8981\u4F7F\u7528 \u5F15\u7528\u7C7B\u578B\u539F\u5B50\u7C7B\u3002</p><ul><li>AtomicReference\uFF1A\u5F15\u7528\u7C7B\u578B\u539F\u5B50\u7C7B</li><li>AtomicStampedReference\uFF1A\u539F\u5B50\u66F4\u65B0\u5E26\u6709\u7248\u672C\u53F7\u7684\u5F15\u7528\u7C7B\u578B\u3002\u8BE5\u7C7B\u5C06\u6574\u6570\u503C\u4E0E\u5F15\u7528\u5173\u8054\u8D77\u6765\uFF0C\u53EF\u7528\u4E8E\u89E3\u51B3\u539F\u5B50\u7684\u66F4\u65B0\u6570\u636E\u548C\u6570\u636E\u7684\u7248\u672C\u53F7\uFF0C\u53EF\u4EE5\u89E3\u51B3\u4F7F\u7528 CAS \u8FDB\u884C\u539F\u5B50\u66F4\u65B0\u65F6\u53EF\u80FD\u51FA\u73B0\u7684 ABA \u95EE\u9898\u3002</li><li>AtomicMarkableReference \uFF1A\u539F\u5B50\u66F4\u65B0\u5E26\u6709\u6807\u8BB0\u7684\u5F15\u7528\u7C7B\u578B\u3002\u8BE5\u7C7B\u5C06 boolean \u6807\u8BB0\u4E0E\u5F15\u7528\u5173\u8054\u8D77\u6765\uFF0C<s>\u4E5F\u53EF\u4EE5\u89E3\u51B3\u4F7F\u7528 CAS \u8FDB\u884C\u539F\u5B50\u66F4\u65B0\u65F6\u53EF\u80FD\u51FA\u73B0\u7684 ABA \u95EE\u9898\u3002</s></li></ul><p>\u4E0A\u9762\u4E09\u4E2A\u7C7B\u63D0\u4F9B\u7684\u65B9\u6CD5\u51E0\u4E4E\u76F8\u540C\uFF0C\u6240\u4EE5\u6211\u4EEC\u8FD9\u91CC\u4EE5 AtomicReference \u4E3A\u4F8B\u5B50\u6765\u4ECB\u7ECD\u3002</p><h3 id="atomicreference-\u7C7B\u4F7F\u7528\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#atomicreference-\u7C7B\u4F7F\u7528\u793A\u4F8B" aria-hidden="true">#</a> AtomicReference \u7C7B\u4F7F\u7528\u793A\u4F8B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicReference</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicReferenceTest</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> ar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Person</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;SnailClimb&quot;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ar<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Person</span> updatePerson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;Daisy&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ar<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>person<span class="token punctuation">,</span> updatePerson<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> name<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> age<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\u9996\u5148\u521B\u5EFA\u4E86\u4E00\u4E2A Person \u5BF9\u8C61\uFF0C\u7136\u540E\u628A Person \u5BF9\u8C61\u8BBE\u7F6E\u8FDB AtomicReference \u5BF9\u8C61\u4E2D\uFF0C\u7136\u540E\u8C03\u7528 compareAndSet \u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u5C31\u662F\u901A\u8FC7 CAS \u64CD\u4F5C\u8BBE\u7F6E ar\u3002\u5982\u679C ar \u7684\u503C\u4E3A person \u7684\u8BDD\uFF0C\u5219\u5C06\u5176\u8BBE\u7F6E\u4E3A updatePerson\u3002\u5B9E\u73B0\u539F\u7406\u4E0E AtomicInteger \u7C7B\u4E2D\u7684 compareAndSet \u65B9\u6CD5\u76F8\u540C\u3002\u8FD0\u884C\u4E0A\u9762\u7684\u4EE3\u7801\u540E\u7684\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Daisy
20
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="atomicstampedreference-\u7C7B\u4F7F\u7528\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#atomicstampedreference-\u7C7B\u4F7F\u7528\u793A\u4F8B" aria-hidden="true">#</a> AtomicStampedReference \u7C7B\u4F7F\u7528\u793A\u4F8B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicStampedReference</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicStampedReferenceDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5B9E\u4F8B\u5316\u3001\u53D6\u5F53\u524D\u503C\u548C stamp \u503C</span>
        <span class="token keyword">final</span> <span class="token class-name">Integer</span> initialRef <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> initialStamp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">AtomicStampedReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> asr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicStampedReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>initialRef<span class="token punctuation">,</span> initialStamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;currentValue=&quot;</span> <span class="token operator">+</span> asr<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, currentStamp=&quot;</span> <span class="token operator">+</span> asr<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// compare and set</span>
        <span class="token keyword">final</span> <span class="token class-name">Integer</span> newReference <span class="token operator">=</span> <span class="token number">666</span><span class="token punctuation">,</span> newStamp <span class="token operator">=</span> <span class="token number">999</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> casResult <span class="token operator">=</span> asr<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>initialRef<span class="token punctuation">,</span> newReference<span class="token punctuation">,</span> initialStamp<span class="token punctuation">,</span> newStamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;currentValue=&quot;</span> <span class="token operator">+</span> asr<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot;, currentStamp=&quot;</span> <span class="token operator">+</span> asr<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot;, casResult=&quot;</span> <span class="token operator">+</span> casResult<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u7684\u503C\u548C\u5F53\u524D\u7684 stamp \u503C</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Integer</span> currentValue <span class="token operator">=</span> asr<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> currentStamp <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;currentValue=&quot;</span> <span class="token operator">+</span> currentValue <span class="token operator">+</span> <span class="token string">&quot;, currentStamp=&quot;</span> <span class="token operator">+</span> currentStamp<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5355\u72EC\u8BBE\u7F6E stamp \u503C</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> attemptStampResult <span class="token operator">=</span> asr<span class="token punctuation">.</span><span class="token function">attemptStamp</span><span class="token punctuation">(</span>newReference<span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;currentValue=&quot;</span> <span class="token operator">+</span> asr<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot;, currentStamp=&quot;</span> <span class="token operator">+</span> asr<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot;, attemptStampResult=&quot;</span> <span class="token operator">+</span> attemptStampResult<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u91CD\u65B0\u8BBE\u7F6E\u5F53\u524D\u503C\u548C stamp \u503C</span>
        asr<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>initialRef<span class="token punctuation">,</span> initialStamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;currentValue=&quot;</span> <span class="token operator">+</span> asr<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, currentStamp=&quot;</span> <span class="token operator">+</span> asr<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// [\u4E0D\u63A8\u8350\u4F7F\u7528\uFF0C\u9664\u975E\u641E\u6E05\u695A\u6CE8\u91CA\u7684\u610F\u601D\u4E86] weak compare and set</span>
        <span class="token comment">// \u56F0\u60D1\uFF01weakCompareAndSet \u8FD9\u4E2A\u65B9\u6CD5\u6700\u7EC8\u8FD8\u662F\u8C03\u7528 compareAndSet \u65B9\u6CD5\u3002[\u7248\u672C: jdk-8u191]</span>
        <span class="token comment">// \u4F46\u662F\u6CE8\u91CA\u4E0A\u5199\u7740 &quot;May fail spuriously and does not provide ordering guarantees,</span>
        <span class="token comment">// so is only rarely an appropriate alternative to compareAndSet.&quot;</span>
        <span class="token comment">// todo \u611F\u89C9\u6709\u53EF\u80FD\u662F jvm \u901A\u8FC7\u65B9\u6CD5\u540D\u5728 native \u65B9\u6CD5\u91CC\u9762\u505A\u4E86\u8F6C\u53D1</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> wCasResult <span class="token operator">=</span> asr<span class="token punctuation">.</span><span class="token function">weakCompareAndSet</span><span class="token punctuation">(</span>initialRef<span class="token punctuation">,</span> newReference<span class="token punctuation">,</span> initialStamp<span class="token punctuation">,</span> newStamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;currentValue=&quot;</span> <span class="token operator">+</span> asr<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot;, currentStamp=&quot;</span> <span class="token operator">+</span> asr<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot;, wCasResult=&quot;</span> <span class="token operator">+</span> wCasResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>currentValue=0, currentStamp=0
currentValue=666, currentStamp=999, casResult=true
currentValue=666, currentStamp=999
currentValue=666, currentStamp=88, attemptStampResult=true
currentValue=0, currentStamp=0
currentValue=666, currentStamp=999, wCasResult=true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="atomicmarkablereference-\u7C7B\u4F7F\u7528\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#atomicmarkablereference-\u7C7B\u4F7F\u7528\u793A\u4F8B" aria-hidden="true">#</a> AtomicMarkableReference \u7C7B\u4F7F\u7528\u793A\u4F8B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicMarkableReference</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicMarkableReferenceDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5B9E\u4F8B\u5316\u3001\u53D6\u5F53\u524D\u503C\u548C mark \u503C</span>
        <span class="token keyword">final</span> <span class="token class-name">Boolean</span> initialRef <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> initialMark <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">AtomicMarkableReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> amr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicMarkableReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>initialRef<span class="token punctuation">,</span> initialMark<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;currentValue=&quot;</span> <span class="token operator">+</span> amr<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, currentMark=&quot;</span> <span class="token operator">+</span> amr<span class="token punctuation">.</span><span class="token function">isMarked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// compare and set</span>
        <span class="token keyword">final</span> <span class="token class-name">Boolean</span> newReference1 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> newMark1 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> casResult <span class="token operator">=</span> amr<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>initialRef<span class="token punctuation">,</span> newReference1<span class="token punctuation">,</span> initialMark<span class="token punctuation">,</span> newMark1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;currentValue=&quot;</span> <span class="token operator">+</span> amr<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot;, currentMark=&quot;</span> <span class="token operator">+</span> amr<span class="token punctuation">.</span><span class="token function">isMarked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot;, casResult=&quot;</span> <span class="token operator">+</span> casResult<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u7684\u503C\u548C\u5F53\u524D\u7684 mark \u503C</span>
        <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Boolean</span> currentValue <span class="token operator">=</span> amr<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> currentMark <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;currentValue=&quot;</span> <span class="token operator">+</span> currentValue <span class="token operator">+</span> <span class="token string">&quot;, currentMark=&quot;</span> <span class="token operator">+</span> currentMark<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5355\u72EC\u8BBE\u7F6E mark \u503C</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> attemptMarkResult <span class="token operator">=</span> amr<span class="token punctuation">.</span><span class="token function">attemptMark</span><span class="token punctuation">(</span>newReference1<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;currentValue=&quot;</span> <span class="token operator">+</span> amr<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot;, currentMark=&quot;</span> <span class="token operator">+</span> amr<span class="token punctuation">.</span><span class="token function">isMarked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot;, attemptMarkResult=&quot;</span> <span class="token operator">+</span> attemptMarkResult<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u91CD\u65B0\u8BBE\u7F6E\u5F53\u524D\u503C\u548C mark \u503C</span>
        amr<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>initialRef<span class="token punctuation">,</span> initialMark<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;currentValue=&quot;</span> <span class="token operator">+</span> amr<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, currentMark=&quot;</span> <span class="token operator">+</span> amr<span class="token punctuation">.</span><span class="token function">isMarked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// [\u4E0D\u63A8\u8350\u4F7F\u7528\uFF0C\u9664\u975E\u641E\u6E05\u695A\u6CE8\u91CA\u7684\u610F\u601D\u4E86] weak compare and set</span>
        <span class="token comment">// \u56F0\u60D1\uFF01weakCompareAndSet \u8FD9\u4E2A\u65B9\u6CD5\u6700\u7EC8\u8FD8\u662F\u8C03\u7528 compareAndSet \u65B9\u6CD5\u3002[\u7248\u672C: jdk-8u191]</span>
        <span class="token comment">// \u4F46\u662F\u6CE8\u91CA\u4E0A\u5199\u7740 &quot;May fail spuriously and does not provide ordering guarantees,</span>
        <span class="token comment">// so is only rarely an appropriate alternative to compareAndSet.&quot;</span>
        <span class="token comment">// todo \u611F\u89C9\u6709\u53EF\u80FD\u662F jvm \u901A\u8FC7\u65B9\u6CD5\u540D\u5728 native \u65B9\u6CD5\u91CC\u9762\u505A\u4E86\u8F6C\u53D1</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> wCasResult <span class="token operator">=</span> amr<span class="token punctuation">.</span><span class="token function">weakCompareAndSet</span><span class="token punctuation">(</span>initialRef<span class="token punctuation">,</span> newReference1<span class="token punctuation">,</span> initialMark<span class="token punctuation">,</span> newMark1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;currentValue=&quot;</span> <span class="token operator">+</span> amr<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot;, currentMark=&quot;</span> <span class="token operator">+</span> amr<span class="token punctuation">.</span><span class="token function">isMarked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot;, wCasResult=&quot;</span> <span class="token operator">+</span> wCasResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>currentValue=null, currentMark=false
currentValue=true, currentMark=true, casResult=true
currentValue=true, currentMark=true
currentValue=true, currentMark=false, attemptMarkResult=true
currentValue=null, currentMark=false
currentValue=true, currentMark=true, wCasResult=true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5BF9\u8C61\u7684\u5C5E\u6027\u4FEE\u6539\u7C7B\u578B\u539F\u5B50\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u7684\u5C5E\u6027\u4FEE\u6539\u7C7B\u578B\u539F\u5B50\u7C7B" aria-hidden="true">#</a> \u5BF9\u8C61\u7684\u5C5E\u6027\u4FEE\u6539\u7C7B\u578B\u539F\u5B50\u7C7B</h2><h3 id="\u5BF9\u8C61\u7684\u5C5E\u6027\u4FEE\u6539\u7C7B\u578B\u539F\u5B50\u7C7B\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u7684\u5C5E\u6027\u4FEE\u6539\u7C7B\u578B\u539F\u5B50\u7C7B\u4ECB\u7ECD" aria-hidden="true">#</a> \u5BF9\u8C61\u7684\u5C5E\u6027\u4FEE\u6539\u7C7B\u578B\u539F\u5B50\u7C7B\u4ECB\u7ECD</h3><p>\u5982\u679C\u9700\u8981\u539F\u5B50\u66F4\u65B0\u67D0\u4E2A\u7C7B\u91CC\u7684\u67D0\u4E2A\u5B57\u6BB5\u65F6\uFF0C\u9700\u8981\u7528\u5230\u5BF9\u8C61\u7684\u5C5E\u6027\u4FEE\u6539\u7C7B\u578B\u539F\u5B50\u7C7B\u3002</p><ul><li>AtomicIntegerFieldUpdater:\u539F\u5B50\u66F4\u65B0\u6574\u5F62\u5B57\u6BB5\u7684\u66F4\u65B0\u5668</li><li>AtomicLongFieldUpdater\uFF1A\u539F\u5B50\u66F4\u65B0\u957F\u6574\u5F62\u5B57\u6BB5\u7684\u66F4\u65B0\u5668</li><li>AtomicReferenceFieldUpdater \uFF1A\u539F\u5B50\u66F4\u65B0\u5F15\u7528\u7C7B\u578B\u91CC\u7684\u5B57\u6BB5\u7684\u66F4\u65B0\u5668</li></ul><p>\u8981\u60F3\u539F\u5B50\u5730\u66F4\u65B0\u5BF9\u8C61\u7684\u5C5E\u6027\u9700\u8981\u4E24\u6B65\u3002\u7B2C\u4E00\u6B65\uFF0C\u56E0\u4E3A\u5BF9\u8C61\u7684\u5C5E\u6027\u4FEE\u6539\u7C7B\u578B\u539F\u5B50\u7C7B\u90FD\u662F\u62BD\u8C61\u7C7B\uFF0C\u6240\u4EE5\u6BCF\u6B21\u4F7F\u7528\u90FD\u5FC5\u987B\u4F7F\u7528\u9759\u6001\u65B9\u6CD5 newUpdater()\u521B\u5EFA\u4E00\u4E2A\u66F4\u65B0\u5668\uFF0C\u5E76\u4E14\u9700\u8981\u8BBE\u7F6E\u60F3\u8981\u66F4\u65B0\u7684\u7C7B\u548C\u5C5E\u6027\u3002\u7B2C\u4E8C\u6B65\uFF0C\u66F4\u65B0\u7684\u5BF9\u8C61\u5C5E\u6027\u5FC5\u987B\u4F7F\u7528 public volatile \u4FEE\u9970\u7B26\u3002</p><p>\u4E0A\u9762\u4E09\u4E2A\u7C7B\u63D0\u4F9B\u7684\u65B9\u6CD5\u51E0\u4E4E\u76F8\u540C\uFF0C\u6240\u4EE5\u6211\u4EEC\u8FD9\u91CC\u4EE5 <code>AtomicIntegerFieldUpdater</code>\u4E3A\u4F8B\u5B50\u6765\u4ECB\u7ECD\u3002</p><h3 id="atomicintegerfieldupdater-\u7C7B\u4F7F\u7528\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#atomicintegerfieldupdater-\u7C7B\u4F7F\u7528\u793A\u4F8B" aria-hidden="true">#</a> AtomicIntegerFieldUpdater \u7C7B\u4F7F\u7528\u793A\u4F8B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicIntegerFieldUpdater</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicIntegerFieldUpdaterTest</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">AtomicIntegerFieldUpdater</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> a <span class="token operator">=</span> <span class="token class-name">AtomicIntegerFieldUpdater</span><span class="token punctuation">.</span><span class="token function">newUpdater</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;Java&quot;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 22</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 23</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
	<span class="token keyword">public</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> name<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> age<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>22
23
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2><ul><li>\u300AJava \u5E76\u53D1\u7F16\u7A0B\u7684\u827A\u672F\u300B</li></ul>`,65);function y(w,h){const t=l("ExternalLinkIcon");return e(),o("div",null,[u,n("blockquote",null,[n("p",null,[n("strong",null,[k,n("a",r,[d,c(t)]),m]),v,b,g])]),f])}var q=p(i,[["render",y],["__file","atomic-classes.html.vue"]]);export{q as default};
