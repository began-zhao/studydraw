import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c as i,b as s,a as l,e as c,d as n,r as p}from"./app.b9e78213.js";const d={},t=c(`<p>Bash \u63D0\u4F9B\u4E09\u79CD\u5FAA\u73AF\u8BED\u6CD5 <code>for</code>\u3001<code>while</code> \u548C <code>until</code>\u3002</p><h2 id="while-\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#while-\u5FAA\u73AF" aria-hidden="true">#</a> while \u5FAA\u73AF</h2><p><code>while</code> \u5FAA\u73AF\u6709\u4E00\u4E2A\u5224\u65AD\u6761\u4EF6\uFF0C\u53EA\u8981\u7B26\u5408\u6761\u4EF6\uFF0C\u5C31\u4E0D\u65AD\u5FAA\u73AF\u6267\u884C\u6307\u5B9A\u7684\u8BED\u53E5\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">while</span> condition<span class="token punctuation">;</span> <span class="token keyword">do</span>
  commands
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u53EA\u8981\u6EE1\u8DB3\u6761\u4EF6 <code>condition</code>\uFF0C\u5C31\u4F1A\u6267\u884C\u547D\u4EE4 <code>commands</code>\u3002\u7136\u540E\uFF0C\u518D\u6B21\u5224\u65AD\u662F\u5426\u6EE1\u8DB3\u6761\u4EF6 <code>condition</code>\uFF0C\u53EA\u8981\u6EE1\u8DB3\uFF0C\u5C31\u4F1A\u4E00\u76F4\u6267\u884C\u4E0B\u53BB\u3002\u53EA\u6709\u4E0D\u6EE1\u8DB3\u6761\u4EF6\uFF0C\u624D\u4F1A\u9000\u51FA\u5FAA\u73AF\u3002</p><p>\u5FAA\u73AF\u6761\u4EF6 <code>condition</code> \u53EF\u4EE5\u4F7F\u7528 <code>test</code> \u547D\u4EE4\uFF0C\u8DDF <code>if</code> \u7ED3\u6784\u7684\u5224\u65AD\u6761\u4EF6\u5199\u6CD5\u4E00\u81F4\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token assign-left variable">number</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token keyword">while</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$number</span>&quot;</span> -lt <span class="token number">10</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;Number = <span class="token variable">$number</span>&quot;</span>
  <span class="token assign-left variable">number</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>number <span class="token operator">+</span> <span class="token number">1</span><span class="token variable">))</span></span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0C\u53EA\u8981\u53D8\u91CF <code>$number</code> \u5C0F\u4E8E 10\uFF0C\u5C31\u4F1A\u4E0D\u65AD\u52A0 1\uFF0C\u76F4\u5230 <code>$number</code> \u7B49\u4E8E 10\uFF0C\u7136\u540E\u9000\u51FA\u5FAA\u73AF\u3002</p><p>\u5173\u952E\u5B57 <code>do</code> \u53EF\u4EE5\u8DDF <code>while</code> \u4E0D\u5728\u540C\u4E00\u884C\uFF0C\u8FD9\u65F6\u4E24\u8005\u4E4B\u95F4\u4E0D\u9700\u8981\u4F7F\u7528\u5206\u53F7\u5206\u9694\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">while</span> <span class="token boolean">true</span>
<span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&#39;Hi, while looping ...&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4F8B\u5B50\u4F1A\u65E0\u9650\u5FAA\u73AF\uFF0C\u53EF\u4EE5\u6309\u4E0B <code>Ctrl + c</code> \u505C\u6B62\u3002</p><p><code>while</code> \u5FAA\u73AF\u5199\u6210\u4E00\u884C\uFF0C\u4E5F\u662F\u53EF\u4EE5\u7684\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">while</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;Hi, while looping ...&#39;</span><span class="token punctuation">;</span> <span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>while</code> \u7684\u6761\u4EF6\u90E8\u5206\u4E5F\u53EF\u4EE5\u662F\u6267\u884C\u4E00\u4E2A\u547D\u4EE4\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">while</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;ECHO&#39;</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;Hi, while looping ...&#39;</span><span class="token punctuation">;</span> <span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0C\u5224\u65AD\u6761\u4EF6\u662F <code>echo &#39;ECHO&#39;</code>\u3002\u7531\u4E8E\u8FD9\u4E2A\u547D\u4EE4\u603B\u662F\u6267\u884C\u6210\u529F\uFF0C\u6240\u4EE5\u4E0A\u9762\u547D\u4EE4\u4F1A\u4EA7\u751F\u65E0\u9650\u5FAA\u73AF\u3002</p><p><code>while</code> \u7684\u6761\u4EF6\u90E8\u5206\u53EF\u4EE5\u6267\u884C\u4EFB\u610F\u6570\u91CF\u7684\u547D\u4EE4\uFF0C\u4F46\u662F\u6267\u884C\u7ED3\u679C\u7684\u771F\u4F2A\u53EA\u770B\u6700\u540E\u4E00\u4E2A\u547D\u4EE4\u7684\u6267\u884C\u7ED3\u679C\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">while</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;Hi, looping ...&#39;</span><span class="token punctuation">;</span> <span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u8FD0\u884C\u540E\uFF0C\u4E0D\u4F1A\u6709\u4EFB\u4F55\u8F93\u51FA\uFF0C\u56E0\u4E3A <code>while</code> \u7684\u6700\u540E\u4E00\u4E2A\u547D\u4EE4\u662F <code>false</code>\u3002</p><h2 id="until-\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#until-\u5FAA\u73AF" aria-hidden="true">#</a> until \u5FAA\u73AF</h2><p><code>until</code> \u5FAA\u73AF\u4E0E <code>while</code> \u5FAA\u73AF\u6070\u597D\u76F8\u53CD\uFF0C\u53EA\u8981\u4E0D\u7B26\u5408\u5224\u65AD\u6761\u4EF6(\u5224\u65AD\u6761\u4EF6\u5931\u8D25)\uFF0C\u5C31\u4E0D\u65AD\u5FAA\u73AF\u6267\u884C\u6307\u5B9A\u7684\u8BED\u53E5\u3002\u4E00\u65E6\u7B26\u5408\u5224\u65AD\u6761\u4EF6\uFF0C\u5C31\u9000\u51FA\u5FAA\u73AF\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">until</span> condition<span class="token punctuation">;</span> <span class="token keyword">do</span>
  commands
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u952E\u5B57 <code>do</code> \u53EF\u4EE5\u4E0E <code>until</code> \u4E0D\u5199\u5728\u540C\u4E00\u884C\uFF0C\u8FD9\u65F6\u4E24\u8005\u4E4B\u95F4\u4E0D\u9700\u8981\u5206\u53F7\u5206\u9694\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">until</span> condition
<span class="token keyword">do</span>
  commands
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token keyword">until</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;Hi, until looping ...&#39;</span><span class="token punctuation">;</span> <span class="token keyword">done</span>
Hi, <span class="token keyword">until</span> looping <span class="token punctuation">..</span>.
Hi, <span class="token keyword">until</span> looping <span class="token punctuation">..</span>.
Hi, <span class="token keyword">until</span> looping <span class="token punctuation">..</span>.
^C
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>until</code> \u7684\u90E8\u5206\u4E00\u76F4\u4E3A <code>false</code>\uFF0C\u5BFC\u81F4\u547D\u4EE4\u65E0\u9650\u8FD0\u884C\uFF0C\u5FC5\u987B\u6309\u4E0B <code>Ctrl + c</code> \u7EC8\u6B62\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token assign-left variable">number</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token keyword">until</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$number</span>&quot;</span> -ge <span class="token number">10</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;Number = <span class="token variable">$number</span>&quot;</span>
  <span class="token assign-left variable">number</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>number <span class="token operator">+</span> <span class="token number">1</span><span class="token variable">))</span></span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0C\u53EA\u8981\u53D8\u91CF <code>number</code> \u5C0F\u4E8E 10\uFF0C\u5C31\u4F1A\u4E0D\u65AD\u52A0 1\uFF0C\u76F4\u5230 <code>number</code> \u5927\u4E8E\u7B49\u4E8E 10\uFF0C\u5C31\u9000\u51FA\u5FAA\u73AF\u3002</p><p><code>until</code> \u7684\u6761\u4EF6\u90E8\u5206\u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A\u547D\u4EE4\uFF0C\u8868\u793A\u5728\u8FD9\u4E2A\u547D\u4EE4\u6267\u884C\u6210\u529F\u4E4B\u524D\uFF0C\u4E0D\u65AD\u91CD\u590D\u5C1D\u8BD5\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">until</span> <span class="token function">cp</span> <span class="token variable">$1</span> <span class="token variable">$2</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&#39;Attempt to copy failed. waiting...&#39;</span>
  <span class="token function">sleep</span> <span class="token number">5</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u8868\u793A\uFF0C\u53EA\u8981 <code>cp $1 $2</code> \u8FD9\u4E2A\u547D\u4EE4\u6267\u884C\u4E0D\u6210\u529F\uFF0C\u5C31 5 \u79D2\u949F\u540E\u518D\u5C1D\u8BD5\u4E00\u6B21\uFF0C\u76F4\u5230\u6210\u529F\u4E3A\u6B62\u3002</p><p><code>until</code> \u5FAA\u73AF\u90FD\u53EF\u4EE5\u8F6C\u4E3A <code>while</code> \u5FAA\u73AF\uFF0C\u53EA\u8981\u628A\u6761\u4EF6\u8BBE\u4E3A\u5426\u5B9A\u5373\u53EF\u3002\u4E0A\u9762\u8FD9\u4E2A\u4F8B\u5B50\u53EF\u4EE5\u6539\u5199\u5982\u4E0B\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">while</span> <span class="token operator">!</span> <span class="token function">cp</span> <span class="token variable">$1</span> <span class="token variable">$2</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&#39;Attempt to copy failed. waiting...&#39;</span>
  <span class="token function">sleep</span> <span class="token number">5</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u822C\u6765\u8BF4\uFF0C<code>until</code> \u7528\u5F97\u6BD4\u8F83\u5C11\uFF0C\u5B8C\u5168\u53EF\u4EE5\u7EDF\u4E00\u90FD\u4F7F\u7528 <code>while</code>\u3002</p><h2 id="for-in-\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#for-in-\u5FAA\u73AF" aria-hidden="true">#</a> <code>for...in</code> \u5FAA\u73AF</h2><p><code>for...in</code> \u5FAA\u73AF\u7528\u4E8E\u904D\u5386\u5217\u8868\u7684\u6BCF\u4E00\u9879\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token for-or-select variable">variable</span> <span class="token keyword">in</span> list
<span class="token keyword">do</span>
  commands
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u8BED\u6CD5\u4E2D\uFF0C<code>for</code> \u5FAA\u73AF\u4F1A\u4F9D\u6B21\u4ECE <code>list</code> \u5217\u8868\u4E2D\u53D6\u51FA\u4E00\u9879\uFF0C\u4F5C\u4E3A\u53D8\u91CF <code>variable</code>\uFF0C\u7136\u540E\u5728\u5FAA\u73AF\u4F53\u4E2D\u8FDB\u884C\u5904\u7406\u3002</p><p>\u5173\u952E\u8BCD <code>do</code> \u53EF\u4EE5\u8DDF <code>for</code> \u5199\u5728\u540C\u4E00\u884C\uFF0C\u4E24\u8005\u4F7F\u7528\u5206\u53F7\u5206\u9694\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token for-or-select variable">variable</span> <span class="token keyword">in</span> list<span class="token punctuation">;</span> <span class="token keyword">do</span>
  commands
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> word1 word2 word3<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token variable">$i</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0C<code>word1 word2 word3</code> \u662F\u4E00\u4E2A\u5305\u542B\u4E09\u4E2A\u5355\u8BCD\u7684\u5217\u8868\uFF0C\u53D8\u91CF <code>i</code> \u4F9D\u6B21\u7B49\u4E8E <code>word1</code>\u3001<code>word2</code>\u3001<code>word3</code>\uFF0C\u547D\u4EE4 <code>echo $i</code> \u5219\u4F1A\u76F8\u5E94\u5730\u6267\u884C\u4E09\u6B21\u3002</p><p>\u5217\u8868\u53EF\u4EE5\u7531\u901A\u914D\u7B26\u4EA7\u751F\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> *.png<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token function">ls</span> -l <span class="token variable">$i</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0C<code>*.png</code> \u4F1A\u66FF\u6362\u6210\u5F53\u524D\u76EE\u5F55\u4E2D\u6240\u6709 PNG \u56FE\u7247\u6587\u4EF6\uFF0C\u53D8\u91CF <code>i</code> \u4F1A\u4F9D\u6B21\u7B49\u4E8E\u6BCF\u4E00\u4E2A\u6587\u4EF6\u3002</p><p>\u5217\u8868\u4E5F\u53EF\u4EE5\u901A\u8FC7\u5B50\u547D\u4EE4\u4EA7\u751F\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> ~/.bash_profile<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token variable">))</span></span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;Word <span class="token variable">$count</span> (<span class="token variable">$i</span>) contains <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> -n $i <span class="token operator">|</span> <span class="token function">wc</span> -c<span class="token variable">)</span></span> characters&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0C<code>cat ~/.bash_profile</code> \u547D\u4EE4\u4F1A\u8F93\u51FA <code>~/.bash_profile</code> \u6587\u4EF6\u7684\u5185\u5BB9\uFF0C\u7136\u540E\u901A\u8FC7\u904D\u5386\u6BCF\u4E00\u4E2A\u8BCD\uFF0C\u8BA1\u7B97\u8BE5\u6587\u4EF6\u4E00\u5171\u5305\u542B\u591A\u5C11\u4E2A\u8BCD\uFF0C\u4EE5\u53CA\u6BCF\u4E2A\u8BCD\u6709\u591A\u5C11\u4E2A\u5B57\u7B26\u3002</p><p><code>in list</code> \u7684\u90E8\u5206\u53EF\u4EE5\u7701\u7565\uFF0C\u8FD9\u65F6 <code>list</code> \u9ED8\u8BA4\u7B49\u4E8E\u811A\u672C\u7684\u6240\u6709\u53C2\u6570 <code>$@</code>\u3002\u4F46\u662F\uFF0C\u4E3A\u4E86\u53EF\u8BFB\u6027\uFF0C\u6700\u597D\u8FD8\u662F\u4E0D\u8981\u7701\u7565\uFF0C\u53C2\u8003\u4E0B\u9762\u7684\u4F8B\u5B50\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">for</span> filename<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$filename</span>&quot;</span>
<span class="token keyword">done</span>

<span class="token comment"># \u7B49\u540C\u4E8E</span>

<span class="token keyword">for</span> <span class="token for-or-select variable">filename</span> <span class="token keyword">in</span> <span class="token string">&quot;<span class="token variable">$@</span>&quot;</span> <span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$filename</span>&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u51FD\u6570\u4F53\u4E2D\u4E5F\u662F\u4E00\u6837\u7684\uFF0C<code>for...in</code> \u5FAA\u73AF\u7701\u7565 <code>in list</code> \u7684\u90E8\u5206\uFF0C\u5219 <code>list</code> \u9ED8\u8BA4\u7B49\u4E8E\u51FD\u6570\u7684\u6240\u6709\u53C2\u6570\u3002</p><h2 id="for-\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#for-\u5FAA\u73AF" aria-hidden="true">#</a> for \u5FAA\u73AF</h2><p><code>for</code> \u5FAA\u73AF\u8FD8\u652F\u6301 C \u8BED\u8A00\u7684\u5FAA\u73AF\u8BED\u6CD5\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span> expression1<span class="token punctuation">;</span> expression2<span class="token punctuation">;</span> expression3 <span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  commands
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>expression1</code> \u7528\u6765\u521D\u59CB\u5316\u5FAA\u73AF\u6761\u4EF6\uFF0C<code>expression2</code> \u7528\u6765\u51B3\u5B9A\u5FAA\u73AF\u7ED3\u675F\u7684\u6761\u4EF6\uFF0C<code>expression3</code> \u5728\u6BCF\u6B21\u5FAA\u73AF\u8FED\u4EE3\u7684\u672B\u5C3E\u6267\u884C\uFF0C\u7528\u4E8E\u66F4\u65B0\u503C\u3002</p><p>\u6CE8\u610F\uFF0C\u5FAA\u73AF\u6761\u4EF6\u653E\u5728\u53CC\u91CD\u5706\u62EC\u53F7\u4E4B\u4E2D\u3002\u53E6\u5916\uFF0C\u5706\u62EC\u53F7\u4E4B\u4E2D\u4F7F\u7528\u53D8\u91CF\uFF0C\u4E0D\u5FC5\u52A0\u4E0A\u7F8E\u5143\u7B26\u53F7 <code>$</code>\u3002</p><p>\u5B83\u7B49\u540C\u4E8E\u4E0B\u9762\u7684 <code>while</code> \u5FAA\u73AF\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token variable"><span class="token punctuation">((</span> expression1 <span class="token punctuation">))</span></span>
<span class="token keyword">while</span> <span class="token variable"><span class="token punctuation">((</span> expression2 <span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  commands
  <span class="token variable"><span class="token punctuation">((</span> expression3 <span class="token punctuation">))</span></span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span> <span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token variable">$i</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u521D\u59CB\u5316\u53D8\u91CF <code>i</code> \u7684\u503C\u4E3A 0\uFF0C\u5FAA\u73AF\u6267\u884C\u7684\u6761\u4EF6\u662F <code>i</code> \u5C0F\u4E8E 5\u3002\u6BCF\u6B21\u5FAA\u73AF\u8FED\u4EE3\u7ED3\u675F\u65F6\uFF0C<code>i</code> \u7684\u503C\u52A0 1\u3002</p><p><code>for</code> \u6761\u4EF6\u90E8\u5206\u7684\u4E09\u4E2A\u8BED\u53E5\uFF0C\u90FD\u53EF\u4EE5\u7701\u7565\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">))</span></span>
<span class="token keyword">do</span>
  <span class="token builtin class-name">read</span> var
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$var</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;.&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">break</span>
  <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u811A\u672C\u4F1A\u53CD\u590D\u8BFB\u53D6\u547D\u4EE4\u884C\u8F93\u5165\uFF0C\u76F4\u5230\u7528\u6237\u8F93\u5165\u4E86\u4E00\u4E2A\u70B9(<code>.</code>)\u4F4D\u4E3A\u6B62\uFF0C\u624D\u4F1A\u8DF3\u51FA\u5FAA\u73AF\u3002</p><h2 id="break-continue" tabindex="-1"><a class="header-anchor" href="#break-continue" aria-hidden="true">#</a> break\uFF0Ccontinue</h2><p>Bash \u63D0\u4F9B\u4E86\u4E24\u4E2A\u5185\u90E8\u547D\u4EE4 <code>break</code> \u548C <code>continue</code>\uFF0C\u7528\u6765\u5728\u5FAA\u73AF\u5185\u90E8\u8DF3\u51FA\u5FAA\u73AF\u3002</p><p><code>break</code> \u547D\u4EE4\u7ACB\u5373\u7EC8\u6B62\u5FAA\u73AF\uFF0C\u7A0B\u5E8F\u7EE7\u7EED\u6267\u884C\u5FAA\u73AF\u5757\u4E4B\u540E\u7684\u8BED\u53E5\uFF0C\u5373\u4E0D\u518D\u6267\u884C\u5269\u4E0B\u7684\u5FAA\u73AF\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token keyword">for</span> <span class="token for-or-select variable">number</span> <span class="token keyword">in</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span>
<span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;number is <span class="token variable">$number</span>&quot;</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$number</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;3&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">break</span>
  <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u53EA\u4F1A\u6253\u5370 3 \u884C\u7ED3\u679C\u3002\u4E00\u65E6\u53D8\u91CF <code>$number</code> \u7B49\u4E8E 3\uFF0C\u5C31\u4F1A\u8DF3\u51FA\u5FAA\u73AF\uFF0C\u4E0D\u518D\u7EE7\u7EED\u6267\u884C\u3002</p><p><code>continue</code> \u547D\u4EE4\u7ACB\u5373\u7EC8\u6B62\u672C\u8F6E\u5FAA\u73AF\uFF0C\u5F00\u59CB\u6267\u884C\u4E0B\u4E00\u8F6E\u5FAA\u73AF\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token keyword">while</span> <span class="token builtin class-name">read</span> -p <span class="token string">&quot;What file do you want to test?&quot;</span> filename
<span class="token keyword">do</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -e <span class="token string">&quot;<span class="token variable">$filename</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;The file does not exist.&quot;</span>
    <span class="token builtin class-name">continue</span>
  <span class="token keyword">fi</span>

  <span class="token builtin class-name">echo</span> <span class="token string">&quot;You entered a valid file..&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0C\u53EA\u8981\u7528\u6237\u8F93\u5165\u7684\u6587\u4EF6\u4E0D\u5B58\u5728\uFF0C<code>continue</code> \u547D\u4EE4\u5C31\u4F1A\u751F\u6548\uFF0C\u76F4\u63A5\u8FDB\u5165\u4E0B\u4E00\u8F6E\u5FAA\u73AF(\u8BA9\u7528\u6237\u91CD\u65B0\u8F93\u5165\u6587\u4EF6\u540D)\uFF0C\u4E0D\u518D\u6267\u884C\u540E\u9762\u7684\u6253\u5370\u8BED\u53E5\u3002</p><h2 id="select-\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#select-\u7ED3\u6784" aria-hidden="true">#</a> select \u7ED3\u6784</h2><p><code>select</code> \u7ED3\u6784\u4E3B\u8981\u7528\u6765\u751F\u6210\u7B80\u5355\u7684\u83DC\u5355\u3002\u5B83\u7684\u8BED\u6CD5\u4E0E <code>for...in</code> \u5FAA\u73AF\u57FA\u672C\u4E00\u81F4\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">select</span> name
<span class="token punctuation">[</span>in list<span class="token punctuation">]</span>
<span class="token keyword">do</span>
  commands
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Bash \u4F1A\u5BF9 <code>select</code> \u4F9D\u6B21\u8FDB\u884C\u4E0B\u9762\u7684\u5904\u7406\u3002</p><ol><li><code>select</code> \u751F\u6210\u4E00\u4E2A\u83DC\u5355\uFF0C\u5185\u5BB9\u662F\u5217\u8868 <code>list</code> \u7684\u6BCF\u4E00\u9879\uFF0C\u5E76\u4E14\u6BCF\u4E00\u9879\u524D\u9762\u8FD8\u6709\u4E00\u4E2A\u6570\u5B57\u7F16\u53F7\u3002</li><li>Bash \u63D0\u793A\u7528\u6237\u9009\u62E9\u4E00\u9879\uFF0C\u8F93\u5165\u5B83\u7684\u7F16\u53F7\u3002</li><li>\u7528\u6237\u8F93\u5165\u4EE5\u540E\uFF0CBash \u4F1A\u5C06\u8BE5\u9879\u7684\u5185\u5BB9\u5B58\u5728\u53D8\u91CF <code>name</code>\uFF0C\u8BE5\u9879\u7684\u7F16\u53F7\u5B58\u5165\u73AF\u5883\u53D8\u91CF <code>REPLY</code>\u3002\u5982\u679C\u7528\u6237\u6CA1\u6709\u8F93\u5165\uFF0C\u5C31\u6309\u56DE\u8F66\u952E\uFF0CBash \u4F1A\u91CD\u65B0\u8F93\u51FA\u83DC\u5355\uFF0C\u8BA9\u7528\u6237\u9009\u62E9\u3002</li><li>\u6267\u884C\u547D\u4EE4\u4F53 <code>commands</code>\u3002</li><li>\u6267\u884C\u7ED3\u675F\u540E\uFF0C\u56DE\u5230\u7B2C\u4E00\u6B65\uFF0C\u91CD\u590D\u8FD9\u4E2A\u8FC7\u7A0B\u3002</li></ol><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># select.sh</span>

<span class="token keyword">select</span> <span class="token for-or-select variable">brand</span> <span class="token keyword">in</span> Samsung Sony iphone symphony Walton
<span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;You have chosen <span class="token variable">$brand</span>&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u4E0A\u9762\u7684\u811A\u672C\uFF0CBash \u4F1A\u8F93\u51FA\u4E00\u4E2A\u54C1\u724C\u7684\u5217\u8868\uFF0C\u8BA9\u7528\u6237\u9009\u62E9\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ ./select.sh
<span class="token number">1</span><span class="token punctuation">)</span> Samsung
<span class="token number">2</span><span class="token punctuation">)</span> Sony
<span class="token number">3</span><span class="token punctuation">)</span> iphone
<span class="token number">4</span><span class="token punctuation">)</span> symphony
<span class="token number">5</span><span class="token punctuation">)</span> Walton
<span class="token comment">#?</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u7528\u6237\u6CA1\u6709\u8F93\u5165\u7F16\u53F7\uFF0C\u76F4\u63A5\u6309\u56DE\u8F66\u952E\u3002Bash \u5C31\u4F1A\u91CD\u65B0\u8F93\u51FA\u4E00\u904D\u8FD9\u4E2A\u83DC\u5355\uFF0C\u76F4\u5230\u7528\u6237\u6309\u4E0B <code>Ctrl + c</code>\uFF0C\u9000\u51FA\u6267\u884C\u3002</p><p><code>select</code> \u53EF\u4EE5\u4E0E <code>case</code> \u7ED3\u5408\uFF0C\u9488\u5BF9\u4E0D\u540C\u9879\uFF0C\u6267\u884C\u4E0D\u540C\u7684\u547D\u4EE4\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token builtin class-name">echo</span> <span class="token string">&quot;Which Operating System do you like?&quot;</span>

<span class="token keyword">select</span> <span class="token for-or-select variable">os</span> <span class="token keyword">in</span> Ubuntu LinuxMint Windows8 Windows7 WindowsXP
<span class="token keyword">do</span>
  <span class="token keyword">case</span> <span class="token variable">$os</span> <span class="token keyword">in</span>
    <span class="token string">&quot;Ubuntu&quot;</span><span class="token operator">|</span><span class="token string">&quot;LinuxMint&quot;</span><span class="token punctuation">)</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot;I also use <span class="token variable">$os</span>.&quot;</span>
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;Windows8&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;Windows10&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;WindowsXP&quot;</span><span class="token punctuation">)</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot;Why don&#39;t you try Linux?&quot;</span>
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
    *<span class="token punctuation">)</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot;Invalid entry.&quot;</span>
      <span class="token builtin class-name">break</span>
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
  <span class="token keyword">esac</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0C<code>case</code> \u9488\u5BF9\u7528\u6237\u9009\u62E9\u7684\u4E0D\u540C\u9879\uFF0C\u6267\u884C\u4E0D\u540C\u7684\u547D\u4EE4\u3002</p><h2 id="\u53C2\u8003\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u94FE\u63A5" aria-hidden="true">#</a> \u53C2\u8003\u94FE\u63A5</h2>`,88),r={href:"https://linuxhint.com/bash_select_command/",target:"_blank",rel:"noopener noreferrer"},u=n("Bash Select Command"),k=n(", Fahmida Yesmin");function v(b,m){const a=p("ExternalLinkIcon");return o(),i("div",null,[t,s("ul",null,[s("li",null,[s("a",r,[u,l(a)]),k])])])}var w=e(d,[["render",v],["__file","loop.html.vue"]]);export{w as default};
