import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c,b as n,a as t,d as s,e as p,r as i}from"./app.801c5d10.js";const l={},u=s("\u672C\u6587\u8F6C\u81EA\uFF1A"),r={href:"http://www.guoyaohua.com/sorting.html%EF%BC%8CJavaGuide",target:"_blank",rel:"noopener noreferrer"},k=s("http://www.guoyaohua.com/sorting.html\uFF0CJavaGuide"),d=s(" \u5BF9\u5176\u505A\u4E86\u8865\u5145\u5B8C\u5584\u3002"),v=n("h2",{id:"\u5F15\u8A00",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5F15\u8A00","aria-hidden":"true"},"#"),s(" \u5F15\u8A00")],-1),m=n("p",null,"\u6240\u8C13\u6392\u5E8F\uFF0C\u5C31\u662F\u4F7F\u4E00\u4E32\u8BB0\u5F55\uFF0C\u6309\u7167\u5176\u4E2D\u7684\u67D0\u4E2A\u6216\u67D0\u4E9B\u5173\u952E\u5B57\u7684\u5927\u5C0F\uFF0C\u9012\u589E\u6216\u9012\u51CF\u7684\u6392\u5217\u8D77\u6765\u7684\u64CD\u4F5C\u3002\u6392\u5E8F\u7B97\u6CD5\uFF0C\u5C31\u662F\u5982\u4F55\u4F7F\u5F97\u8BB0\u5F55\u6309\u7167\u8981\u6C42\u6392\u5217\u7684\u65B9\u6CD5\u3002\u6392\u5E8F\u7B97\u6CD5\u5728\u5F88\u591A\u9886\u57DF\u5F97\u5230\u76F8\u5F53\u5730\u91CD\u89C6\uFF0C\u5C24\u5176\u662F\u5728\u5927\u91CF\u6570\u636E\u7684\u5904\u7406\u65B9\u9762\u3002\u4E00\u4E2A\u4F18\u79C0\u7684\u7B97\u6CD5\u53EF\u4EE5\u8282\u7701\u5927\u91CF\u7684\u8D44\u6E90\u3002\u5728\u5404\u4E2A\u9886\u57DF\u4E2D\u8003\u8651\u5230\u6570\u636E\u7684\u5404\u79CD\u9650\u5236\u548C\u89C4\u8303\uFF0C\u8981\u5F97\u5230\u4E00\u4E2A\u7B26\u5408\u5B9E\u9645\u7684\u4F18\u79C0\u7B97\u6CD5\uFF0C\u5F97\u7ECF\u8FC7\u5927\u91CF\u7684\u63A8\u7406\u548C\u5206\u6790\u3002",-1),b=s("\u4E24\u5E74\u524D\uFF0C\u6211\u66FE\u5728"),h={href:"https://www.cnblogs.com/guoyaohua/",target:"_blank",rel:"noopener noreferrer"},g=s("\u535A\u5BA2\u56ED"),y=s("\u53D1\u5E03\u8FC7\u4E00\u7BC7"),w={href:"https://www.cnblogs.com/guoyaohua/p/8600214.html",target:"_blank",rel:"noopener noreferrer"},f=s("\u300A\u5341\u5927\u7ECF\u5178\u6392\u5E8F\u7B97\u6CD5\u6700\u5F3A\u603B\u7ED3\uFF08\u542B JAVA \u4EE3\u7801\u5B9E\u73B0\uFF09\u300B"),x=s("\u535A\u6587\uFF0C\u7B80\u8981\u4ECB\u7ECD\u4E86\u6BD4\u8F83\u7ECF\u5178\u7684\u5341\u5927\u6392\u5E8F\u7B97\u6CD5\uFF0C\u4E0D\u8FC7\u5728\u4E4B\u524D\u7684\u535A\u6587\u4E2D\uFF0C\u4EC5\u7ED9\u51FA\u4E86 Java \u7248\u672C\u7684\u4EE3\u7801\u5B9E\u73B0\uFF0C\u5E76\u4E14\u6709\u4E00\u4E9B\u7EC6\u8282\u4E0A\u7684\u9519\u8BEF\u3002\u6240\u4EE5\uFF0C\u4ECA\u5929\u91CD\u65B0\u5199\u4E00\u7BC7\u6587\u7AE0\uFF0C\u6DF1\u5165\u4E86\u89E3\u4E0B\u5341\u5927\u7ECF\u5178\u6392\u5E8F\u7B97\u6CD5\u7684\u539F\u7406\u53CA\u5B9E\u73B0\u3002"),_=n("h2",{id:"\u7B80\u4ECB",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B80\u4ECB","aria-hidden":"true"},"#"),s(" \u7B80\u4ECB")],-1),j=n("p",null,"\u6392\u5E8F\u7B97\u6CD5\u53EF\u4EE5\u5206\u4E3A\uFF1A",-1),O=n("li",null,[n("strong",null,"\u5185\u90E8\u6392\u5E8F"),s(" \uFF1A\u6570\u636E\u8BB0\u5F55\u5728\u5185\u5B58\u4E2D\u8FDB\u884C\u6392\u5E8F\u3002")],-1),A={href:"https://zh.wikipedia.org/wiki/%E5%A4%96%E6%8E%92%E5%BA%8F",target:"_blank",rel:"noopener noreferrer"},S=s("\u5916\u90E8\u6392\u5E8F"),V=s(" \uFF1A\u56E0\u6392\u5E8F\u7684\u6570\u636E\u5F88\u5927\uFF0C\u4E00\u6B21\u4E0D\u80FD\u5BB9\u7EB3\u5168\u90E8\u7684\u6392\u5E8F\u8BB0\u5F55\uFF0C\u5728\u6392\u5E8F\u8FC7\u7A0B\u4E2D\u9700\u8981\u8BBF\u95EE\u5916\u5B58\u3002"),I=p(`<p>\u5E38\u89C1\u7684\u5185\u90E8\u6392\u5E8F\u7B97\u6CD5\u6709\uFF1A<strong>\u63D2\u5165\u6392\u5E8F</strong>\u3001<strong>\u5E0C\u5C14\u6392\u5E8F</strong>\u3001<strong>\u9009\u62E9\u6392\u5E8F</strong>\u3001<strong>\u5192\u6CE1\u6392\u5E8F</strong>\u3001<strong>\u5F52\u5E76\u6392\u5E8F</strong>\u3001<strong>\u5FEB\u901F\u6392\u5E8F</strong>\u3001<strong>\u5806\u6392\u5E8F</strong>\u3001<strong>\u57FA\u6570\u6392\u5E8F</strong>\u7B49\uFF0C\u672C\u6587\u53EA\u8BB2\u89E3\u5185\u90E8\u6392\u5E8F\u7B97\u6CD5\u3002\u7528\u4E00\u5F20\u56FE\u6982\u62EC\uFF1A</p><p><img src="https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/cs-basics/sorting-algorithms/sort1.png" alt="\u5341\u5927\u6392\u5E8F\u7B97\u6CD5" loading="lazy"></p><p><strong>\u56FE\u7247\u540D\u8BCD\u89E3\u91CA\uFF1A</strong></p><ul><li><strong>n</strong>\uFF1A\u6570\u636E\u89C4\u6A21</li><li><strong>k</strong>\uFF1A\u201C\u6876\u201D \u7684\u4E2A\u6570</li><li><strong>In-place</strong>\uFF1A\u5360\u7528\u5E38\u6570\u5185\u5B58\uFF0C\u4E0D\u5360\u7528\u989D\u5916\u5185\u5B58</li><li><strong>Out-place</strong>\uFF1A\u5360\u7528\u989D\u5916\u5185\u5B58</li></ul><h3 id="\u672F\u8BED\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#\u672F\u8BED\u8BF4\u660E" aria-hidden="true">#</a> \u672F\u8BED\u8BF4\u660E</h3><ul><li><strong>\u7A33\u5B9A</strong>\uFF1A\u5982\u679C A \u539F\u672C\u5728 B \u524D\u9762\uFF0C\u800C A=B\uFF0C\u6392\u5E8F\u4E4B\u540E A \u4ECD\u7136\u5728 B \u7684\u524D\u9762\u3002</li><li><strong>\u4E0D\u7A33\u5B9A</strong>\uFF1A\u5982\u679C A \u539F\u672C\u5728 B \u7684\u524D\u9762\uFF0C\u800C A=B\uFF0C\u6392\u5E8F\u4E4B\u540E A \u53EF\u80FD\u4F1A\u51FA\u73B0\u5728 B \u7684\u540E\u9762\u3002</li><li><strong>\u5185\u6392\u5E8F</strong>\uFF1A\u6240\u6709\u6392\u5E8F\u64CD\u4F5C\u90FD\u5728\u5185\u5B58\u4E2D\u5B8C\u6210\u3002</li><li><strong>\u5916\u6392\u5E8F</strong>\uFF1A\u7531\u4E8E\u6570\u636E\u592A\u5927\uFF0C\u56E0\u6B64\u628A\u6570\u636E\u653E\u5728\u78C1\u76D8\u4E2D\uFF0C\u800C\u6392\u5E8F\u901A\u8FC7\u78C1\u76D8\u548C\u5185\u5B58\u7684\u6570\u636E\u4F20\u8F93\u624D\u80FD\u8FDB\u884C\u3002</li><li><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong>\uFF1A \u5B9A\u6027\u63CF\u8FF0\u4E00\u4E2A\u7B97\u6CD5\u6267\u884C\u6240\u8017\u8D39\u7684\u65F6\u95F4\u3002</li><li><strong>\u7A7A\u95F4\u590D\u6742\u5EA6</strong>\uFF1A\u5B9A\u6027\u63CF\u8FF0\u4E00\u4E2A\u7B97\u6CD5\u6267\u884C\u6240\u9700\u5185\u5B58\u7684\u5927\u5C0F\u3002</li></ul><h3 id="\u7B97\u6CD5\u5206\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u5206\u7C7B" aria-hidden="true">#</a> \u7B97\u6CD5\u5206\u7C7B</h3><p>\u5341\u79CD\u5E38\u89C1\u6392\u5E8F\u7B97\u6CD5\u53EF\u4EE5\u5206\u7C7B\u4E24\u5927\u7C7B\u522B\uFF1A<strong>\u6BD4\u8F83\u7C7B\u6392\u5E8F</strong>\u548C<strong>\u975E\u6BD4\u8F83\u7C7B\u6392\u5E8F</strong>\u3002</p><p><img src="https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/cs-basics/sorting-algorithms/sort2.png" alt="\u6392\u5E8F\u7B97\u6CD5\u5206\u7C7B" loading="lazy"></p><p>\u5E38\u89C1\u7684<strong>\u5FEB\u901F\u6392\u5E8F</strong>\u3001<strong>\u5F52\u5E76\u6392\u5E8F</strong>\u3001<strong>\u5806\u6392\u5E8F</strong>\u4EE5\u53CA<strong>\u5192\u6CE1\u6392\u5E8F</strong>\u7B49\u90FD\u5C5E\u4E8E<strong>\u6BD4\u8F83\u7C7B\u6392\u5E8F\u7B97\u6CD5</strong>\u3002\u6BD4\u8F83\u7C7B\u6392\u5E8F\u662F\u901A\u8FC7\u6BD4\u8F83\u6765\u51B3\u5B9A\u5143\u7D20\u95F4\u7684\u76F8\u5BF9\u6B21\u5E8F\uFF0C\u7531\u4E8E\u5176\u65F6\u95F4\u590D\u6742\u5EA6\u4E0D\u80FD\u7A81\u7834 <code>O(nlogn)</code>\uFF0C\u56E0\u6B64\u4E5F\u79F0\u4E3A\u975E\u7EBF\u6027\u65F6\u95F4\u6BD4\u8F83\u7C7B\u6392\u5E8F\u3002\u5728\u5192\u6CE1\u6392\u5E8F\u4E4B\u7C7B\u7684\u6392\u5E8F\u4E2D\uFF0C\u95EE\u9898\u89C4\u6A21\u4E3A <code>n</code>\uFF0C\u53C8\u56E0\u4E3A\u9700\u8981\u6BD4\u8F83 <code>n</code> \u6B21\uFF0C\u6240\u4EE5\u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A <code>O(n\xB2)</code>\u3002\u5728<strong>\u5F52\u5E76\u6392\u5E8F</strong>\u3001<strong>\u5FEB\u901F\u6392\u5E8F</strong>\u4E4B\u7C7B\u7684\u6392\u5E8F\u4E2D\uFF0C\u95EE\u9898\u89C4\u6A21\u901A\u8FC7<strong>\u5206\u6CBB\u6CD5</strong>\u6D88\u51CF\u4E3A <code>logn</code> \u6B21\uFF0C\u6240\u4EE5\u65F6\u95F4\u590D\u6742\u5EA6\u5E73\u5747 <code>O(nlogn)</code>\u3002</p><p>\u6BD4\u8F83\u7C7B\u6392\u5E8F\u7684\u4F18\u52BF\u662F\uFF0C\u9002\u7528\u4E8E\u5404\u79CD\u89C4\u6A21\u7684\u6570\u636E\uFF0C\u4E5F\u4E0D\u5728\u4E4E\u6570\u636E\u7684\u5206\u5E03\uFF0C\u90FD\u80FD\u8FDB\u884C\u6392\u5E8F\u3002\u53EF\u4EE5\u8BF4\uFF0C\u6BD4\u8F83\u6392\u5E8F\u9002\u7528\u4E8E\u4E00\u5207\u9700\u8981\u6392\u5E8F\u7684\u60C5\u51B5\u3002</p><p>\u800C<strong>\u8BA1\u6570\u6392\u5E8F</strong>\u3001<strong>\u57FA\u6570\u6392\u5E8F</strong>\u3001<strong>\u6876\u6392\u5E8F</strong>\u5219\u5C5E\u4E8E<strong>\u975E\u6BD4\u8F83\u7C7B\u6392\u5E8F\u7B97\u6CD5</strong>\u3002\u975E\u6BD4\u8F83\u6392\u5E8F\u4E0D\u901A\u8FC7\u6BD4\u8F83\u6765\u51B3\u5B9A\u5143\u7D20\u95F4\u7684\u76F8\u5BF9\u6B21\u5E8F\uFF0C\u800C\u662F\u901A\u8FC7\u786E\u5B9A\u6BCF\u4E2A\u5143\u7D20\u4E4B\u524D\uFF0C\u5E94\u8BE5\u6709\u591A\u5C11\u4E2A\u5143\u7D20\u6765\u6392\u5E8F\u3002\u7531\u4E8E\u5B83\u53EF\u4EE5\u7A81\u7834\u57FA\u4E8E\u6BD4\u8F83\u6392\u5E8F\u7684\u65F6\u95F4\u4E0B\u754C\uFF0C\u4EE5\u7EBF\u6027\u65F6\u95F4\u8FD0\u884C\uFF0C\u56E0\u6B64\u79F0\u4E3A\u7EBF\u6027\u65F6\u95F4\u975E\u6BD4\u8F83\u7C7B\u6392\u5E8F\u3002 \u975E\u6BD4\u8F83\u6392\u5E8F\u53EA\u8981\u786E\u5B9A\u6BCF\u4E2A\u5143\u7D20\u4E4B\u524D\u7684\u5DF2\u6709\u7684\u5143\u7D20\u4E2A\u6570\u5373\u53EF\uFF0C\u6240\u6709\u4E00\u6B21\u904D\u5386\u5373\u53EF\u89E3\u51B3\u3002\u7B97\u6CD5\u65F6\u95F4\u590D\u6742\u5EA6 <code>O(n)</code>\u3002</p><p>\u975E\u6BD4\u8F83\u6392\u5E8F\u65F6\u95F4\u590D\u6742\u5EA6\u5E95\uFF0C\u4F46\u7531\u4E8E\u975E\u6BD4\u8F83\u6392\u5E8F\u9700\u8981\u5360\u7528\u7A7A\u95F4\u6765\u786E\u5B9A\u552F\u4E00\u4F4D\u7F6E\u3002\u6240\u4EE5\u5BF9\u6570\u636E\u89C4\u6A21\u548C\u6570\u636E\u5206\u5E03\u6709\u4E00\u5B9A\u7684\u8981\u6C42\u3002</p><h2 id="\u5192\u6CE1\u6392\u5E8F-bubble-sort" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F-bubble-sort" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F (Bubble Sort)</h2><p>\u5192\u6CE1\u6392\u5E8F\u662F\u4E00\u79CD\u7B80\u5355\u7684\u6392\u5E8F\u7B97\u6CD5\u3002\u5B83\u91CD\u590D\u5730\u904D\u5386\u8981\u6392\u5E8F\u7684\u5E8F\u5217\uFF0C\u4F9D\u6B21\u6BD4\u8F83\u4E24\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u5B83\u4EEC\u7684\u987A\u5E8F\u9519\u8BEF\u5C31\u628A\u5B83\u4EEC\u4EA4\u6362\u8FC7\u6765\u3002\u904D\u5386\u5E8F\u5217\u7684\u5DE5\u4F5C\u662F\u91CD\u590D\u5730\u8FDB\u884C\u76F4\u5230\u6CA1\u6709\u518D\u9700\u8981\u4EA4\u6362\u4E3A\u6B62\uFF0C\u6B64\u65F6\u8BF4\u660E\u8BE5\u5E8F\u5217\u5DF2\u7ECF\u6392\u5E8F\u5B8C\u6210\u3002\u8FD9\u4E2A\u7B97\u6CD5\u7684\u540D\u5B57\u7531\u6765\u662F\u56E0\u4E3A\u8D8A\u5C0F\u7684\u5143\u7D20\u4F1A\u7ECF\u7531\u4EA4\u6362\u6162\u6162 \u201C\u6D6E\u201D \u5230\u6570\u5217\u7684\u9876\u7AEF\u3002</p><h3 id="\u7B97\u6CD5\u6B65\u9AA4" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u6B65\u9AA4" aria-hidden="true">#</a> \u7B97\u6CD5\u6B65\u9AA4</h3><ol><li>\u6BD4\u8F83\u76F8\u90BB\u7684\u5143\u7D20\u3002\u5982\u679C\u7B2C\u4E00\u4E2A\u6BD4\u7B2C\u4E8C\u4E2A\u5927\uFF0C\u5C31\u4EA4\u6362\u5B83\u4EEC\u4E24\u4E2A\uFF1B</li><li>\u5BF9\u6BCF\u4E00\u5BF9\u76F8\u90BB\u5143\u7D20\u4F5C\u540C\u6837\u7684\u5DE5\u4F5C\uFF0C\u4ECE\u5F00\u59CB\u7B2C\u4E00\u5BF9\u5230\u7ED3\u5C3E\u7684\u6700\u540E\u4E00\u5BF9\uFF0C\u8FD9\u6837\u5728\u6700\u540E\u7684\u5143\u7D20\u5E94\u8BE5\u4F1A\u662F\u6700\u5927\u7684\u6570\uFF1B</li><li>\u9488\u5BF9\u6240\u6709\u7684\u5143\u7D20\u91CD\u590D\u4EE5\u4E0A\u7684\u6B65\u9AA4\uFF0C\u9664\u4E86\u6700\u540E\u4E00\u4E2A\uFF1B</li><li>\u91CD\u590D\u6B65\u9AA4 1~3\uFF0C\u76F4\u5230\u6392\u5E8F\u5B8C\u6210\u3002</li></ol><h3 id="\u56FE\u89E3\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u56FE\u89E3\u7B97\u6CD5" aria-hidden="true">#</a> \u56FE\u89E3\u7B97\u6CD5</h3><p><img src="https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/cs-basics/sorting-algorithms/bubble_sort.gif" alt="\u5192\u6CE1\u6392\u5E8F" loading="lazy"></p><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u5192\u6CE1\u6392\u5E8F
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span>
 * <span class="token keyword">@return</span> arr
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Set a flag, if true, that means the loop has not been swapped,</span>
        <span class="token comment">// that is, the sequence has been ordered, the sorting has been completed.</span>
        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
			    <span class="token comment">// Change flag</span>
                flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6B64\u5904\u5BF9\u4EE3\u7801\u505A\u4E86\u4E00\u4E2A\u5C0F\u4F18\u5316\uFF0C\u52A0\u5165\u4E86 <code>is_sorted</code> Flag\uFF0C\u76EE\u7684\u662F\u5C06\u7B97\u6CD5\u7684\u6700\u4F73\u65F6\u95F4\u590D\u6742\u5EA6\u4F18\u5316\u4E3A <code>O(n)</code>\uFF0C\u5373\u5F53\u539F\u8F93\u5165\u5E8F\u5217\u5C31\u662F\u6392\u5E8F\u597D\u7684\u60C5\u51B5\u4E0B\uFF0C\u8BE5\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u662F <code>O(n)</code>\u3002</strong></p><h3 id="\u7B97\u6CD5\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u5206\u6790" aria-hidden="true">#</a> \u7B97\u6CD5\u5206\u6790</h3><ul><li><strong>\u7A33\u5B9A\u6027</strong>\uFF1A\u7A33\u5B9A</li><li><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong> \uFF1A\u6700\u4F73\uFF1AO(n) \uFF0C\u6700\u5DEE\uFF1AO(n2)\uFF0C \u5E73\u5747\uFF1AO(n2)</li><li><strong>\u7A7A\u95F4\u590D\u6742\u5EA6</strong> \uFF1AO(1)</li><li><strong>\u6392\u5E8F\u65B9\u5F0F</strong> \uFF1AIn-place</li></ul><h2 id="\u9009\u62E9\u6392\u5E8F-selection-sort" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F-selection-sort" aria-hidden="true">#</a> \u9009\u62E9\u6392\u5E8F (Selection Sort)</h2><p>\u9009\u62E9\u6392\u5E8F\u662F\u4E00\u79CD\u7B80\u5355\u76F4\u89C2\u7684\u6392\u5E8F\u7B97\u6CD5\uFF0C\u65E0\u8BBA\u4EC0\u4E48\u6570\u636E\u8FDB\u53BB\u90FD\u662F <code>O(n\xB2)</code> \u7684\u65F6\u95F4\u590D\u6742\u5EA6\u3002\u6240\u4EE5\u7528\u5230\u5B83\u7684\u65F6\u5019\uFF0C\u6570\u636E\u89C4\u6A21\u8D8A\u5C0F\u8D8A\u597D\u3002\u552F\u4E00\u7684\u597D\u5904\u53EF\u80FD\u5C31\u662F\u4E0D\u5360\u7528\u989D\u5916\u7684\u5185\u5B58\u7A7A\u95F4\u4E86\u5427\u3002\u5B83\u7684\u5DE5\u4F5C\u539F\u7406\uFF1A\u9996\u5148\u5728\u672A\u6392\u5E8F\u5E8F\u5217\u4E2D\u627E\u5230\u6700\u5C0F\uFF08\u5927\uFF09\u5143\u7D20\uFF0C\u5B58\u653E\u5230\u6392\u5E8F\u5E8F\u5217\u7684\u8D77\u59CB\u4F4D\u7F6E\uFF0C\u7136\u540E\uFF0C\u518D\u4ECE\u5269\u4F59\u672A\u6392\u5E8F\u5143\u7D20\u4E2D\u7EE7\u7EED\u5BFB\u627E\u6700\u5C0F\uFF08\u5927\uFF09\u5143\u7D20\uFF0C\u7136\u540E\u653E\u5230\u5DF2\u6392\u5E8F\u5E8F\u5217\u7684\u672B\u5C3E\u3002\u4EE5\u6B64\u7C7B\u63A8\uFF0C\u76F4\u5230\u6240\u6709\u5143\u7D20\u5747\u6392\u5E8F\u5B8C\u6BD5\u3002</p><h3 id="\u7B97\u6CD5\u6B65\u9AA4-1" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u6B65\u9AA4-1" aria-hidden="true">#</a> \u7B97\u6CD5\u6B65\u9AA4</h3><ol><li>\u9996\u5148\u5728\u672A\u6392\u5E8F\u5E8F\u5217\u4E2D\u627E\u5230\u6700\u5C0F\uFF08\u5927\uFF09\u5143\u7D20\uFF0C\u5B58\u653E\u5230\u6392\u5E8F\u5E8F\u5217\u7684\u8D77\u59CB\u4F4D\u7F6E</li><li>\u518D\u4ECE\u5269\u4F59\u672A\u6392\u5E8F\u5143\u7D20\u4E2D\u7EE7\u7EED\u5BFB\u627E\u6700\u5C0F\uFF08\u5927\uFF09\u5143\u7D20\uFF0C\u7136\u540E\u653E\u5230\u5DF2\u6392\u5E8F\u5E8F\u5217\u7684\u672B\u5C3E\u3002</li><li>\u91CD\u590D\u7B2C 2 \u6B65\uFF0C\u76F4\u5230\u6240\u6709\u5143\u7D20\u5747\u6392\u5E8F\u5B8C\u6BD5\u3002</li></ol><h3 id="\u56FE\u89E3\u7B97\u6CD5-1" tabindex="-1"><a class="header-anchor" href="#\u56FE\u89E3\u7B97\u6CD5-1" aria-hidden="true">#</a> \u56FE\u89E3\u7B97\u6CD5</h3><p><img src="https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/cs-basics/sorting-algorithms/selection_sort.gif" alt="Selection Sort" loading="lazy"></p><h3 id="\u4EE3\u7801\u5B9E\u73B0-1" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0-1" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u9009\u62E9\u6392\u5E8F
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span>
 * <span class="token keyword">@return</span> arr
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">selectionSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> minIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                minIndex <span class="token operator">=</span> j<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>minIndex <span class="token operator">!=</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B97\u6CD5\u5206\u6790-1" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u5206\u6790-1" aria-hidden="true">#</a> \u7B97\u6CD5\u5206\u6790</h3><ul><li><strong>\u7A33\u5B9A\u6027</strong>\uFF1A\u4E0D\u7A33\u5B9A</li><li><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong> \uFF1A\u6700\u4F73\uFF1AO(n2) \uFF0C\u6700\u5DEE\uFF1AO(n2)\uFF0C \u5E73\u5747\uFF1AO(n2)</li><li><strong>\u7A7A\u95F4\u590D\u6742\u5EA6</strong> \uFF1AO(1)</li><li><strong>\u6392\u5E8F\u65B9\u5F0F</strong> \uFF1AIn-place</li></ul><h2 id="\u63D2\u5165\u6392\u5E8F-insertion-sort" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F-insertion-sort" aria-hidden="true">#</a> \u63D2\u5165\u6392\u5E8F (Insertion Sort)</h2><p>\u63D2\u5165\u6392\u5E8F\u662F\u4E00\u79CD\u7B80\u5355\u76F4\u89C2\u7684\u6392\u5E8F\u7B97\u6CD5\u3002\u5B83\u7684\u5DE5\u4F5C\u539F\u7406\u662F\u901A\u8FC7\u6784\u5EFA\u6709\u5E8F\u5E8F\u5217\uFF0C\u5BF9\u4E8E\u672A\u6392\u5E8F\u6570\u636E\uFF0C\u5728\u5DF2\u6392\u5E8F\u5E8F\u5217\u4E2D\u4ECE\u540E\u5411\u524D\u626B\u63CF\uFF0C\u627E\u5230\u76F8\u5E94\u4F4D\u7F6E\u5E76\u63D2\u5165\u3002\u63D2\u5165\u6392\u5E8F\u5728\u5B9E\u73B0\u4E0A\uFF0C\u901A\u5E38\u91C7\u7528 in-place \u6392\u5E8F\uFF08\u5373\u53EA\u9700\u7528\u5230 <code>O(1)</code> \u7684\u989D\u5916\u7A7A\u95F4\u7684\u6392\u5E8F\uFF09\uFF0C\u56E0\u800C\u5728\u4ECE\u540E\u5411\u524D\u626B\u63CF\u8FC7\u7A0B\u4E2D\uFF0C\u9700\u8981\u53CD\u590D\u628A\u5DF2\u6392\u5E8F\u5143\u7D20\u9010\u6B65\u5411\u540E\u632A\u4F4D\uFF0C\u4E3A\u6700\u65B0\u5143\u7D20\u63D0\u4F9B\u63D2\u5165\u7A7A\u95F4\u3002</p><p>\u63D2\u5165\u6392\u5E8F\u7684\u4EE3\u7801\u5B9E\u73B0\u867D\u7136\u6CA1\u6709\u5192\u6CE1\u6392\u5E8F\u548C\u9009\u62E9\u6392\u5E8F\u90A3\u4E48\u7B80\u5355\u7C97\u66B4\uFF0C\u4F46\u5B83\u7684\u539F\u7406\u5E94\u8BE5\u662F\u6700\u5BB9\u6613\u7406\u89E3\u7684\u4E86\uFF0C\u56E0\u4E3A\u53EA\u8981\u6253\u8FC7\u6251\u514B\u724C\u7684\u4EBA\u90FD\u5E94\u8BE5\u80FD\u591F\u79D2\u61C2\u3002\u63D2\u5165\u6392\u5E8F\u662F\u4E00\u79CD\u6700\u7B80\u5355\u76F4\u89C2\u7684\u6392\u5E8F\u7B97\u6CD5\uFF0C\u5B83\u7684\u5DE5\u4F5C\u539F\u7406\u662F\u901A\u8FC7\u6784\u5EFA\u6709\u5E8F\u5E8F\u5217\uFF0C\u5BF9\u4E8E\u672A\u6392\u5E8F\u6570\u636E\uFF0C\u5728\u5DF2\u6392\u5E8F\u5E8F\u5217\u4E2D\u4ECE\u540E\u5411\u524D\u626B\u63CF\uFF0C\u627E\u5230\u76F8\u5E94\u4F4D\u7F6E\u5E76\u63D2\u5165\u3002</p><p>\u63D2\u5165\u6392\u5E8F\u548C\u5192\u6CE1\u6392\u5E8F\u4E00\u6837\uFF0C\u4E5F\u6709\u4E00\u79CD\u4F18\u5316\u7B97\u6CD5\uFF0C\u53EB\u505A\u62C6\u534A\u63D2\u5165\u3002</p><h3 id="\u7B97\u6CD5\u6B65\u9AA4-2" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u6B65\u9AA4-2" aria-hidden="true">#</a> \u7B97\u6CD5\u6B65\u9AA4</h3><ol><li>\u4ECE\u7B2C\u4E00\u4E2A\u5143\u7D20\u5F00\u59CB\uFF0C\u8BE5\u5143\u7D20\u53EF\u4EE5\u8BA4\u4E3A\u5DF2\u7ECF\u88AB\u6392\u5E8F\uFF1B</li><li>\u53D6\u51FA\u4E0B\u4E00\u4E2A\u5143\u7D20\uFF0C\u5728\u5DF2\u7ECF\u6392\u5E8F\u7684\u5143\u7D20\u5E8F\u5217\u4E2D\u4ECE\u540E\u5411\u524D\u626B\u63CF\uFF1B</li><li>\u5982\u679C\u8BE5\u5143\u7D20\uFF08\u5DF2\u6392\u5E8F\uFF09\u5927\u4E8E\u65B0\u5143\u7D20\uFF0C\u5C06\u8BE5\u5143\u7D20\u79FB\u5230\u4E0B\u4E00\u4F4D\u7F6E\uFF1B</li><li>\u91CD\u590D\u6B65\u9AA4 3\uFF0C\u76F4\u5230\u627E\u5230\u5DF2\u6392\u5E8F\u7684\u5143\u7D20\u5C0F\u4E8E\u6216\u8005\u7B49\u4E8E\u65B0\u5143\u7D20\u7684\u4F4D\u7F6E\uFF1B</li><li>\u5C06\u65B0\u5143\u7D20\u63D2\u5165\u5230\u8BE5\u4F4D\u7F6E\u540E\uFF1B</li><li>\u91CD\u590D\u6B65\u9AA4 2~5\u3002</li></ol><h3 id="\u56FE\u89E3\u7B97\u6CD5-2" tabindex="-1"><a class="header-anchor" href="#\u56FE\u89E3\u7B97\u6CD5-2" aria-hidden="true">#</a> \u56FE\u89E3\u7B97\u6CD5</h3><p><img src="https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/cs-basics/sorting-algorithms/insertion_sort.gif" alt="insertion_sort" loading="lazy"></p><h3 id="\u4EE3\u7801\u5B9E\u73B0-2" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0-2" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u63D2\u5165\u6392\u5E8F
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span>
 * <span class="token keyword">@return</span> arr
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">insertionSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> preIndex <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> current <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>preIndex <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> current <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">[</span>preIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
            preIndex <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        arr<span class="token punctuation">[</span>preIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> current<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B97\u6CD5\u5206\u6790-2" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u5206\u6790-2" aria-hidden="true">#</a> \u7B97\u6CD5\u5206\u6790</h3><ul><li><strong>\u7A33\u5B9A\u6027</strong>\uFF1A\u7A33\u5B9A</li><li><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong> \uFF1A\u6700\u4F73\uFF1AO(n) \uFF0C\u6700\u5DEE\uFF1AO(n2)\uFF0C \u5E73\u5747\uFF1AO(n2)</li><li><strong>\u7A7A\u95F4\u590D\u6742\u5EA6</strong> \uFF1AO(1)</li><li><strong>\u6392\u5E8F\u65B9\u5F0F</strong> \uFF1AIn-place</li></ul><h2 id="\u5E0C\u5C14\u6392\u5E8F-shell-sort" tabindex="-1"><a class="header-anchor" href="#\u5E0C\u5C14\u6392\u5E8F-shell-sort" aria-hidden="true">#</a> \u5E0C\u5C14\u6392\u5E8F (Shell Sort)</h2><p>\u5E0C\u5C14\u6392\u5E8F\u662F\u5E0C\u5C14 (Donald Shell) \u4E8E 1959 \u5E74\u63D0\u51FA\u7684\u4E00\u79CD\u6392\u5E8F\u7B97\u6CD5\u3002\u5E0C\u5C14\u6392\u5E8F\u4E5F\u662F\u4E00\u79CD\u63D2\u5165\u6392\u5E8F\uFF0C\u5B83\u662F\u7B80\u5355\u63D2\u5165\u6392\u5E8F\u7ECF\u8FC7\u6539\u8FDB\u4E4B\u540E\u7684\u4E00\u4E2A\u66F4\u9AD8\u6548\u7684\u7248\u672C\uFF0C\u4E5F\u79F0\u4E3A\u9012\u51CF\u589E\u91CF\u6392\u5E8F\u7B97\u6CD5\uFF0C\u540C\u65F6\u8BE5\u7B97\u6CD5\u662F\u51B2\u7834 <code>O(n\xB2)</code> \u7684\u7B2C\u4E00\u6279\u7B97\u6CD5\u4E4B\u4E00\u3002</p><p>\u5E0C\u5C14\u6392\u5E8F\u7684\u57FA\u672C\u601D\u60F3\u662F\uFF1A\u5148\u5C06\u6574\u4E2A\u5F85\u6392\u5E8F\u7684\u8BB0\u5F55\u5E8F\u5217\u5206\u5272\u6210\u4E3A\u82E5\u5E72\u5B50\u5E8F\u5217\u5206\u522B\u8FDB\u884C\u76F4\u63A5\u63D2\u5165\u6392\u5E8F\uFF0C\u5F85\u6574\u4E2A\u5E8F\u5217\u4E2D\u7684\u8BB0\u5F55 \u201C\u57FA\u672C\u6709\u5E8F\u201D \u65F6\uFF0C\u518D\u5BF9\u5168\u4F53\u8BB0\u5F55\u8FDB\u884C\u4F9D\u6B21\u76F4\u63A5\u63D2\u5165\u6392\u5E8F\u3002</p><h3 id="\u7B97\u6CD5\u6B65\u9AA4-3" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u6B65\u9AA4-3" aria-hidden="true">#</a> \u7B97\u6CD5\u6B65\u9AA4</h3><p>\u6211\u4EEC\u6765\u770B\u4E0B\u5E0C\u5C14\u6392\u5E8F\u7684\u57FA\u672C\u6B65\u9AA4\uFF0C\u5728\u6B64\u6211\u4EEC\u9009\u62E9\u589E\u91CF <code>gap=length/2</code>\uFF0C\u7F29\u5C0F\u589E\u91CF\u7EE7\u7EED\u4EE5 <code>gap = gap/2</code> \u7684\u65B9\u5F0F\uFF0C\u8FD9\u79CD\u589E\u91CF\u9009\u62E9\u6211\u4EEC\u53EF\u4EE5\u7528\u4E00\u4E2A\u5E8F\u5217\u6765\u8868\u793A\uFF0C<code>{n/2, (n/2)/2, ..., 1}</code>\uFF0C\u79F0\u4E3A<strong>\u589E\u91CF\u5E8F\u5217</strong>\u3002\u5E0C\u5C14\u6392\u5E8F\u7684\u589E\u91CF\u5E8F\u5217\u7684\u9009\u62E9\u4E0E\u8BC1\u660E\u662F\u4E2A\u6570\u5B66\u96BE\u9898\uFF0C\u6211\u4EEC\u9009\u62E9\u7684\u8FD9\u4E2A\u589E\u91CF\u5E8F\u5217\u662F\u6BD4\u8F83\u5E38\u7528\u7684\uFF0C\u4E5F\u662F\u5E0C\u5C14\u5EFA\u8BAE\u7684\u589E\u91CF\uFF0C\u79F0\u4E3A\u5E0C\u5C14\u589E\u91CF\uFF0C\u4F46\u5176\u5B9E\u8FD9\u4E2A\u589E\u91CF\u5E8F\u5217\u4E0D\u662F\u6700\u4F18\u7684\u3002\u6B64\u5904\u6211\u4EEC\u505A\u793A\u4F8B\u4F7F\u7528\u5E0C\u5C14\u589E\u91CF\u3002</p><p>\u5148\u5C06\u6574\u4E2A\u5F85\u6392\u5E8F\u7684\u8BB0\u5F55\u5E8F\u5217\u5206\u5272\u6210\u4E3A\u82E5\u5E72\u5B50\u5E8F\u5217\u5206\u522B\u8FDB\u884C\u76F4\u63A5\u63D2\u5165\u6392\u5E8F\uFF0C\u5177\u4F53\u7B97\u6CD5\u63CF\u8FF0\uFF1A</p><ul><li>\u9009\u62E9\u4E00\u4E2A\u589E\u91CF\u5E8F\u5217 <code>{t1, t2, \u2026, tk}</code>\uFF0C\u5176\u4E2D <code>(ti&gt;tj, i&lt;j, tk=1)</code>\uFF1B</li><li>\u6309\u589E\u91CF\u5E8F\u5217\u4E2A\u6570 k\uFF0C\u5BF9\u5E8F\u5217\u8FDB\u884C k \u8D9F\u6392\u5E8F\uFF1B</li><li>\u6BCF\u8D9F\u6392\u5E8F\uFF0C\u6839\u636E\u5BF9\u5E94\u7684\u589E\u91CF <code>t</code>\uFF0C\u5C06\u5F85\u6392\u5E8F\u5217\u5206\u5272\u6210\u82E5\u5E72\u957F\u5EA6\u4E3A <code>m</code> \u7684\u5B50\u5E8F\u5217\uFF0C\u5206\u522B\u5BF9\u5404\u5B50\u8868\u8FDB\u884C\u76F4\u63A5\u63D2\u5165\u6392\u5E8F\u3002\u4EC5\u589E\u91CF\u56E0\u5B50\u4E3A 1 \u65F6\uFF0C\u6574\u4E2A\u5E8F\u5217\u4F5C\u4E3A\u4E00\u4E2A\u8868\u6765\u5904\u7406\uFF0C\u8868\u957F\u5EA6\u5373\u4E3A\u6574\u4E2A\u5E8F\u5217\u7684\u957F\u5EA6\u3002</li></ul><h3 id="\u56FE\u89E3\u7B97\u6CD5-3" tabindex="-1"><a class="header-anchor" href="#\u56FE\u89E3\u7B97\u6CD5-3" aria-hidden="true">#</a> \u56FE\u89E3\u7B97\u6CD5</h3><p><img src="https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/cs-basics/sorting-algorithms/shell_sort.png" alt="shell_sort" loading="lazy"></p><h3 id="\u4EE3\u7801\u5B9E\u73B0-3" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0-3" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u5E0C\u5C14\u6392\u5E8F
 *
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span>
 * <span class="token keyword">@return</span> arr
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">shellSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> gap <span class="token operator">=</span> n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>gap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> gap<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> current <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> preIndex <span class="token operator">=</span> i <span class="token operator">-</span> gap<span class="token punctuation">;</span>
            <span class="token comment">// Insertion sort</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>preIndex <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span> <span class="token operator">&gt;</span> current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                arr<span class="token punctuation">[</span>preIndex <span class="token operator">+</span> gap<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
                preIndex <span class="token operator">-=</span> gap<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            arr<span class="token punctuation">[</span>preIndex <span class="token operator">+</span> gap<span class="token punctuation">]</span> <span class="token operator">=</span> current<span class="token punctuation">;</span>

        <span class="token punctuation">}</span>
        gap <span class="token operator">/=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B97\u6CD5\u5206\u6790-3" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u5206\u6790-3" aria-hidden="true">#</a> \u7B97\u6CD5\u5206\u6790</h3><ul><li><strong>\u7A33\u5B9A\u6027</strong>\uFF1A\u7A33\u5B9A</li><li><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong> \uFF1A\u6700\u4F73\uFF1AO(nlogn)\uFF0C \u6700\u5DEE\uFF1AO(n2) \u5E73\u5747\uFF1AO(nlogn)</li><li><strong>\u7A7A\u95F4\u590D\u6742\u5EA6</strong> \uFF1A<code>O(n)</code></li></ul><h2 id="\u5F52\u5E76\u6392\u5E8F-merge-sort" tabindex="-1"><a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F-merge-sort" aria-hidden="true">#</a> \u5F52\u5E76\u6392\u5E8F (Merge Sort)</h2><p>\u5F52\u5E76\u6392\u5E8F\u662F\u5EFA\u7ACB\u5728\u5F52\u5E76\u64CD\u4F5C\u4E0A\u7684\u4E00\u79CD\u6709\u6548\u7684\u6392\u5E8F\u7B97\u6CD5\u3002\u8BE5\u7B97\u6CD5\u662F\u91C7\u7528\u5206\u6CBB\u6CD5 (Divide and Conquer) \u7684\u4E00\u4E2A\u975E\u5E38\u5178\u578B\u7684\u5E94\u7528\u3002\u5F52\u5E76\u6392\u5E8F\u662F\u4E00\u79CD\u7A33\u5B9A\u7684\u6392\u5E8F\u65B9\u6CD5\u3002\u5C06\u5DF2\u6709\u5E8F\u7684\u5B50\u5E8F\u5217\u5408\u5E76\uFF0C\u5F97\u5230\u5B8C\u5168\u6709\u5E8F\u7684\u5E8F\u5217\uFF1B\u5373\u5148\u4F7F\u6BCF\u4E2A\u5B50\u5E8F\u5217\u6709\u5E8F\uFF0C\u518D\u4F7F\u5B50\u5E8F\u5217\u6BB5\u95F4\u6709\u5E8F\u3002\u82E5\u5C06\u4E24\u4E2A\u6709\u5E8F\u8868\u5408\u5E76\u6210\u4E00\u4E2A\u6709\u5E8F\u8868\uFF0C\u79F0\u4E3A 2 - \u8DEF\u5F52\u5E76\u3002</p><p>\u548C\u9009\u62E9\u6392\u5E8F\u4E00\u6837\uFF0C\u5F52\u5E76\u6392\u5E8F\u7684\u6027\u80FD\u4E0D\u53D7\u8F93\u5165\u6570\u636E\u7684\u5F71\u54CD\uFF0C\u4F46\u8868\u73B0\u6BD4\u9009\u62E9\u6392\u5E8F\u597D\u7684\u591A\uFF0C\u56E0\u4E3A\u59CB\u7EC8\u90FD\u662F <code>O(nlogn)</code> \u7684\u65F6\u95F4\u590D\u6742\u5EA6\u3002\u4EE3\u4EF7\u662F\u9700\u8981\u989D\u5916\u7684\u5185\u5B58\u7A7A\u95F4\u3002</p><h3 id="\u7B97\u6CD5\u6B65\u9AA4-4" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u6B65\u9AA4-4" aria-hidden="true">#</a> \u7B97\u6CD5\u6B65\u9AA4</h3><p>\u5F52\u5E76\u6392\u5E8F\u7B97\u6CD5\u662F\u4E00\u4E2A\u9012\u5F52\u8FC7\u7A0B\uFF0C\u8FB9\u754C\u6761\u4EF6\u4E3A\u5F53\u8F93\u5165\u5E8F\u5217\u4EC5\u6709\u4E00\u4E2A\u5143\u7D20\u65F6\uFF0C\u76F4\u63A5\u8FD4\u56DE\uFF0C\u5177\u4F53\u8FC7\u7A0B\u5982\u4E0B\uFF1A</p><ol><li>\u5982\u679C\u8F93\u5165\u5185\u53EA\u6709\u4E00\u4E2A\u5143\u7D20\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\uFF0C\u5426\u5219\u5C06\u957F\u5EA6\u4E3A <code>n</code> \u7684\u8F93\u5165\u5E8F\u5217\u5206\u6210\u4E24\u4E2A\u957F\u5EA6\u4E3A <code>n/2</code> \u7684\u5B50\u5E8F\u5217\uFF1B</li><li>\u5206\u522B\u5BF9\u8FD9\u4E24\u4E2A\u5B50\u5E8F\u5217\u8FDB\u884C\u5F52\u5E76\u6392\u5E8F\uFF0C\u4F7F\u5B50\u5E8F\u5217\u53D8\u4E3A\u6709\u5E8F\u72B6\u6001\uFF1B</li><li>\u8BBE\u5B9A\u4E24\u4E2A\u6307\u9488\uFF0C\u5206\u522B\u6307\u5411\u4E24\u4E2A\u5DF2\u7ECF\u6392\u5E8F\u5B50\u5E8F\u5217\u7684\u8D77\u59CB\u4F4D\u7F6E\uFF1B</li><li>\u6BD4\u8F83\u4E24\u4E2A\u6307\u9488\u6240\u6307\u5411\u7684\u5143\u7D20\uFF0C\u9009\u62E9\u76F8\u5BF9\u5C0F\u7684\u5143\u7D20\u653E\u5165\u5230\u5408\u5E76\u7A7A\u95F4\uFF08\u7528\u4E8E\u5B58\u653E\u6392\u5E8F\u7ED3\u679C\uFF09\uFF0C\u5E76\u79FB\u52A8\u6307\u9488\u5230\u4E0B\u4E00\u4F4D\u7F6E\uFF1B</li><li>\u91CD\u590D\u6B65\u9AA4 3 ~4 \u76F4\u5230\u67D0\u4E00\u6307\u9488\u8FBE\u5230\u5E8F\u5217\u5C3E\uFF1B</li><li>\u5C06\u53E6\u4E00\u5E8F\u5217\u5269\u4E0B\u7684\u6240\u6709\u5143\u7D20\u76F4\u63A5\u590D\u5236\u5230\u5408\u5E76\u5E8F\u5217\u5C3E\u3002</li></ol><h3 id="\u56FE\u89E3\u7B97\u6CD5-4" tabindex="-1"><a class="header-anchor" href="#\u56FE\u89E3\u7B97\u6CD5-4" aria-hidden="true">#</a> \u56FE\u89E3\u7B97\u6CD5</h3><p><img src="https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/cs-basics/sorting-algorithms/merge_sort.gif" alt="MergeSort" loading="lazy"></p><h3 id="\u4EE3\u7801\u5B9E\u73B0-4" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0-4" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u5F52\u5E76\u6392\u5E8F
 *
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span>
 * <span class="token keyword">@return</span> arr
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> middle <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr_1 <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> middle<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr_2 <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> middle<span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token function">mergeSort</span><span class="token punctuation">(</span>arr_1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span>arr_2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Merge two sorted arrays
 *
 * <span class="token keyword">@param</span> <span class="token parameter">arr_1</span>
 * <span class="token keyword">@param</span> <span class="token parameter">arr_2</span>
 * <span class="token keyword">@return</span> sorted_arr
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr_1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr_2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sorted_arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arr_1<span class="token punctuation">.</span>length <span class="token operator">+</span> arr_2<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> idx_1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> idx_2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>idx_1 <span class="token operator">&lt;</span> arr_1<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> idx_2 <span class="token operator">&lt;</span> arr_2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr_1<span class="token punctuation">[</span>idx_1<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr_2<span class="token punctuation">[</span>idx_2<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sorted_arr<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> arr_1<span class="token punctuation">[</span>idx_1<span class="token punctuation">]</span><span class="token punctuation">;</span>
            idx_1 <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            sorted_arr<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> arr_2<span class="token punctuation">[</span>idx_2<span class="token punctuation">]</span><span class="token punctuation">;</span>
            idx_2 <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        idx <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>idx_1 <span class="token operator">&lt;</span> arr_1<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>idx_1 <span class="token operator">&lt;</span> arr_1<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sorted_arr<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> arr_1<span class="token punctuation">[</span>idx_1<span class="token punctuation">]</span><span class="token punctuation">;</span>
            idx_1 <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            idx <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>idx_2 <span class="token operator">&lt;</span> arr_2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sorted_arr<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> arr_2<span class="token punctuation">[</span>idx_2<span class="token punctuation">]</span><span class="token punctuation">;</span>
            idx_2 <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            idx <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sorted_arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B97\u6CD5\u5206\u6790-4" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u5206\u6790-4" aria-hidden="true">#</a> \u7B97\u6CD5\u5206\u6790</h3><ul><li><strong>\u7A33\u5B9A\u6027</strong>\uFF1A\u7A33\u5B9A</li><li><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong> \uFF1A\u6700\u4F73\uFF1AO(nlogn)\uFF0C \u6700\u5DEE\uFF1AO(nlogn)\uFF0C \u5E73\u5747\uFF1AO(nlogn)</li><li><strong>\u7A7A\u95F4\u590D\u6742\u5EA6</strong> \uFF1AO(n)</li></ul><h2 id="\u5FEB\u901F\u6392\u5E8F-quick-sort" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F-quick-sort" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F (Quick Sort)</h2><p>\u5FEB\u901F\u6392\u5E8F\u7528\u5230\u4E86\u5206\u6CBB\u601D\u60F3\uFF0C\u540C\u6837\u7684\u8FD8\u6709\u5F52\u5E76\u6392\u5E8F\u3002\u4E4D\u770B\u8D77\u6765\u5FEB\u901F\u6392\u5E8F\u548C\u5F52\u5E76\u6392\u5E8F\u975E\u5E38\u76F8\u4F3C\uFF0C\u90FD\u662F\u5C06\u95EE\u9898\u53D8\u5C0F\uFF0C\u5148\u6392\u5E8F\u5B50\u4E32\uFF0C\u6700\u540E\u5408\u5E76\u3002\u4E0D\u540C\u7684\u662F\u5FEB\u901F\u6392\u5E8F\u5728\u5212\u5206\u5B50\u95EE\u9898\u7684\u65F6\u5019\u7ECF\u8FC7\u591A\u4E00\u6B65\u5904\u7406\uFF0C\u5C06\u5212\u5206\u7684\u4E24\u7EC4\u6570\u636E\u5212\u5206\u4E3A\u4E00\u5927\u4E00\u5C0F\uFF0C\u8FD9\u6837\u5728\u6700\u540E\u5408\u5E76\u7684\u65F6\u5019\u5C31\u4E0D\u5FC5\u50CF\u5F52\u5E76\u6392\u5E8F\u90A3\u6837\u518D\u8FDB\u884C\u6BD4\u8F83\u3002\u4F46\u4E5F\u6B63\u56E0\u4E3A\u5982\u6B64\uFF0C\u5212\u5206\u7684\u4E0D\u5B9A\u6027\u4F7F\u5F97\u5FEB\u901F\u6392\u5E8F\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u5E76\u4E0D\u7A33\u5B9A\u3002</p><p>\u5FEB\u901F\u6392\u5E8F\u7684\u57FA\u672C\u601D\u60F3\uFF1A\u901A\u8FC7\u4E00\u8D9F\u6392\u5E8F\u5C06\u5F85\u6392\u5E8F\u5217\u5206\u9694\u6210\u72EC\u7ACB\u7684\u4E24\u90E8\u5206\uFF0C\u5176\u4E2D\u4E00\u90E8\u5206\u8BB0\u5F55\u7684\u5143\u7D20\u5747\u6BD4\u53E6\u4E00\u90E8\u5206\u7684\u5143\u7D20\u5C0F\uFF0C\u5219\u53EF\u5206\u522B\u5BF9\u8FD9\u4E24\u90E8\u5206\u5B50\u5E8F\u5217\u7EE7\u7EED\u8FDB\u884C\u6392\u5E8F\uFF0C\u4EE5\u8FBE\u5230\u6574\u4E2A\u5E8F\u5217\u6709\u5E8F\u3002</p><h3 id="\u7B97\u6CD5\u6B65\u9AA4-5" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u6B65\u9AA4-5" aria-hidden="true">#</a> \u7B97\u6CD5\u6B65\u9AA4</h3>`,75),z=s("\u5FEB\u901F\u6392\u5E8F\u4F7F\u7528"),R={href:"https://zh.wikipedia.org/wiki/%E5%88%86%E6%B2%BB%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},C=s("\u5206\u6CBB\u6CD5"),L=s("\uFF08Divide and conquer\uFF09\u7B56\u7565\u6765\u628A\u4E00\u4E2A\u5E8F\u5217\u5206\u4E3A\u8F83\u5C0F\u548C\u8F83\u5927\u7684 2 \u4E2A\u5B50\u5E8F\u5217\uFF0C\u7136\u540E\u9012\u56DE\u5730\u6392\u5E8F\u4E24\u4E2A\u5B50\u5E8F\u5217\u3002\u5177\u4F53\u7B97\u6CD5\u63CF\u8FF0\u5982\u4E0B\uFF1A"),B=p('<ol><li>\u4ECE\u5E8F\u5217\u4E2D<strong>\u968F\u673A</strong>\u6311\u51FA\u4E00\u4E2A\u5143\u7D20\uFF0C\u505A\u4E3A \u201C\u57FA\u51C6\u201D(<code>pivot</code>)\uFF1B</li><li>\u91CD\u65B0\u6392\u5217\u5E8F\u5217\uFF0C\u5C06\u6240\u6709\u6BD4\u57FA\u51C6\u503C\u5C0F\u7684\u5143\u7D20\u6446\u653E\u5728\u57FA\u51C6\u524D\u9762\uFF0C\u6240\u6709\u6BD4\u57FA\u51C6\u503C\u5927\u7684\u6446\u5728\u57FA\u51C6\u7684\u540E\u9762\uFF08\u76F8\u540C\u7684\u6570\u53EF\u4EE5\u5230\u4EFB\u4E00\u8FB9\uFF09\u3002\u5728\u8FD9\u4E2A\u64CD\u4F5C\u7ED3\u675F\u4E4B\u540E\uFF0C\u8BE5\u57FA\u51C6\u5C31\u5904\u4E8E\u6570\u5217\u7684\u4E2D\u95F4\u4F4D\u7F6E\u3002\u8FD9\u4E2A\u79F0\u4E3A\u5206\u533A\uFF08partition\uFF09\u64CD\u4F5C\uFF1B</li><li>\u9012\u5F52\u5730\u628A\u5C0F\u4E8E\u57FA\u51C6\u503C\u5143\u7D20\u7684\u5B50\u5E8F\u5217\u548C\u5927\u4E8E\u57FA\u51C6\u503C\u5143\u7D20\u7684\u5B50\u5E8F\u5217\u8FDB\u884C\u5FEB\u901F\u6392\u5E8F\u3002</li></ol><h3 id="\u56FE\u89E3\u7B97\u6CD5-5" tabindex="-1"><a class="header-anchor" href="#\u56FE\u89E3\u7B97\u6CD5-5" aria-hidden="true">#</a> \u56FE\u89E3\u7B97\u6CD5</h3><p><img src="https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/cs-basics/sorting-algorithms/random_quick_sort.gif" alt="RandomQuickSort" loading="lazy"></p><h3 id="\u4EE3\u7801\u5B9E\u73B0-5" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0-5" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3>',4),M=s("\u6765\u6E90\uFF1A"),q={href:"https://segmentfault.com/a/1190000040022056",target:"_blank",rel:"noopener noreferrer"},E=s("\u4F7F\u7528 Java \u5B9E\u73B0\u5FEB\u901F\u6392\u5E8F\uFF08\u8BE6\u89E3\uFF09"),N=p(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">partition</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> low<span class="token punctuation">,</span> <span class="token keyword">int</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> pivot <span class="token operator">=</span> array<span class="token punctuation">[</span>high<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> pointer <span class="token operator">=</span> low<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> low<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> high<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> pivot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> temp <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>pointer<span class="token punctuation">]</span><span class="token punctuation">;</span>
            array<span class="token punctuation">[</span>pointer<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
            pointer<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> temp <span class="token operator">=</span> array<span class="token punctuation">[</span>pointer<span class="token punctuation">]</span><span class="token punctuation">;</span>
    array<span class="token punctuation">[</span>pointer<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>high<span class="token punctuation">]</span><span class="token punctuation">;</span>
    array<span class="token punctuation">[</span>high<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    <span class="token keyword">return</span> pointer<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> low<span class="token punctuation">,</span> <span class="token keyword">int</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>low <span class="token operator">&lt;</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> position <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> low<span class="token punctuation">,</span> high<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">quickSort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> low<span class="token punctuation">,</span> position <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">quickSort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> position <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> high<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B97\u6CD5\u5206\u6790-5" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u5206\u6790-5" aria-hidden="true">#</a> \u7B97\u6CD5\u5206\u6790</h3><ul><li><strong>\u7A33\u5B9A\u6027</strong> \uFF1A\u4E0D\u7A33\u5B9A</li><li><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong> \uFF1A\u6700\u4F73\uFF1AO(nlogn)\uFF0C \u6700\u5DEE\uFF1AO(nlogn)\uFF0C\u5E73\u5747\uFF1AO(nlogn)</li><li><strong>\u7A7A\u95F4\u590D\u6742\u5EA6</strong> \uFF1AO(nlogn)</li></ul><h2 id="\u5806\u6392\u5E8F-heap-sort" tabindex="-1"><a class="header-anchor" href="#\u5806\u6392\u5E8F-heap-sort" aria-hidden="true">#</a> \u5806\u6392\u5E8F (Heap Sort)</h2><p>\u5806\u6392\u5E8F\u662F\u6307\u5229\u7528\u5806\u8FD9\u79CD\u6570\u636E\u7ED3\u6784\u6240\u8BBE\u8BA1\u7684\u4E00\u79CD\u6392\u5E8F\u7B97\u6CD5\u3002\u5806\u662F\u4E00\u4E2A\u8FD1\u4F3C\u5B8C\u5168\u4E8C\u53C9\u6811\u7684\u7ED3\u6784\uFF0C\u5E76\u540C\u65F6\u6EE1\u8DB3<strong>\u5806\u7684\u6027\u8D28</strong>\uFF1A\u5373<strong>\u5B50\u7ED3\u70B9\u7684\u503C\u603B\u662F\u5C0F\u4E8E\uFF08\u6216\u8005\u5927\u4E8E\uFF09\u5B83\u7684\u7236\u8282\u70B9</strong>\u3002</p><h3 id="\u7B97\u6CD5\u6B65\u9AA4-6" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u6B65\u9AA4-6" aria-hidden="true">#</a> \u7B97\u6CD5\u6B65\u9AA4</h3><ol><li>\u5C06\u521D\u59CB\u5F85\u6392\u5E8F\u5217 <code>(R1, R2, \u2026\u2026, Rn)</code> \u6784\u5EFA\u6210\u5927\u9876\u5806\uFF0C\u6B64\u5806\u4E3A\u521D\u59CB\u7684\u65E0\u5E8F\u533A\uFF1B</li><li>\u5C06\u5806\u9876\u5143\u7D20 <code>R[1]</code> \u4E0E\u6700\u540E\u4E00\u4E2A\u5143\u7D20 <code>R[n]</code> \u4EA4\u6362\uFF0C\u6B64\u65F6\u5F97\u5230\u65B0\u7684\u65E0\u5E8F\u533A <code>(R1, R2, \u2026\u2026, Rn-1)</code> \u548C\u65B0\u7684\u6709\u5E8F\u533A (Rn), \u4E14\u6EE1\u8DB3 <code>R[1, 2, \u2026\u2026, n-1]&lt;=R[n]</code>\uFF1B</li><li>\u7531\u4E8E\u4EA4\u6362\u540E\u65B0\u7684\u5806\u9876 <code>R[1]</code> \u53EF\u80FD\u8FDD\u53CD\u5806\u7684\u6027\u8D28\uFF0C\u56E0\u6B64\u9700\u8981\u5BF9\u5F53\u524D\u65E0\u5E8F\u533A <code>(R1, R2, \u2026\u2026, Rn-1)</code> \u8C03\u6574\u4E3A\u65B0\u5806\uFF0C\u7136\u540E\u518D\u6B21\u5C06 R [1] \u4E0E\u65E0\u5E8F\u533A\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4EA4\u6362\uFF0C\u5F97\u5230\u65B0\u7684\u65E0\u5E8F\u533A <code>(R1, R2, \u2026\u2026, Rn-2)</code> \u548C\u65B0\u7684\u6709\u5E8F\u533A <code>(Rn-1, Rn)</code>\u3002\u4E0D\u65AD\u91CD\u590D\u6B64\u8FC7\u7A0B\u76F4\u5230\u6709\u5E8F\u533A\u7684\u5143\u7D20\u4E2A\u6570\u4E3A <code>n-1</code>\uFF0C\u5219\u6574\u4E2A\u6392\u5E8F\u8FC7\u7A0B\u5B8C\u6210\u3002</li></ol><h3 id="\u56FE\u89E3\u7B97\u6CD5-6" tabindex="-1"><a class="header-anchor" href="#\u56FE\u89E3\u7B97\u6CD5-6" aria-hidden="true">#</a> \u56FE\u89E3\u7B97\u6CD5</h3><p><img src="https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/cs-basics/sorting-algorithms/heap_sort.gif" alt="HeapSort" loading="lazy"></p><h3 id="\u4EE3\u7801\u5B9E\u73B0-6" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0-6" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Global variable that records the length of an array;</span>
<span class="token keyword">static</span> <span class="token keyword">int</span> heapLen<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Swap the two elements of an array
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span>
 * <span class="token keyword">@param</span> <span class="token parameter">i</span>
 * <span class="token keyword">@param</span> <span class="token parameter">j</span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Build Max Heap
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">buildMaxHeap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">heapify</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Adjust it to the maximum heap
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span>
 * <span class="token keyword">@param</span> <span class="token parameter">i</span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">heapify</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> right <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> largest <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>right <span class="token operator">&lt;</span> heapLen <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>largest<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        largest <span class="token operator">=</span> right<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> heapLen <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>largest<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        largest <span class="token operator">=</span> left<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>largest <span class="token operator">!=</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> largest<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">heapify</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> largest<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Heap Sort
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">heapSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// index at the end of the heap</span>
    heapLen <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// build MaxHeap</span>
    <span class="token function">buildMaxHeap</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Move the top of the heap to the tail of the heap in turn</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        heapLen <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token function">heapify</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B97\u6CD5\u5206\u6790-6" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u5206\u6790-6" aria-hidden="true">#</a> \u7B97\u6CD5\u5206\u6790</h3><ul><li><strong>\u7A33\u5B9A\u6027</strong> \uFF1A\u4E0D\u7A33\u5B9A</li><li><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong> \uFF1A\u6700\u4F73\uFF1AO(nlogn)\uFF0C \u6700\u5DEE\uFF1AO(nlogn)\uFF0C \u5E73\u5747\uFF1AO(nlogn)</li><li><strong>\u7A7A\u95F4\u590D\u6742\u5EA6</strong> \uFF1AO(1)</li></ul><h2 id="\u8BA1\u6570\u6392\u5E8F-counting-sort" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u6570\u6392\u5E8F-counting-sort" aria-hidden="true">#</a> \u8BA1\u6570\u6392\u5E8F (Counting Sort)</h2><p>\u8BA1\u6570\u6392\u5E8F\u7684\u6838\u5FC3\u5728\u4E8E\u5C06\u8F93\u5165\u7684\u6570\u636E\u503C\u8F6C\u5316\u4E3A\u952E\u5B58\u50A8\u5728\u989D\u5916\u5F00\u8F9F\u7684\u6570\u7EC4\u7A7A\u95F4\u4E2D\u3002 \u4F5C\u4E3A\u4E00\u79CD\u7EBF\u6027\u65F6\u95F4\u590D\u6742\u5EA6\u7684\u6392\u5E8F\uFF0C<strong>\u8BA1\u6570\u6392\u5E8F\u8981\u6C42\u8F93\u5165\u7684\u6570\u636E\u5FC5\u987B\u662F\u6709\u786E\u5B9A\u8303\u56F4\u7684\u6574\u6570</strong>\u3002</p><p>\u8BA1\u6570\u6392\u5E8F (Counting sort) \u662F\u4E00\u79CD\u7A33\u5B9A\u7684\u6392\u5E8F\u7B97\u6CD5\u3002\u8BA1\u6570\u6392\u5E8F\u4F7F\u7528\u4E00\u4E2A\u989D\u5916\u7684\u6570\u7EC4 <code>C</code>\uFF0C\u5176\u4E2D\u7B2C <code>i</code> \u4E2A\u5143\u7D20\u662F\u5F85\u6392\u5E8F\u6570\u7EC4 <code>A</code> \u4E2D\u503C\u7B49\u4E8E <code>i</code> \u7684\u5143\u7D20\u7684\u4E2A\u6570\u3002\u7136\u540E\u6839\u636E\u6570\u7EC4 <code>C</code> \u6765\u5C06 <code>A</code> \u4E2D\u7684\u5143\u7D20\u6392\u5230\u6B63\u786E\u7684\u4F4D\u7F6E\u3002<strong>\u5B83\u53EA\u80FD\u5BF9\u6574\u6570\u8FDB\u884C\u6392\u5E8F</strong>\u3002</p><h3 id="\u7B97\u6CD5\u6B65\u9AA4-7" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u6B65\u9AA4-7" aria-hidden="true">#</a> \u7B97\u6CD5\u6B65\u9AA4</h3><ol><li>\u627E\u51FA\u6570\u7EC4\u4E2D\u7684\u6700\u5927\u503C <code>max</code>\u3001\u6700\u5C0F\u503C <code>min</code>\uFF1B</li><li>\u521B\u5EFA\u4E00\u4E2A\u65B0\u6570\u7EC4 <code>C</code>\uFF0C\u5176\u957F\u5EA6\u662F <code>max-min+1</code>\uFF0C\u5176\u5143\u7D20\u9ED8\u8BA4\u503C\u90FD\u4E3A 0\uFF1B</li><li>\u904D\u5386\u539F\u6570\u7EC4 <code>A</code> \u4E2D\u7684\u5143\u7D20 <code>A[i]</code>\uFF0C\u4EE5 <code>A[i]-min</code> \u4F5C\u4E3A <code>C</code> \u6570\u7EC4\u7684\u7D22\u5F15\uFF0C\u4EE5 <code>A[i]</code> \u7684\u503C\u5728 <code>A</code> \u4E2D\u5143\u7D20\u51FA\u73B0\u6B21\u6570\u4F5C\u4E3A <code>C[A[i]-min]</code> \u7684\u503C\uFF1B</li><li>\u5BF9 <code>C</code> \u6570\u7EC4\u53D8\u5F62\uFF0C<strong>\u65B0\u5143\u7D20\u7684\u503C\u662F\u8BE5\u5143\u7D20\u4E0E\u524D\u4E00\u4E2A\u5143\u7D20\u503C\u7684\u548C</strong>\uFF0C\u5373\u5F53 <code>i&gt;1</code> \u65F6 <code>C[i] = C[i] + C[i-1]</code>\uFF1B</li><li>\u521B\u5EFA\u7ED3\u679C\u6570\u7EC4 <code>R</code>\uFF0C\u957F\u5EA6\u548C\u539F\u59CB\u6570\u7EC4\u4E00\u6837\u3002</li><li><strong>\u4ECE\u540E\u5411\u524D</strong>\u904D\u5386\u539F\u59CB\u6570\u7EC4 <code>A</code> \u4E2D\u7684\u5143\u7D20 <code>A[i]</code>\uFF0C\u4F7F\u7528 <code>A[i]</code> \u51CF\u53BB\u6700\u5C0F\u503C <code>min</code> \u4F5C\u4E3A\u7D22\u5F15\uFF0C\u5728\u8BA1\u6570\u6570\u7EC4 <code>C</code> \u4E2D\u627E\u5230\u5BF9\u5E94\u7684\u503C <code>C[A[i]-min]</code>\uFF0C<code>C[A[i]-min]-1</code> \u5C31\u662F <code>A[i]</code> \u5728\u7ED3\u679C\u6570\u7EC4 <code>R</code> \u4E2D\u7684\u4F4D\u7F6E\uFF0C\u505A\u5B8C\u4E0A\u8FF0\u8FD9\u4E9B\u64CD\u4F5C\uFF0C\u5C06 <code>count[A[i]-min]</code> \u51CF\u5C0F 1\u3002</li></ol><h3 id="\u56FE\u89E3\u7B97\u6CD5-7" tabindex="-1"><a class="header-anchor" href="#\u56FE\u89E3\u7B97\u6CD5-7" aria-hidden="true">#</a> \u56FE\u89E3\u7B97\u6CD5</h3><p><img src="https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/cs-basics/sorting-algorithms/counting_sort.gif" alt="CountingSort" loading="lazy"></p><h3 id="\u4EE3\u7801\u5B9E\u73B0-7" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0-7" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Gets the maximum and minimum values in the array
 *
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getMinAndMax</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> maxValue <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> minValue <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> maxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            maxValue <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> minValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            minValue <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> minValue<span class="token punctuation">,</span> maxValue <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Counting Sort
 *
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">countingSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> extremum <span class="token operator">=</span> <span class="token function">getMinAndMax</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> minValue <span class="token operator">=</span> extremum<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> maxValue <span class="token operator">=</span> extremum<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> countArr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>maxValue <span class="token operator">-</span> minValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        countArr<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> minValue<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> countArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        countArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> countArr<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> idx <span class="token operator">=</span> countArr<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> minValue<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        result<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        countArr<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> minValue<span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7B97\u6CD5\u5206\u6790-7" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u5206\u6790-7" aria-hidden="true">#</a> \u7B97\u6CD5\u5206\u6790</h2><p>\u5F53\u8F93\u5165\u7684\u5143\u7D20\u662F <code>n</code> \u4E2A <code>0</code> \u5230 <code>k</code> \u4E4B\u95F4\u7684\u6574\u6570\u65F6\uFF0C\u5B83\u7684\u8FD0\u884C\u65F6\u95F4\u662F <code>O(n+k)</code>\u3002\u8BA1\u6570\u6392\u5E8F\u4E0D\u662F\u6BD4\u8F83\u6392\u5E8F\uFF0C\u6392\u5E8F\u7684\u901F\u5EA6\u5FEB\u4E8E\u4EFB\u4F55\u6BD4\u8F83\u6392\u5E8F\u7B97\u6CD5\u3002\u7531\u4E8E\u7528\u6765\u8BA1\u6570\u7684\u6570\u7EC4 <code>C</code> \u7684\u957F\u5EA6\u53D6\u51B3\u4E8E\u5F85\u6392\u5E8F\u6570\u7EC4\u4E2D\u6570\u636E\u7684\u8303\u56F4\uFF08\u7B49\u4E8E\u5F85\u6392\u5E8F\u6570\u7EC4\u7684<strong>\u6700\u5927\u503C\u4E0E\u6700\u5C0F\u503C\u7684\u5DEE\u52A0\u4E0A 1</strong>\uFF09\uFF0C\u8FD9\u4F7F\u5F97\u8BA1\u6570\u6392\u5E8F\u5BF9\u4E8E\u6570\u636E\u8303\u56F4\u5F88\u5927\u7684\u6570\u7EC4\uFF0C\u9700\u8981\u5927\u91CF\u989D\u5916\u5185\u5B58\u7A7A\u95F4\u3002</p><ul><li><strong>\u7A33\u5B9A\u6027</strong> \uFF1A\u7A33\u5B9A</li><li><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong> \uFF1A\u6700\u4F73\uFF1A<code>O(n+k)</code> \u6700\u5DEE\uFF1A<code>O(n+k)</code> \u5E73\u5747\uFF1A<code>O(n+k)</code></li><li><strong>\u7A7A\u95F4\u590D\u6742\u5EA6</strong> \uFF1A<code>O(k)</code></li></ul><h2 id="\u6876\u6392\u5E8F-bucket-sort" tabindex="-1"><a class="header-anchor" href="#\u6876\u6392\u5E8F-bucket-sort" aria-hidden="true">#</a> \u6876\u6392\u5E8F (Bucket Sort)</h2><p>\u6876\u6392\u5E8F\u662F\u8BA1\u6570\u6392\u5E8F\u7684\u5347\u7EA7\u7248\u3002\u5B83\u5229\u7528\u4E86\u51FD\u6570\u7684\u6620\u5C04\u5173\u7CFB\uFF0C\u9AD8\u6548\u4E0E\u5426\u7684\u5173\u952E\u5C31\u5728\u4E8E\u8FD9\u4E2A\u6620\u5C04\u51FD\u6570\u7684\u786E\u5B9A\u3002\u4E3A\u4E86\u4F7F\u6876\u6392\u5E8F\u66F4\u52A0\u9AD8\u6548\uFF0C\u6211\u4EEC\u9700\u8981\u505A\u5230\u8FD9\u4E24\u70B9\uFF1A</p><ol><li>\u5728\u989D\u5916\u7A7A\u95F4\u5145\u8DB3\u7684\u60C5\u51B5\u4E0B\uFF0C\u5C3D\u91CF\u589E\u5927\u6876\u7684\u6570\u91CF</li><li>\u4F7F\u7528\u7684\u6620\u5C04\u51FD\u6570\u80FD\u591F\u5C06\u8F93\u5165\u7684 N \u4E2A\u6570\u636E\u5747\u5300\u7684\u5206\u914D\u5230 K \u4E2A\u6876\u4E2D</li></ol><p>\u6876\u6392\u5E8F\u7684\u5DE5\u4F5C\u7684\u539F\u7406\uFF1A\u5047\u8BBE\u8F93\u5165\u6570\u636E\u670D\u4ECE\u5747\u5300\u5206\u5E03\uFF0C\u5C06\u6570\u636E\u5206\u5230\u6709\u9650\u6570\u91CF\u7684\u6876\u91CC\uFF0C\u6BCF\u4E2A\u6876\u518D\u5206\u522B\u6392\u5E8F\uFF08\u6709\u53EF\u80FD\u518D\u4F7F\u7528\u522B\u7684\u6392\u5E8F\u7B97\u6CD5\u6216\u662F\u4EE5\u9012\u5F52\u65B9\u5F0F\u7EE7\u7EED\u4F7F\u7528\u6876\u6392\u5E8F\u8FDB\u884C\u3002</p><h3 id="\u7B97\u6CD5\u6B65\u9AA4-8" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u6B65\u9AA4-8" aria-hidden="true">#</a> \u7B97\u6CD5\u6B65\u9AA4</h3><ol><li>\u8BBE\u7F6E\u4E00\u4E2A BucketSize\uFF0C\u4F5C\u4E3A\u6BCF\u4E2A\u6876\u6240\u80FD\u653E\u7F6E\u591A\u5C11\u4E2A\u4E0D\u540C\u6570\u503C\uFF1B</li><li>\u904D\u5386\u8F93\u5165\u6570\u636E\uFF0C\u5E76\u4E14\u628A\u6570\u636E\u4F9D\u6B21\u6620\u5C04\u5230\u5BF9\u5E94\u7684\u6876\u91CC\u53BB\uFF1B</li><li>\u5BF9\u6BCF\u4E2A\u975E\u7A7A\u7684\u6876\u8FDB\u884C\u6392\u5E8F\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5176\u5B83\u6392\u5E8F\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u9012\u5F52\u4F7F\u7528\u6876\u6392\u5E8F\uFF1B</li><li>\u4ECE\u975E\u7A7A\u6876\u91CC\u628A\u6392\u597D\u5E8F\u7684\u6570\u636E\u62FC\u63A5\u8D77\u6765\u3002</li></ol><h3 id="\u56FE\u89E3\u7B97\u6CD5-8" tabindex="-1"><a class="header-anchor" href="#\u56FE\u89E3\u7B97\u6CD5-8" aria-hidden="true">#</a> \u56FE\u89E3\u7B97\u6CD5</h3><p><img src="https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/cs-basics/sorting-algorithms/bucket_sort.gif" alt="BucketSort" loading="lazy"></p><h3 id="\u4EE3\u7801\u5B9E\u73B0-8" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0-8" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Gets the maximum and minimum values in the array
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getMinAndMax</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> maxValue <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> minValue <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> maxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            maxValue <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> minValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            minValue <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> minValue<span class="token punctuation">,</span> maxValue <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Bucket Sort
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">bucketSort</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> bucket_size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">||</span> bucket_size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> extremum <span class="token operator">=</span> <span class="token function">getMinAndMax</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> minValue <span class="token operator">=</span> extremum<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> maxValue <span class="token operator">=</span> extremum<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> bucket_cnt <span class="token operator">=</span> <span class="token punctuation">(</span>maxValue <span class="token operator">-</span> minValue<span class="token punctuation">)</span> <span class="token operator">/</span> bucket_size <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> buckets <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bucket_cnt<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        buckets<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> element <span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token punctuation">(</span>element <span class="token operator">-</span> minValue<span class="token punctuation">)</span> <span class="token operator">/</span> bucket_size<span class="token punctuation">;</span>
        buckets<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> buckets<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>buckets<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            buckets<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token function">sort</span><span class="token punctuation">(</span>buckets<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> bucket_size <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> bucket <span class="token operator">:</span> buckets<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> element <span class="token operator">:</span> bucket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B97\u6CD5\u5206\u6790-8" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u5206\u6790-8" aria-hidden="true">#</a> \u7B97\u6CD5\u5206\u6790</h3><ul><li><strong>\u7A33\u5B9A\u6027</strong> \uFF1A\u7A33\u5B9A</li><li><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong> \uFF1A\u6700\u4F73\uFF1A<code>O(n+k)</code> \u6700\u5DEE\uFF1A<code>O(n\xB2)</code> \u5E73\u5747\uFF1A<code>O(n+k)</code></li><li><strong>\u7A7A\u95F4\u590D\u6742\u5EA6</strong> \uFF1A<code>O(k)</code></li></ul><h2 id="\u57FA\u6570\u6392\u5E8F-radix-sort" tabindex="-1"><a class="header-anchor" href="#\u57FA\u6570\u6392\u5E8F-radix-sort" aria-hidden="true">#</a> \u57FA\u6570\u6392\u5E8F (Radix Sort)</h2><p>\u57FA\u6570\u6392\u5E8F\u4E5F\u662F\u975E\u6BD4\u8F83\u7684\u6392\u5E8F\u7B97\u6CD5\uFF0C\u5BF9\u5143\u7D20\u4E2D\u7684\u6BCF\u4E00\u4F4D\u6570\u5B57\u8FDB\u884C\u6392\u5E8F\uFF0C\u4ECE\u6700\u4F4E\u4F4D\u5F00\u59CB\u6392\u5E8F\uFF0C\u590D\u6742\u5EA6\u4E3A <code>O(n\xD7k)</code>\uFF0C<code>n</code> \u4E3A\u6570\u7EC4\u957F\u5EA6\uFF0C<code>k</code> \u4E3A\u6570\u7EC4\u4E2D\u5143\u7D20\u7684\u6700\u5927\u7684\u4F4D\u6570\uFF1B</p><p>\u57FA\u6570\u6392\u5E8F\u662F\u6309\u7167\u4F4E\u4F4D\u5148\u6392\u5E8F\uFF0C\u7136\u540E\u6536\u96C6\uFF1B\u518D\u6309\u7167\u9AD8\u4F4D\u6392\u5E8F\uFF0C\u7136\u540E\u518D\u6536\u96C6\uFF1B\u4F9D\u6B21\u7C7B\u63A8\uFF0C\u76F4\u5230\u6700\u9AD8\u4F4D\u3002\u6709\u65F6\u5019\u6709\u4E9B\u5C5E\u6027\u662F\u6709\u4F18\u5148\u7EA7\u987A\u5E8F\u7684\uFF0C\u5148\u6309\u4F4E\u4F18\u5148\u7EA7\u6392\u5E8F\uFF0C\u518D\u6309\u9AD8\u4F18\u5148\u7EA7\u6392\u5E8F\u3002\u6700\u540E\u7684\u6B21\u5E8F\u5C31\u662F\u9AD8\u4F18\u5148\u7EA7\u9AD8\u7684\u5728\u524D\uFF0C\u9AD8\u4F18\u5148\u7EA7\u76F8\u540C\u7684\u4F4E\u4F18\u5148\u7EA7\u9AD8\u7684\u5728\u524D\u3002\u57FA\u6570\u6392\u5E8F\u57FA\u4E8E\u5206\u522B\u6392\u5E8F\uFF0C\u5206\u522B\u6536\u96C6\uFF0C\u6240\u4EE5\u662F\u7A33\u5B9A\u7684\u3002</p><h3 id="\u7B97\u6CD5\u6B65\u9AA4-9" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u6B65\u9AA4-9" aria-hidden="true">#</a> \u7B97\u6CD5\u6B65\u9AA4</h3><ol><li>\u53D6\u5F97\u6570\u7EC4\u4E2D\u7684\u6700\u5927\u6570\uFF0C\u5E76\u53D6\u5F97\u4F4D\u6570\uFF0C\u5373\u4E3A\u8FED\u4EE3\u6B21\u6570 <code>N</code>\uFF08\u4F8B\u5982\uFF1A\u6570\u7EC4\u4E2D\u6700\u5927\u6570\u503C\u4E3A 1000\uFF0C\u5219 <code>N=4</code>\uFF09\uFF1B</li><li><code>A</code> \u4E3A\u539F\u59CB\u6570\u7EC4\uFF0C\u4ECE\u6700\u4F4E\u4F4D\u5F00\u59CB\u53D6\u6BCF\u4E2A\u4F4D\u7EC4\u6210 <code>radix</code> \u6570\u7EC4\uFF1B</li><li>\u5BF9 <code>radix</code> \u8FDB\u884C\u8BA1\u6570\u6392\u5E8F\uFF08\u5229\u7528\u8BA1\u6570\u6392\u5E8F\u9002\u7528\u4E8E\u5C0F\u8303\u56F4\u6570\u7684\u7279\u70B9\uFF09\uFF1B</li><li>\u5C06 <code>radix</code> \u4F9D\u6B21\u8D4B\u503C\u7ED9\u539F\u6570\u7EC4\uFF1B</li><li>\u91CD\u590D 2~4 \u6B65\u9AA4 <code>N</code> \u6B21</li></ol><h3 id="\u56FE\u89E3\u7B97\u6CD5-9" tabindex="-1"><a class="header-anchor" href="#\u56FE\u89E3\u7B97\u6CD5-9" aria-hidden="true">#</a> \u56FE\u89E3\u7B97\u6CD5</h3><p><img src="https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/cs-basics/sorting-algorithms/radix_sort.gif" alt="RadixSort" loading="lazy"></p><h3 id="\u4EE3\u7801\u5B9E\u73B0-9" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0-9" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Radix Sort
 *
 * <span class="token keyword">@param</span> <span class="token parameter">arr</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">radixSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> maxValue <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> element <span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>element <span class="token operator">&gt;</span> maxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            maxValue <span class="token operator">=</span> element<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>maxValue <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        maxValue <span class="token operator">=</span> maxValue <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token class-name">N</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> radix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            radix<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> element <span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token punctuation">(</span>element <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
            radix<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> l <span class="token operator">:</span> radix<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> n <span class="token operator">:</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                arr<span class="token punctuation">[</span>idx<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> n<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B97\u6CD5\u5206\u6790-9" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u5206\u6790-9" aria-hidden="true">#</a> \u7B97\u6CD5\u5206\u6790</h3><ul><li><strong>\u7A33\u5B9A\u6027</strong> \uFF1A\u7A33\u5B9A</li><li><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong> \uFF1A\u6700\u4F73\uFF1A<code>O(n\xD7k)</code> \u6700\u5DEE\uFF1A<code>O(n\xD7k)</code> \u5E73\u5747\uFF1A<code>O(n\xD7k)</code></li><li><strong>\u7A7A\u95F4\u590D\u6742\u5EA6</strong> \uFF1A<code>O(n+k)</code></li></ul><p><strong>\u57FA\u6570\u6392\u5E8F vs \u8BA1\u6570\u6392\u5E8F vs \u6876\u6392\u5E8F</strong></p><p>\u8FD9\u4E09\u79CD\u6392\u5E8F\u7B97\u6CD5\u90FD\u5229\u7528\u4E86\u6876\u7684\u6982\u5FF5\uFF0C\u4F46\u5BF9\u6876\u7684\u4F7F\u7528\u65B9\u6CD5\u4E0A\u6709\u660E\u663E\u5DEE\u5F02\uFF1A</p><ul><li>\u57FA\u6570\u6392\u5E8F\uFF1A\u6839\u636E\u952E\u503C\u7684\u6BCF\u4F4D\u6570\u5B57\u6765\u5206\u914D\u6876</li><li>\u8BA1\u6570\u6392\u5E8F\uFF1A\u6BCF\u4E2A\u6876\u53EA\u5B58\u50A8\u5355\u4E00\u952E\u503C</li><li>\u6876\u6392\u5E8F\uFF1A\u6BCF\u4E2A\u6876\u5B58\u50A8\u4E00\u5B9A\u8303\u56F4\u7684\u6570\u503C</li></ul><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,52),H={href:"https://www.cnblogs.com/guoyaohua/p/8600214.html",target:"_blank",rel:"noopener noreferrer"},G=s("https://www.cnblogs.com/guoyaohua/p/8600214.html"),J={href:"https://en.wikipedia.org/wiki/Sorting_algorithm",target:"_blank",rel:"noopener noreferrer"},D=s("https://en.wikipedia.org/wiki/Sorting_algorithm"),F={href:"https://sort.hust.cc/",target:"_blank",rel:"noopener noreferrer"},Q=s("https://sort.hust.cc/");function K(T,P){const a=i("ExternalLinkIcon");return o(),c("div",null,[n("blockquote",null,[n("p",null,[u,n("a",r,[k,t(a)]),d])]),v,m,n("p",null,[b,n("a",h,[g,t(a)]),y,n("a",w,[f,t(a)]),x]),_,j,n("ul",null,[O,n("li",null,[n("strong",null,[n("a",A,[S,t(a)])]),V])]),I,n("p",null,[z,n("a",R,[C,t(a)]),L]),B,n("blockquote",null,[n("p",null,[M,n("a",q,[E,t(a)])])]),N,n("ul",null,[n("li",null,[n("a",H,[G,t(a)])]),n("li",null,[n("a",J,[D,t(a)])]),n("li",null,[n("a",F,[Q,t(a)])])])])}var X=e(l,[["render",K],["__file","10-classical-sorting-algorithms.html.vue"]]);export{X as default};
