import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c,b as n,a as p,e as t,d as s,r as l}from"./app.0aadd796.js";const i={},u=t(`<h1 id="\u300C\u76F4\u51FB\u9762\u8BD5\u300D\u2014\u2014-java-\u96C6\u5408-\u4F60\u80AF\u5B9A\u4E5F\u4F1A\u88AB\u95EE\u5230\u8FD9\u4E9B" tabindex="-1"><a class="header-anchor" href="#\u300C\u76F4\u51FB\u9762\u8BD5\u300D\u2014\u2014-java-\u96C6\u5408-\u4F60\u80AF\u5B9A\u4E5F\u4F1A\u88AB\u95EE\u5230\u8FD9\u4E9B" aria-hidden="true">#</a> \u300C\u76F4\u51FB\u9762\u8BD5\u300D\u2014\u2014 Java \u96C6\u5408\uFF0C\u4F60\u80AF\u5B9A\u4E5F\u4F1A\u88AB\u95EE\u5230\u8FD9\u4E9B</h1><p>\u4F5C\u4E3A\u4E00\u4F4D\u5C0F\u83DC \u201D\u4E00\u9762\u9762\u8BD5\u5B98\u201C\uFF0C\u9762\u8BD5\u8FC7\u7A0B\u4E2D\uFF0C\u6211\u80AF\u5B9A\u4F1A\u95EE Java \u96C6\u5408\u7684\u5185\u5BB9\uFF0C\u540C\u65F6\u4F5C\u4E3A\u6C42\u804C\u8005\uFF0C\u4E5F\u80AF\u5B9A\u4F1A\u88AB\u95EE\u5230\u96C6\u5408\uFF0C\u6240\u4EE5\u6574\u7406\u4E0B Java \u96C6\u5408\u9762\u8BD5\u9898</p><p><img src="https://i02piccdn.sogoucdn.com/fe487f455e5b1eb6" alt="" loading="lazy"></p><blockquote><p>\u8BF4\u8BF4\u5E38\u89C1\u7684\u96C6\u5408\u6709\u54EA\u4E9B\u5427\uFF1F</p><p>HashMap\u8BF4\u4E00\u4E0B\uFF0C\u5176\u4E2D\u7684Key\u9700\u8981\u91CD\u5199hashCode()\u548Cequals()\u5417\uFF1F</p><p>HashMap\u4E2Dkey\u548Cvalue\u53EF\u4EE5\u4E3Anull\u5417\uFF1F\u5141\u8BB8\u51E0\u4E2A\u4E3Anull\u5440\uFF1F</p><p>HashMap\u7EBF\u7A0B\u5B89\u5168\u5417?ConcurrentHashMap\u548ChashTable\u6709\u4EC0\u4E48\u533A\u522B\uFF1F</p><p>List\u548CSet\u8BF4\u4E00\u4E0B\uFF0C\u73B0\u5728\u6709\u4E00\u4E2AArrayList\uFF0C\u5BF9\u5176\u4E2D\u7684\u6240\u6709\u5143\u7D20\u6309\u7167\u67D0\u4E00\u5C5E\u6027\u5927\u5C0F\u6392\u5E8F\uFF0C\u5E94\u8BE5\u600E\u4E48\u505A\uFF1F</p><p>ArrayList \u548C Vector \u7684\u533A\u522B</p><p>list \u53EF\u4EE5\u5220\u9664\u5417\uFF0C\u904D\u5386\u7684\u65F6\u5019\u53EF\u4EE5\u5220\u9664\u5417\uFF0C\u4E3A\u4EC0\u4E48</p></blockquote><p>\u9762\u5411\u5BF9\u8C61\u8BED\u8A00\u5BF9\u4E8B\u7269\u7684\u4F53\u73B0\u90FD\u662F\u4EE5\u5BF9\u8C61\u7684\u5F62\u5F0F\uFF0C\u6240\u4EE5\u4E3A\u4E86\u65B9\u4FBF\u5BF9\u591A\u4E2A\u5BF9\u8C61\u7684\u64CD\u4F5C\uFF0C\u9700\u8981\u5C06\u5BF9\u8C61\u8FDB\u884C\u5B58\u50A8\uFF0C\u96C6\u5408\u5C31\u662F\u5B58\u50A8\u5BF9\u8C61\u6700\u5E38\u7528\u7684\u4E00\u79CD\u65B9\u5F0F\uFF0C\u4E5F\u53EB\u5BB9\u5668\u3002</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gdp03vldkkg30hv0gzwet.gif" alt="" loading="lazy"></p><p>\u4ECE\u4E0A\u9762\u7684\u96C6\u5408\u6846\u67B6\u56FE\u53EF\u4EE5\u770B\u5230\uFF0CJava \u96C6\u5408\u6846\u67B6\u4E3B\u8981\u5305\u62EC\u4E24\u79CD\u7C7B\u578B\u7684\u5BB9\u5668</p><ul><li>\u4E00\u79CD\u662F\u96C6\u5408\uFF08Collection\uFF09\uFF0C\u5B58\u50A8\u4E00\u4E2A\u5143\u7D20\u96C6\u5408</li><li>\u53E6\u4E00\u79CD\u662F\u56FE\uFF08Map\uFF09\uFF0C\u5B58\u50A8\u952E/\u503C\u5BF9\u6620\u5C04\u3002</li></ul><p>Collection \u63A5\u53E3\u53C8\u6709 3 \u79CD\u5B50\u7C7B\u578B\uFF0CList\u3001Set \u548C Queue\uFF0C\u518D\u4E0B\u9762\u662F\u4E00\u4E9B\u62BD\u8C61\u7C7B\uFF0C\u6700\u540E\u662F\u5177\u4F53\u5B9E\u73B0\u7C7B\uFF0C\u5E38\u7528\u7684\u6709 ArrayList\u3001LinkedList\u3001HashSet\u3001LinkedHashSet\u3001HashMap\u3001LinkedHashMap \u7B49\u7B49\u3002</p><p>\u96C6\u5408\u6846\u67B6\u662F\u4E00\u4E2A\u7528\u6765\u4EE3\u8868\u548C\u64CD\u7EB5\u96C6\u5408\u7684\u7EDF\u4E00\u67B6\u6784\u3002\u6240\u6709\u7684\u96C6\u5408\u6846\u67B6\u90FD\u5305\u542B\u5982\u4E0B\u5185\u5BB9\uFF1A</p><ul><li><p><strong>\u63A5\u53E3</strong>\uFF1A\u662F\u4EE3\u8868\u96C6\u5408\u7684\u62BD\u8C61\u6570\u636E\u7C7B\u578B\u3002\u4F8B\u5982 Collection\u3001List\u3001Set\u3001Map \u7B49\u3002\u4E4B\u6240\u4EE5\u5B9A\u4E49\u591A\u4E2A\u63A5\u53E3\uFF0C\u662F\u4E3A\u4E86\u4EE5\u4E0D\u540C\u7684\u65B9\u5F0F\u64CD\u4F5C\u96C6\u5408\u5BF9\u8C61</p></li><li><p><strong>\u5B9E\u73B0\uFF08\u7C7B\uFF09</strong>\uFF1A\u662F\u96C6\u5408\u63A5\u53E3\u7684\u5177\u4F53\u5B9E\u73B0\u3002\u4ECE\u672C\u8D28\u4E0A\u8BB2\uFF0C\u5B83\u4EEC\u662F\u53EF\u91CD\u590D\u4F7F\u7528\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u4F8B\u5982\uFF1AArrayList\u3001LinkedList\u3001HashSet\u3001HashMap\u3002</p></li><li><p><strong>\u7B97\u6CD5</strong>\uFF1A\u662F\u5B9E\u73B0\u96C6\u5408\u63A5\u53E3\u7684\u5BF9\u8C61\u91CC\u7684\u65B9\u6CD5\u6267\u884C\u7684\u4E00\u4E9B\u6709\u7528\u7684\u8BA1\u7B97\uFF0C\u4F8B\u5982\uFF1A\u641C\u7D22\u548C\u6392\u5E8F\u3002\u8FD9\u4E9B\u7B97\u6CD5\u88AB\u79F0\u4E3A\u591A\u6001\uFF0C\u90A3\u662F\u56E0\u4E3A\u76F8\u540C\u7684\u65B9\u6CD5\u53EF\u4EE5\u5728\u76F8\u4F3C\u7684\u63A5\u53E3\u4E0A\u6709\u7740\u4E0D\u540C\u7684\u5B9E\u73B0\u3002</p></li></ul><hr><h2 id="\u8BF4\u8BF4\u5E38\u7528\u7684\u96C6\u5408\u6709\u54EA\u4E9B\u5427" tabindex="-1"><a class="header-anchor" href="#\u8BF4\u8BF4\u5E38\u7528\u7684\u96C6\u5408\u6709\u54EA\u4E9B\u5427" aria-hidden="true">#</a> \u8BF4\u8BF4\u5E38\u7528\u7684\u96C6\u5408\u6709\u54EA\u4E9B\u5427\uFF1F</h2><blockquote><p>Collection \u6709\u4EC0\u4E48\u5B50\u63A5\u53E3\u3001\u6709\u54EA\u4E9B\u5177\u4F53\u7684\u5B9E\u73B0</p></blockquote><p>Map \u63A5\u53E3\u548C Collection \u63A5\u53E3\u662F\u6240\u6709\u96C6\u5408\u6846\u67B6\u7684\u7236\u63A5\u53E3\uFF1A</p><ol><li>Collection\u63A5\u53E3\u7684\u5B50\u63A5\u53E3\u5305\u62EC\uFF1ASet\u3001List\u3001Queue</li><li>List\u662F\u6709\u5E8F\u7684\u5141\u8BB8\u6709\u91CD\u590D\u5143\u7D20\u7684 Collection\uFF0C\u5B9E\u73B0\u7C7B\u4E3B\u8981\u6709\uFF1AArrayList\u3001LinkedList\u3001Stack\u4EE5\u53CAVector\u7B49</li><li>Set\u662F\u4E00\u79CD\u4E0D\u5305\u542B\u91CD\u590D\u5143\u7D20\u4E14\u65E0\u5E8F\u7684Collection\uFF0C\u5B9E\u73B0\u7C7B\u4E3B\u8981\u6709\uFF1AHashSet\u3001TreeSet\u3001LinkedHashSet\u7B49</li><li>Map\u6CA1\u6709\u7EE7\u627FCollection\u63A5\u53E3\uFF0CMap\u63D0\u4F9Bkey\u5230value\u7684\u6620\u5C04\u3002\u5B9E\u73B0\u7C7B\u4E3B\u8981\u6709\uFF1AHashMap\u3001TreeMap\u3001Hashtable\u3001ConcurrentHashMap \u4EE5\u53CA Properties \u7B49</li></ol><h2 id="arraylist-\u548C-vector-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#arraylist-\u548C-vector-\u7684\u533A\u522B" aria-hidden="true">#</a> ArrayList \u548C Vector \u7684\u533A\u522B</h2><p>\u76F8\u540C\u70B9\uFF1A</p><ul><li><p>ArrayList \u548C Vector \u90FD\u662F\u7EE7\u627F\u4E86\u76F8\u540C\u7684\u7236\u7C7B\u548C\u5B9E\u73B0\u4E86\u76F8\u540C\u7684\u63A5\u53E3\uFF08\u90FD\u5B9E\u73B0\u4E86List\uFF0C\u6709\u5E8F\u3001\u5141\u8BB8\u91CD\u590D\u548Cnull\uFF09</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">extends</span> <span class="token class-name">AbstractList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
        <span class="token keyword">implements</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">RandomAccess</span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5E95\u5C42\u90FD\u662F\u6570\u7EC4\uFF08Object[]\uFF09\u5B9E\u73B0\u7684</p></li><li><p>\u521D\u59CB\u9ED8\u8BA4\u957F\u5EA6\u90FD\u4E3A<strong>10</strong></p></li></ul><p>\u4E0D\u540C\u70B9\uFF1A</p><ul><li><p>\u540C\u6B65\u6027\uFF1AVector \u4E2D\u7684 public \u65B9\u6CD5\u591A\u6570\u6DFB\u52A0\u4E86 synchronized \u5173\u952E\u5B57\u3001\u4EE5\u786E\u4FDD\u65B9\u6CD5\u540C\u6B65\u3001\u4E5F\u5373\u662F Vector \u7EBF\u7A0B\u5B89\u5168\u3001ArrayList \u7EBF\u7A0B\u4E0D\u5B89\u5168</p></li><li><p>\u6027\u80FD\uFF1AVector \u5B58\u5728 synchronized \u7684\u9501\u7B49\u5F85\u60C5\u51B5\u3001\u9700\u8981\u7B49\u5F85\u91CA\u653E\u9501\u8FD9\u4E2A\u8FC7\u7A0B\u3001\u6240\u4EE5\u6027\u80FD\u76F8\u5BF9\u8F83\u5DEE</p></li><li><p>\u6269\u5BB9\u5927\u5C0F\uFF1AArrayList \u5728\u5E95\u5C42\u6570\u7EC4\u4E0D\u591F\u7528\u65F6\u5728\u539F\u6765\u7684\u57FA\u7840\u4E0A\u6269\u5C55 0.5 \u500D\uFF0CVector \u9ED8\u8BA4\u662F\u6269\u5C55 1 \u500D</p><p>\u6269\u5BB9\u673A\u5236\uFF0C\u6269\u5BB9\u65B9\u6CD5\u5176\u5B9E\u5C31\u662F\u65B0\u521B\u5EFA\u4E00\u4E2A\u6570\u7EC4\uFF0C\u7136\u540E\u5C06\u65E7\u6570\u7EC4\u7684\u5143\u7D20\u90FD\u590D\u5236\u5230\u65B0\u6570\u7EC4\u91CC\u9762\u3002\u5176\u5E95\u5C42\u7684\u6269\u5BB9\u65B9\u6CD5\u90FD\u5728 <strong>grow()</strong> \u4E2D\uFF08\u57FA\u4E8EJDK8\uFF09</p><ul><li><p>ArrayList \u7684 grow()\uFF0C\u5728\u6EE1\u8DB3\u6269\u5BB9\u6761\u4EF6\u65F6\u3001ArrayList\u4EE5<strong>1.5</strong> \u500D\u7684\u65B9\u5F0F\u5728\u6269\u5BB9\uFF08oldCapacity &gt;&gt; <strong>1</strong> \uFF0C\u53F3\u79FB\u8FD0\u7B97\uFF0C\u76F8\u5F53\u4E8E\u9664\u4EE5 2\uFF0C\u7ED3\u679C\u4E3A\u4E8C\u5206\u4E4B\u4E00\u7684 oldCapacity\uFF09</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">grow</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// overflow-conscious code</span>
    <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">//newCapacity = oldCapacity + O.5*oldCapacity,\u6B64\u5904\u6269\u5BB90.5\u500D</span>
    <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> oldCapacity <span class="token operator">+</span> <span class="token punctuation">(</span>oldCapacity <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> minCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        newCapacity <span class="token operator">=</span> minCapacity<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> MAX_ARRAY_SIZE <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        newCapacity <span class="token operator">=</span> <span class="token function">hugeCapacity</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// minCapacity is usually close to size, so this is a win:</span>
    elementData <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Vector \u7684 grow()\uFF0CVector \u6BD4 ArrayList\u591A\u4E00\u4E2A\u5C5E\u6027\uFF0C\u6269\u5C55\u56E0\u5B50capacityIncrement\uFF0C\u53EF\u4EE5\u6269\u5BB9\u5927\u5C0F\u3002\u5F53\u6269\u5BB9\u5BB9\u91CF\u589E\u91CF\u5927\u4E8E<strong>0</strong>\u65F6\u3001\u65B0\u6570\u7EC4\u957F\u5EA6\u4E3A\u539F\u6570\u7EC4\u957F\u5EA6**+<strong>\u6269\u5BB9\u5BB9\u91CF\u589E\u91CF\u3001\u5426\u5219\u65B0\u6570\u7EC4\u957F\u5EA6\u4E3A\u539F\u6570\u7EC4\u957F\u5EA6\u7684</strong>2**\u500D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">grow</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// overflow-conscious code</span>
    <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">//</span>
    <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> oldCapacity <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>capacityIncrement <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span>
                                     capacityIncrement <span class="token operator">:</span> oldCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> minCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        newCapacity <span class="token operator">=</span> minCapacity<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> MAX_ARRAY_SIZE <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        newCapacity <span class="token operator">=</span> <span class="token function">hugeCapacity</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    elementData <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h2 id="arraylist-\u4E0E-linkedlist-\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#arraylist-\u4E0E-linkedlist-\u533A\u522B" aria-hidden="true">#</a> ArrayList \u4E0E LinkedList \u533A\u522B</h2>`,22),k=n("ul",null,[n("li",null,"\u662F\u5426\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\uFF1A ArrayList \u548C LinkedList \u90FD\u662F\u4E0D\u540C\u6B65\u7684\uFF0C\u4E5F\u5C31\u662F\u4E0D\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\uFF1B"),n("li",null,[n("strong",null,"\u5E95\u5C42\u6570\u636E\u7ED3\u6784"),s("\uFF1A Arraylist \u5E95\u5C42\u4F7F\u7528\u7684\u662F Object \u6570\u7EC4\uFF1BLinkedList \u5E95\u5C42\u4F7F\u7528\u7684\u662F"),n("strong",null,"\u53CC\u5411\u5FAA\u73AF\u94FE\u8868"),s("\u6570\u636E\u7ED3\u6784\uFF1B")]),n("li",null,[n("strong",null,"\u63D2\u5165\u548C\u5220\u9664\u662F\u5426\u53D7\u5143\u7D20\u4F4D\u7F6E\u7684\u5F71\u54CD\uFF1A"),n("ul",null,[n("li",null,[n("strong",null,"ArrayList \u91C7\u7528\u6570\u7EC4\u5B58\u50A8\uFF0C\u6240\u4EE5\u63D2\u5165\u548C\u5220\u9664\u5143\u7D20\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u53D7\u5143\u7D20\u4F4D\u7F6E\u7684\u5F71\u54CD\u3002"),s(" \u6BD4\u5982\uFF1A\u6267\u884C "),n("code",null,"add(E e)"),s("\u65B9\u6CD5\u7684\u65F6\u5019\uFF0C ArrayList \u4F1A\u9ED8\u8BA4\u5728\u5C06\u6307\u5B9A\u7684\u5143\u7D20\u8FFD\u52A0\u5230\u6B64\u5217\u8868\u7684\u672B\u5C3E\uFF0C\u8FD9\u79CD\u60C5\u51B5\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u662FO(1)\u3002\u4F46\u662F\u5982\u679C\u8981\u5728\u6307\u5B9A\u4F4D\u7F6E i \u63D2\u5165\u548C\u5220\u9664\u5143\u7D20\u7684\u8BDD\uFF08 "),n("code",null,"add(intindex,E element)"),s("\uFF09\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u4E3A O(n-i)\u3002\u56E0\u4E3A\u5728\u8FDB\u884C\u4E0A\u8FF0\u64CD\u4F5C\u7684\u65F6\u5019\u96C6\u5408\u4E2D\u7B2C i \u548C\u7B2C i \u4E2A\u5143\u7D20\u4E4B\u540E\u7684(n-i)\u4E2A\u5143\u7D20\u90FD\u8981\u6267\u884C\u5411\u540E\u4F4D/\u5411\u524D\u79FB\u4E00\u4F4D\u7684\u64CD\u4F5C\u3002")]),n("li",null,[n("strong",null,[s("LinkedList \u91C7\u7528\u94FE\u8868\u5B58\u50A8\uFF0C\u6240\u4EE5\u63D2\u5165\uFF0C\u5220\u9664\u5143\u7D20\u65F6\u95F4\u590D\u6742\u5EA6\u4E0D\u53D7\u5143\u7D20\u4F4D\u7F6E\u7684\u5F71\u54CD\uFF0C\u90FD\u662F\u8FD1\u4F3C "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(1)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])]),s("\uFF0C\u800C\u6570\u7EC4\u4E3A\u8FD1\u4F3C "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s("\u3002")])]),n("li",null,"ArrayList \u4E00\u822C\u5E94\u7528\u4E8E\u67E5\u8BE2\u8F83\u591A\u4F46\u63D2\u5165\u4EE5\u53CA\u5220\u9664\u8F83\u5C11\u60C5\u51B5\uFF0C\u5982\u679C\u63D2\u5165\u4EE5\u53CA\u5220\u9664\u8F83\u591A\u5219\u5EFA\u8BAE\u4F7F\u7528 LinkedList")])]),n("li",null,[n("strong",null,"\u662F\u5426\u652F\u6301\u5FEB\u901F\u968F\u673A\u8BBF\u95EE"),s("\uFF1A LinkedList \u4E0D\u652F\u6301\u9AD8\u6548\u7684\u968F\u673A\u5143\u7D20\u8BBF\u95EE\uFF0C\u800C ArrayList \u5B9E\u73B0\u4E86 RandomAccess \u63A5\u53E3\uFF0C\u6240\u4EE5\u6709\u968F\u673A\u8BBF\u95EE\u529F\u80FD\u3002\u5FEB\u901F\u968F\u673A\u8BBF\u95EE\u5C31\u662F\u901A\u8FC7\u5143\u7D20\u7684\u5E8F\u53F7\u5FEB\u901F\u83B7\u53D6\u5143\u7D20\u5BF9\u8C61(\u5BF9\u5E94\u4E8E "),n("code",null,"get(intindex)"),s("\u65B9\u6CD5)\u3002")]),n("li",null,[n("strong",null,"\u5185\u5B58\u7A7A\u95F4\u5360\u7528"),s("\uFF1A ArrayList \u7684\u7A7A\u95F4\u6D6A\u8D39\u4E3B\u8981\u4F53\u73B0\u5728\u5728 list \u5217\u8868\u7684\u7ED3\u5C3E\u4F1A\u9884\u7559\u4E00\u5B9A\u7684\u5BB9\u91CF\u7A7A\u95F4\uFF0C\u800C LinkedList \u7684\u7A7A\u95F4\u82B1\u8D39\u5219\u4F53\u73B0\u5728\u5B83\u7684\u6BCF\u4E00\u4E2A\u5143\u7D20\u90FD\u9700\u8981\u6D88\u8017\u6BD4 ArrayList \u66F4\u591A\u7684\u7A7A\u95F4\uFF08\u56E0\u4E3A\u8981\u5B58\u653E\u76F4\u63A5\u540E\u7EE7\u548C\u76F4\u63A5\u524D\u9A71\u4EE5\u53CA\u6570\u636E\uFF09\u3002")])],-1),r=t(`<p>\u9AD8\u7EA7\u5DE5\u7A0B\u5E08\u7684\u6211\uFF0C\u53EF\u4E0D\u5F97\u770B\u770B\u6E90\u7801\uFF0C\u5177\u4F53\u5206\u6790\u4E0B\uFF1A</p><ul><li><p>ArrayList \u5DE5\u4F5C\u539F\u7406\u5176\u5B9E\u5F88\u7B80\u5355\uFF0C\u5E95\u5C42\u662F\u52A8\u6001\u6570\u7EC4\uFF0C\u6BCF\u6B21\u521B\u5EFA\u4E00\u4E2A ArrayList \u5B9E\u4F8B\u65F6\u4F1A\u5206\u914D\u4E00\u4E2A\u521D\u59CB\u5BB9\u91CF\uFF08\u6CA1\u6709\u6307\u5B9A\u521D\u59CB\u5BB9\u91CF\u7684\u8BDD\uFF0C\u9ED8\u8BA4\u662F 10\uFF09\uFF0C\u4EE5 add \u65B9\u6CD5\u4E3A\u4F8B\uFF0C\u5982\u679C\u6CA1\u6709\u6307\u5B9A\u521D\u59CB\u5BB9\u91CF\uFF0C\u5F53\u6267\u884C add \u65B9\u6CD5\uFF0C\u5148\u5224\u65AD\u5F53\u524D\u6570\u7EC4\u662F\u5426\u4E3A\u7A7A\uFF0C\u5982\u679C\u4E3A\u7A7A\u5219\u7ED9\u4FDD\u5B58\u5BF9\u8C61\u7684\u6570\u7EC4\u5206\u914D\u4E00\u4E2A\u6700\u5C0F\u5BB9\u91CF\uFF0C\u9ED8\u8BA4\u4E3A 10\u3002\u5F53\u6DFB\u52A0\u5927\u5BB9\u91CF\u5143\u7D20\u65F6\uFF0C\u4F1A\u5148\u589E\u52A0\u6570\u7EC4\u7684\u5927\u5C0F\uFF0C\u4EE5\u63D0\u9AD8\u6DFB\u52A0\u7684\u6548\u7387\uFF1B</p></li><li><p>LinkedList \u662F\u6709\u5E8F\u5E76\u4E14\u652F\u6301\u5143\u7D20\u91CD\u590D\u7684\u96C6\u5408\uFF0C\u5E95\u5C42\u662F\u57FA\u4E8E\u53CC\u5411\u94FE\u8868\u7684\uFF0C\u5373\u6BCF\u4E2A\u8282\u70B9\u65E2\u5305\u542B\u6307\u5411\u5176\u540E\u7EE7\u7684\u5F15\u7528\u4E5F\u5305\u62EC\u6307\u5411\u5176\u524D\u9A71\u7684\u5F15\u7528\u3002\u94FE\u8868\u65E0\u5BB9\u91CF\u9650\u5236\uFF0C\u4F46\u53CC\u5411\u94FE\u8868\u672C\u8EAB\u4F7F\u7528\u4E86\u66F4\u591A\u7A7A\u95F4\uFF0C\u4E5F\u9700\u8981\u989D\u5916\u7684\u94FE\u8868\u6307\u9488\u64CD\u4F5C\u3002\u6309\u4E0B\u6807\u8BBF\u95EE\u5143\u7D20 <code>get(i)/set(i,e)</code> \u8981\u60B2\u5267\u7684\u904D\u5386\u94FE\u8868\u5C06\u6307\u9488\u79FB\u52A8\u5230\u4F4D(\u5982\u679Ci&gt;\u6570\u7EC4\u5927\u5C0F\u7684\u4E00\u534A\uFF0C\u4F1A\u4ECE\u672B\u5C3E\u79FB\u8D77)\u3002\u63D2\u5165\u3001\u5220\u9664\u5143\u7D20\u65F6\u4FEE\u6539\u524D\u540E\u8282\u70B9\u7684\u6307\u9488\u5373\u53EF\uFF0C\u4F46\u8FD8\u662F\u8981\u904D\u5386\u90E8\u5206\u94FE\u8868\u7684\u6307\u9488\u624D\u80FD\u79FB\u52A8\u5230\u4E0B\u6807\u6240\u6307\u7684\u4F4D\u7F6E\uFF0C\u53EA\u6709\u5728\u94FE\u8868\u4E24\u5934\u7684\u64CD\u4F5C<code>add()</code>\uFF0C <code>addFirst()</code>\uFF0C<code>removeLast()</code>\u6216\u7528 <code>iterator()</code> \u4E0A\u7684 <code>remove()</code> \u80FD\u7701\u6389\u6307\u9488\u7684\u79FB\u52A8\u3002\u6B64\u5916 LinkedList \u8FD8\u5B9E\u73B0\u4E86 Deque\uFF08\u7EE7\u627F\u81EAQueue\u63A5\u53E3\uFF09\u63A5\u53E3\uFF0C\u53EF\u4EE5\u5F53\u505A\u961F\u5217\u4F7F\u7528\u3002</p></li></ul><p>\u4E0D\u4F1A\u56CA\u62EC\u6240\u6709\u65B9\u6CD5\uFF0C\u53EA\u662F\u4E3A\u4E86\u5B66\u4E60\uFF0C\u8BB0\u5F55\u601D\u60F3\u3002</p><p>ArrayList \u548C LinkedList \u4E24\u8005\u90FD\u5B9E\u73B0\u4E86 List \u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
        <span class="token keyword">implements</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">RandomAccess</span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span><span class="token punctuation">{</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">extends</span> <span class="token class-name">AbstractSequentialList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">implements</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Deque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6784\u9020\u5668" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u5668" aria-hidden="true">#</a> \u6784\u9020\u5668</h3><p>ArrayList \u63D0\u4F9B\u4E86 3 \u4E2A\u6784\u9020\u5668\uFF0C\u2460\u65E0\u53C2\u6784\u9020\u5668 \u2461\u5E26\u521D\u59CB\u5BB9\u91CF\u6784\u9020\u5668 \u2462\u53C2\u6570\u4E3A\u96C6\u5408\u6784\u9020\u5668</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
        <span class="token keyword">implements</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">RandomAccess</span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span><span class="token punctuation">{</span>
   
<span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment">// \u521B\u5EFA\u521D\u59CB\u5BB9\u91CF\u7684\u6570\u7EC4</span>
     <span class="token keyword">this</span><span class="token punctuation">.</span>elementData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span>initialCapacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">this</span><span class="token punctuation">.</span>elementData <span class="token operator">=</span> EMPTY_ELEMENTDATA<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
   <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal Capacity: &quot;</span><span class="token operator">+</span>initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u9ED8\u8BA4\u4E3A\u7A7A\u6570\u7EC4</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>elementData <span class="token operator">=</span> DEFAULTCAPACITY_EMPTY_ELEMENTDATA<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
    
<span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//...}       </span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LinkedList \u63D0\u4F9B\u4E86 2 \u4E2A\u6784\u9020\u5668\uFF0C\u56E0\u4E3A\u57FA\u4E8E\u94FE\u8868\uFF0C\u6240\u4EE5\u4E5F\u5C31\u6CA1\u6709\u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u4E5F\u6CA1\u6709\u6269\u5BB9\u7684\u673A\u5236\uFF0C\u5C31\u662F\u4E00\u76F4\u5728\u524D\u9762\u6216\u8005\u540E\u9762\u63D2\u63D2\u63D2~~</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">LinkedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">LinkedList</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">addAll</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// LinkedList \u65E2\u7136\u4F5C\u4E3A\u94FE\u8868\uFF0C\u90A3\u4E48\u80AF\u5B9A\u4F1A\u6709\u8282\u70B9</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">E</span> item<span class="token punctuation">;</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">;</span>

    <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>item <span class="token operator">=</span> element<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>prev <span class="token operator">=</span> prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63D2\u5165" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165" aria-hidden="true">#</a> \u63D2\u5165</h3><p><strong>ArrayList</strong>:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u786E\u4FDD\u6570\u7EC4\u7684\u5BB9\u91CF\uFF0C\u4FDD\u8BC1\u53EF\u4EE5\u6DFB\u52A0\u8BE5\u5143\u7D20</span>
    <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>size <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Increments modCount!!</span>
    <span class="token comment">// \u5C06\u8BE5\u5143\u7D20\u653E\u5165\u6570\u7EC4\u4E2D</span>
    elementData<span class="token punctuation">[</span>size<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u6570\u7EC4\u662F\u7A7A\u7684\uFF0C\u90A3\u4E48\u4F1A\u521D\u59CB\u5316\u8BE5\u6570\u7EC4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>elementData <span class="token operator">==</span> DEFAULTCAPACITY_EMPTY_ELEMENTDATA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// DEFAULT_CAPACITY \u4E3A 10,\u6240\u4EE5\u8C03\u7528\u65E0\u53C2\u9ED8\u8BA4 ArrayList \u6784\u9020\u65B9\u6CD5\u521D\u59CB\u5316\u7684\u8BDD\uFF0C\u9ED8\u8BA4\u7684\u6570\u7EC4\u5BB9\u91CF\u4E3A 10</span>
        minCapacity <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>DEFAULT_CAPACITY<span class="token punctuation">,</span> minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">ensureExplicitCapacity</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">ensureExplicitCapacity</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>

    <span class="token comment">// \u786E\u4FDD\u6570\u7EC4\u7684\u5BB9\u91CF\uFF0C\u5982\u679C\u4E0D\u591F\u7684\u8BDD\uFF0C\u8C03\u7528 grow \u65B9\u6CD5\u6269\u5BB9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>minCapacity <span class="token operator">-</span> elementData<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token function">grow</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6269\u5BB9\u5177\u4F53\u7684\u65B9\u6CD5</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">grow</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F53\u524D\u6570\u7EC4\u7684\u5BB9\u91CF</span>
    <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// \u65B0\u6570\u7EC4\u6269\u5BB9\u4E3A\u539F\u6765\u5BB9\u91CF\u7684 1.5 \u500D</span>
    <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> oldCapacity <span class="token operator">+</span> <span class="token punctuation">(</span>oldCapacity <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u65B0\u6570\u7EC4\u6269\u5BB9\u5BB9\u91CF\u8FD8\u662F\u6BD4\u6700\u5C11\u9700\u8981\u7684\u5BB9\u91CF\u8FD8\u8981\u5C0F\u7684\u8BDD\uFF0C\u5C31\u8BBE\u7F6E\u6269\u5145\u5BB9\u91CF\u4E3A\u6700\u5C0F\u9700\u8981\u7684\u5BB9\u91CF</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> minCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        newCapacity <span class="token operator">=</span> minCapacity<span class="token punctuation">;</span>
    <span class="token comment">//\u5224\u65AD\u65B0\u6570\u7EC4\u5BB9\u91CF\u662F\u5426\u5DF2\u7ECF\u8D85\u51FA\u6700\u5927\u6570\u7EC4\u8303\u56F4\uFF0CMAX_ARRAY_SIZE = Integer.MAX_VALUE - 8</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> MAX_ARRAY_SIZE <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        newCapacity <span class="token operator">=</span> <span class="token function">hugeCapacity</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// minCapacity is usually close to size, so this is a win:</span>
    <span class="token comment">// \u590D\u5236\u5143\u7D20\u5230\u65B0\u7684\u6570\u7EC4\u4E2D</span>
    elementData <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u7136\u4E5F\u53EF\u4EE5\u63D2\u5165\u6307\u5B9A\u4F4D\u7F6E\uFF0C\u8FD8\u6709\u4E00\u4E2A\u91CD\u8F7D\u7684\u65B9\u6CD5 <code>add(int index, E element)</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5224\u65AD index \u6709\u6CA1\u6709\u8D85\u51FA\u7D22\u5F15\u7684\u8303\u56F4</span>
    <span class="token function">rangeCheckForAdd</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u548C\u4E4B\u524D\u7684\u64CD\u4F5C\u662F\u4E00\u6837\u7684\uFF0C\u90FD\u662F\u4FDD\u8BC1\u6570\u7EC4\u7684\u5BB9\u91CF\u8DB3\u591F</span>
    <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>size <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Increments modCount!!</span>
    <span class="token comment">// \u5C06\u6307\u5B9A\u4F4D\u7F6E\u53CA\u5176\u540E\u9762\u6570\u636E\u5411\u540E\u79FB\u52A8\u4E00\u4F4D</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> index<span class="token punctuation">,</span> elementData<span class="token punctuation">,</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
                     size <span class="token operator">-</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5C06\u8BE5\u5143\u7D20\u6DFB\u52A0\u5230\u6307\u5B9A\u7684\u6570\u7EC4\u4F4D\u7F6E</span>
    elementData<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> element<span class="token punctuation">;</span>
    <span class="token comment">// ArrayList \u7684\u5927\u5C0F\u6539\u53D8</span>
    size<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u6BCF\u6B21\u63D2\u5165\u6307\u5B9A\u4F4D\u7F6E\u90FD\u8981\u79FB\u52A8\u5143\u7D20\uFF0C\u6548\u7387\u8F83\u4F4E\u3002</p><p>\u518D\u6765\u770B <strong>LinkedList</strong> \u7684\u63D2\u5165\uFF0C\u4E5F\u6709\u63D2\u5165\u672B\u5C3E\uFF0C\u63D2\u5165\u6307\u5B9A\u4F4D\u7F6E\u4E24\u79CD\uFF0C\u7531\u4E8E\u57FA\u4E8E\u94FE\u8868\uFF0C\u80AF\u5B9A\u5F97\u5148\u6709\u4E2A Node</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">E</span> item<span class="token punctuation">;</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">;</span>

    <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>item <span class="token operator">=</span> element<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>prev <span class="token operator">=</span> prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u76F4\u63A5\u5F80\u961F\u5C3E\u52A0\u5143\u7D20</span>
    <span class="token function">linkLast</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">linkLast</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4FDD\u5B58\u539F\u6765\u94FE\u8868\u5C3E\u90E8\u8282\u70B9\uFF0Clast \u662F\u5168\u5C40\u53D8\u91CF\uFF0C\u7528\u6765\u8868\u793A\u961F\u5C3E\u5143\u7D20</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> l <span class="token operator">=</span> last<span class="token punctuation">;</span>
    <span class="token comment">// \u4E3A\u8BE5\u5143\u7D20 e \u65B0\u5EFA\u4E00\u4E2A\u8282\u70B9</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> e<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5C06\u65B0\u8282\u70B9\u8BBE\u4E3A\u961F\u5C3E</span>
    last <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u539F\u6765\u7684\u961F\u5C3E\u5143\u7D20\u4E3A\u7A7A\uFF0C\u90A3\u4E48\u8BF4\u660E\u539F\u6765\u7684\u6574\u4E2A\u5217\u8868\u662F\u7A7A\u7684\uFF0C\u5C31\u628A\u65B0\u8282\u70B9\u8D4B\u503C\u7ED9\u5934\u7ED3\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        first <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
    <span class="token comment">// \u539F\u6765\u5C3E\u7ED3\u70B9\u7684\u540E\u9762\u4E3A\u65B0\u751F\u6210\u7684\u7ED3\u70B9</span>
        l<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token comment">// \u8282\u70B9\u6570 +1</span>
    size<span class="token operator">++</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u68C0\u67E5 index \u6709\u6CA1\u6709\u8D85\u51FA\u7D22\u5F15\u8303\u56F4</span>
    <span class="token function">checkPositionIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u8FFD\u52A0\u5230\u5C3E\u90E8\uFF0C\u90A3\u4E48\u5C31\u8DDF add(E e) \u4E00\u6837\u4E86</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> size<span class="token punctuation">)</span>
        <span class="token function">linkLast</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
    <span class="token comment">// \u5426\u5219\u5C31\u662F\u63D2\u5728\u5176\u4ED6\u4F4D\u7F6E</span>
     <span class="token function">linkBefore</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token function">node</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//linkBefore\u65B9\u6CD5\u4E2D\u8C03\u7528\u4E86\u8FD9\u4E2Anode\u65B9\u6CD5\uFF0C\u7C7B\u4F3C\u4E8C\u5206\u67E5\u627E\u7684\u4F18\u5316</span>
<span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">node</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// assert isElementIndex(index);</span>
    <span class="token comment">// \u5982\u679C index \u5728\u524D\u534A\u6BB5\uFF0C\u4ECE\u524D\u5F80\u540E\u904D\u5386\u83B7\u53D6 node</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C index \u5728\u540E\u534A\u6BB5\uFF0C\u4ECE\u540E\u5F80\u524D\u904D\u5386\u83B7\u53D6 node</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> last<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> index<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>
            x <span class="token operator">=</span> x<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">linkBefore</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> succ<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// assert succ != null;</span>
    <span class="token comment">// \u4FDD\u5B58 index \u8282\u70B9\u7684\u524D\u8282\u70B9</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> pred <span class="token operator">=</span> succ<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
    <span class="token comment">// \u65B0\u5EFA\u4E00\u4E2A\u76EE\u6807\u8282\u70B9</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>pred<span class="token punctuation">,</span> e<span class="token punctuation">,</span> succ<span class="token punctuation">)</span><span class="token punctuation">;</span>
    succ<span class="token punctuation">.</span>prev <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u662F\u5728\u5F00\u5934\u5904\u63D2\u5165\u7684\u8BDD</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pred <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        first <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        pred<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    size<span class="token operator">++</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6" aria-hidden="true">#</a> \u83B7\u53D6</h3><p><strong>ArrayList</strong> \u7684 get() \u65B9\u6CD5\u5F88\u7B80\u5355\uFF0C\u5C31\u662F\u5728\u6570\u7EC4\u4E2D\u8FD4\u56DE\u6307\u5B9A\u4F4D\u7F6E\u7684\u5143\u7D20\u5373\u53EF\uFF0C\u6240\u4EE5\u6548\u7387\u5F88\u9AD8</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u68C0\u67E5 index \u6709\u6CA1\u6709\u8D85\u51FA\u7D22\u5F15\u7684\u8303\u56F4</span>
    <span class="token function">rangeCheck</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8FD4\u56DE\u6307\u5B9A\u4F4D\u7F6E\u7684\u5143\u7D20</span>
    <span class="token keyword">return</span> <span class="token function">elementData</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>LinkedList</strong> \u7684 get() \u65B9\u6CD5\uFF0C\u5C31\u662F\u5728\u5185\u90E8\u8C03\u7528\u4E86\u4E0A\u8FB9\u770B\u5230\u7684 node() \u65B9\u6CD5\uFF0C\u5224\u65AD\u5728\u524D\u534A\u6BB5\u8FD8\u662F\u5728\u540E\u534A\u6BB5\uFF0C\u7136\u540E\u904D\u5386\u5F97\u5230\u5373\u53EF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkElementIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">node</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span>item<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="hash\u51B2\u7A81\u53CA\u89E3\u51B3\u529E\u6CD5" tabindex="-1"><a class="header-anchor" href="#hash\u51B2\u7A81\u53CA\u89E3\u51B3\u529E\u6CD5" aria-hidden="true">#</a> Hash\u51B2\u7A81\u53CA\u89E3\u51B3\u529E\u6CD5</h2><p>\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\u7684\u65B9\u6CD5\u4E00\u822C\u6709\uFF1A\u5F00\u653E\u5B9A\u5740\u6CD5\u3001\u94FE\u5730\u5740\u6CD5\uFF08\u62C9\u94FE\u6CD5\uFF09\u3001\u518D\u54C8\u5E0C\u6CD5\u3001\u5EFA\u7ACB\u516C\u5171\u6EA2\u51FA\u533A\u7B49\u65B9\u6CD5\u3002</p><blockquote><ul><li>\u5F00\u653E\u5B9A\u5740\u6CD5\uFF1A\u4ECE\u53D1\u751F\u51B2\u7A81\u7684\u90A3\u4E2A\u5355\u5143\u8D77\uFF0C\u6309\u7167\u4E00\u5B9A\u7684\u6B21\u5E8F\uFF0C\u4ECE\u54C8\u5E0C\u8868\u4E2D\u627E\u5230\u4E00\u4E2A\u7A7A\u95F2\u7684\u5355\u5143\u3002\u7136\u540E\u628A\u53D1\u751F\u51B2\u7A81\u7684\u5143\u7D20\u5B58\u5165\u5230\u8BE5\u5355\u5143\u7684\u4E00\u79CD\u65B9\u6CD5\u3002\u5F00\u653E\u5B9A\u5740\u6CD5\u9700\u8981\u7684\u8868\u957F\u5EA6\u8981\u5927\u4E8E\u7B49\u4E8E\u6240\u9700\u8981\u5B58\u653E\u7684\u5143\u7D20\u3002</li><li>\u94FE\u63A5\u5730\u5740\u6CD5\uFF08\u62C9\u94FE\u6CD5\uFF09\uFF1A\u662F\u5C06\u54C8\u5E0C\u503C\u76F8\u540C\u7684\u5143\u7D20\u6784\u6210\u4E00\u4E2A\u540C\u4E49\u8BCD\u7684\u5355\u94FE\u8868\uFF0C\u5E76\u5C06\u5355\u94FE\u8868\u7684\u5934\u6307\u9488\u5B58\u653E\u5728\u54C8\u5E0C\u8868\u7684\u7B2Ci\u4E2A\u5355\u5143\u4E2D\uFF0C\u67E5\u627E\u3001\u63D2\u5165\u548C\u5220\u9664\u4E3B\u8981\u5728\u540C\u4E49\u8BCD\u94FE\u8868\u4E2D\u8FDB\u884C\u3002\uFF08\u94FE\u8868\u6CD5\u9002\u7528\u4E8E\u7ECF\u5E38\u8FDB\u884C\u63D2\u5165\u548C\u5220\u9664\u7684\u60C5\u51B5\uFF09</li><li>\u518D\u54C8\u5E0C\u6CD5\uFF1A\u5C31\u662F\u540C\u65F6\u6784\u9020\u591A\u4E2A\u4E0D\u540C\u7684\u54C8\u5E0C\u51FD\u6570\uFF1A Hi = RHi(key) i= 1,2,3 \u2026 k; \u5F53H1 = RH1(key) \u53D1\u751F\u51B2\u7A81\u65F6\uFF0C\u518D\u7528H2 = RH2(key) \u8FDB\u884C\u8BA1\u7B97\uFF0C\u76F4\u5230\u51B2\u7A81\u4E0D\u518D\u4EA7\u751F\uFF0C\u8FD9\u79CD\u65B9\u6CD5\u4E0D\u6613\u4EA7\u751F\u805A\u96C6\uFF0C\u4F46\u662F\u589E\u52A0\u4E86\u8BA1\u7B97\u65F6\u95F4</li><li>\u5EFA\u7ACB\u516C\u5171\u6EA2\u51FA\u533A\uFF1A\u5C06\u54C8\u5E0C\u8868\u5206\u4E3A\u516C\u5171\u8868\u548C\u6EA2\u51FA\u8868\uFF0C\u5F53\u6EA2\u51FA\u53D1\u751F\u65F6\uFF0C\u5C06\u6240\u6709\u6EA2\u51FA\u6570\u636E\u7EDF\u4E00\u653E\u5230\u6EA2\u51FA\u533A</li></ul></blockquote><h2 id="hashmap\u7684\u5E95\u5C42\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#hashmap\u7684\u5E95\u5C42\u5B9E\u73B0" aria-hidden="true">#</a> HashMap\u7684\u5E95\u5C42\u5B9E\u73B0</h2><blockquote><p>\u4EC0\u4E48\u65F6\u5019\u4F1A\u4F7F\u7528HashMap\uFF1F\u4ED6\u6709\u4EC0\u4E48\u7279\u70B9\uFF1F</p><p>\u4F60\u77E5\u9053HashMap\u7684\u5DE5\u4F5C\u539F\u7406\u5417\uFF1F</p><p>\u4F60\u77E5\u9053get\u548Cput\u7684\u539F\u7406\u5417\uFF1Fequals()\u548ChashCode()\u7684\u90FD\u6709\u4EC0\u4E48\u4F5C\u7528\uFF1F</p><p>\u4F60\u77E5\u9053hash\u7684\u5B9E\u73B0\u5417\uFF1F\u4E3A\u4EC0\u4E48\u8981\u8FD9\u6837\u5B9E\u73B0\uFF1F</p><p>\u5982\u679CHashMap\u7684\u5927\u5C0F\u8D85\u8FC7\u4E86\u8D1F\u8F7D\u56E0\u5B50(load factor)\u5B9A\u4E49\u7684\u5BB9\u91CF\uFF0C\u600E\u4E48\u529E\uFF1F</p></blockquote><p>HashMap \u5728 JDK 7 \u548C JDK8 \u4E2D\u7684\u5B9E\u73B0\u65B9\u5F0F\u7565\u6709\u4E0D\u540C\u3002\u5206\u5F00\u8BB0\u5F55\u3002</p><p>\u6DF1\u5165 HahsMap \u4E4B\u524D\uFF0C\u5148\u8981\u4E86\u89E3\u7684\u6982\u5FF5</p><ol><li><p>initialCapacity\uFF1A\u521D\u59CB\u5BB9\u91CF\u3002\u6307\u7684\u662F HashMap \u96C6\u5408\u521D\u59CB\u5316\u7684\u65F6\u5019\u81EA\u8EAB\u7684\u5BB9\u91CF\u3002\u53EF\u4EE5\u5728\u6784\u9020\u65B9\u6CD5\u4E2D\u6307\u5B9A\uFF1B\u5982\u679C\u4E0D\u6307\u5B9A\u7684\u8BDD\uFF0C\u603B\u5BB9\u91CF\u9ED8\u8BA4\u503C\u662F 16 \u3002\u9700\u8981\u6CE8\u610F\u7684\u662F\u521D\u59CB\u5BB9\u91CF\u5FC5\u987B\u662F 2 \u7684\u5E42\u6B21\u65B9\u3002\uFF08<strong>1.7\u4E2D\uFF0C\u5DF2\u77E5HashMap\u4E2D\u5C06\u8981\u5B58\u653E\u7684KV\u4E2A\u6570\u7684\u65F6\u5019\uFF0C\u8BBE\u7F6E\u4E00\u4E2A\u5408\u7406\u7684\u521D\u59CB\u5316\u5BB9\u91CF\u53EF\u4EE5\u6709\u6548\u7684\u63D0\u9AD8\u6027\u80FD</strong>\uFF09</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_INITIAL_CAPACITY <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// aka 16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>size\uFF1A\u5F53\u524D HashMap \u4E2D\u5DF2\u7ECF\u5B58\u50A8\u7740\u7684\u952E\u503C\u5BF9\u6570\u91CF\uFF0C\u5373 <code>HashMap.size()</code> \u3002</p></li><li><p>loadFactor\uFF1A\u52A0\u8F7D\u56E0\u5B50\u3002\u6240\u8C13\u7684\u52A0\u8F7D\u56E0\u5B50\u5C31\u662F HashMap (\u5F53\u524D\u7684\u5BB9\u91CF/\u603B\u5BB9\u91CF) \u5230\u8FBE\u4E00\u5B9A\u503C\u7684\u65F6\u5019\uFF0CHashMap \u4F1A\u5B9E\u65BD\u6269\u5BB9\u3002\u52A0\u8F7D\u56E0\u5B50\u4E5F\u53EF\u4EE5\u901A\u8FC7\u6784\u9020\u65B9\u6CD5\u4E2D\u6307\u5B9A\uFF0C\u9ED8\u8BA4\u7684\u503C\u662F 0.75 \u3002\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u5047\u8BBE\u6709\u4E00\u4E2A HashMap \u7684\u521D\u59CB\u5BB9\u91CF\u4E3A 16 \uFF0C\u90A3\u4E48\u6269\u5BB9\u7684\u9600\u503C\u5C31\u662F 0.75 * 16 = 12 \u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5728\u4F60\u6253\u7B97\u5B58\u5165\u7B2C 13 \u4E2A\u503C\u7684\u65F6\u5019\uFF0CHashMap \u4F1A\u5148\u6267\u884C\u6269\u5BB9\u3002</p></li><li><p>threshold\uFF1A\u6269\u5BB9\u9600\u503C\u3002\u5373 \u6269\u5BB9\u9600\u503C = HashMap \u603B\u5BB9\u91CF * \u52A0\u8F7D\u56E0\u5B50\uFF08\u9ED8\u8BA4\u662F12\uFF09\u3002\u5F53\u524D HashMap \u7684\u5BB9\u91CF\u5927\u4E8E\u6216\u7B49\u4E8E\u6269\u5BB9\u9600\u503C\u7684\u65F6\u5019\u5C31\u4F1A\u53BB\u6267\u884C\u6269\u5BB9\u3002\u6269\u5BB9\u7684\u5BB9\u91CF\u4E3A\u5F53\u524D HashMap \u603B\u5BB9\u91CF\u7684\u4E24\u500D\u3002\u6BD4\u5982\uFF0C\u5F53\u524D HashMap \u7684\u603B\u5BB9\u91CF\u4E3A 16 \uFF0C\u90A3\u4E48\u6269\u5BB9\u4E4B\u540E\u4E3A 32 \u3002</p></li><li><p>table\uFF1AEntry \u6570\u7EC4\u3002\u6211\u4EEC\u90FD\u77E5\u9053 HashMap \u5185\u90E8\u5B58\u50A8 key/value \u662F\u901A\u8FC7 Entry \u8FD9\u4E2A\u4ECB\u8D28\u6765\u5B9E\u73B0\u7684\u3002\u800C table \u5C31\u662F Entry \u6570\u7EC4\u3002</p></li></ol><h3 id="jdk1-7-\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#jdk1-7-\u5B9E\u73B0" aria-hidden="true">#</a> JDK1.7 \u5B9E\u73B0</h3>`,35),d=n("p",null,[s("JDK1.7 \u4E2D HashMap \u7531 "),n("strong",null,"\u6570\u7EC4+\u94FE\u8868"),s(" \u7EC4\u6210\uFF08"),n("strong",null,"\u201C\u94FE\u8868\u6563\u5217\u201D"),s(" \u5373\u6570\u7EC4\u548C\u94FE\u8868\u7684\u7ED3\u5408\u4F53\uFF09\uFF0C\u6570\u7EC4\u662F HashMap \u7684\u4E3B\u4F53\uFF0C\u94FE\u8868\u5219\u662F\u4E3B\u8981\u4E3A\u4E86\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\u800C\u5B58\u5728\u7684\uFF08HashMap \u91C7\u7528 "),n("strong",null,"\u201C\u62C9\u94FE\u6CD5\u4E5F\u5C31\u662F\u94FE\u5730\u5740\u6CD5\u201D"),s(" \u89E3\u51B3\u51B2\u7A81\uFF09\uFF0C\u5982\u679C\u5B9A\u4F4D\u5230\u7684\u6570\u7EC4\u4F4D\u7F6E\u4E0D\u542B\u94FE\u8868\uFF08\u5F53\u524D entry \u7684 next \u6307\u5411 null \uFF09\uFF0C\u90A3\u4E48\u5BF9\u4E8E\u67E5\u627E\uFF0C\u6DFB\u52A0\u7B49\u64CD\u4F5C\u5F88\u5FEB\uFF0C\u4EC5\u9700\u4E00\u6B21\u5BFB\u5740\u5373\u53EF\uFF1B\u5982\u679C\u5B9A\u4F4D\u5230\u7684\u6570\u7EC4\u5305\u542B\u94FE\u8868\uFF0C\u5BF9\u4E8E\u6DFB\u52A0\u64CD\u4F5C\uFF0C\u5176\u65F6\u95F4\u590D\u6742\u5EA6\u4F9D\u7136\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(1)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])]),s("\uFF0C\u56E0\u4E3A\u6700\u65B0\u7684 Entry \u4F1A\u63D2\u5165\u94FE\u8868\u5934\u90E8\uFF0C\u5373\u9700\u8981\u7B80\u5355\u6539\u53D8\u5F15\u7528\u94FE\u5373\u53EF\uFF0C\u800C\u5BF9\u4E8E\u67E5\u627E\u64CD\u4F5C\u6765\u8BB2\uFF0C\u6B64\u65F6\u5C31\u9700\u8981\u904D\u5386\u94FE\u8868\uFF0C\u7136\u540E\u901A\u8FC7 key \u5BF9\u8C61\u7684 equals \u65B9\u6CD5\u9010\u4E00\u6BD4\u5BF9\u67E5\u627E\u3002")],-1),m=t('<blockquote><p>\u6240\u8C13 <strong>\u201C\u62C9\u94FE\u6CD5\u201D</strong> \u5C31\u662F\u5C06\u94FE\u8868\u548C\u6570\u7EC4\u76F8\u7ED3\u5408\u3002\u4E5F\u5C31\u662F\u8BF4\u521B\u5EFA\u4E00\u4E2A\u94FE\u8868\u6570\u7EC4\uFF0C\u6570\u7EC4\u4E2D\u6BCF\u4E00\u683C\u5C31\u662F\u4E00\u4E2A\u94FE\u8868\u3002\u82E5\u9047\u5230\u54C8\u5E0C\u51B2\u7A81\uFF0C\u5219\u5C06\u51B2\u7A81\u7684\u503C\u52A0\u5230\u94FE\u8868\u4E2D\u5373\u53EF\u3002</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdx45a2fbbj31dz0oaacx.jpg" alt="" loading="lazy"></p><h4 id="\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> \u6E90\u7801\u89E3\u6790</h4><h5 id="\u6784\u9020\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u65B9\u6CD5" aria-hidden="true">#</a> \u6784\u9020\u65B9\u6CD5</h5>',4),v=s("\u300A\u963F\u91CC\u5DF4\u5DF4 Java \u5F00\u53D1\u624B\u518C\u300B\u63A8\u8350\u96C6\u5408\u521D\u59CB\u5316\u65F6\uFF0C\u6307\u5B9A\u96C6\u5408\u521D\u59CB\u503C\u5927\u5C0F\u3002\uFF08\u8BF4\u660E\uFF1AHashMap \u4F7F\u7528HashMap(int initialCapacity) \u521D\u59CB\u5316\uFF09\u5EFA\u8BAE\u539F\u56E0\uFF1A "),b={href:"https://www.zhihu.com/question/314006228/answer/611170521",target:"_blank",rel:"noopener noreferrer"},h=s("https://www.zhihu.com/question/314006228/answer/611170521"),y=t(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u9ED8\u8BA4\u7684\u6784\u9020\u65B9\u6CD5\u4F7F\u7528\u7684\u90FD\u662F\u9ED8\u8BA4\u7684\u521D\u59CB\u5BB9\u91CF\u548C\u52A0\u8F7D\u56E0\u5B50</span>
<span class="token comment">// DEFAULT_INITIAL_CAPACITY = 16\uFF0CDEFAULT_LOAD_FACTOR = 0.75f</span>
<span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span>DEFAULT_INITIAL_CAPACITY<span class="token punctuation">,</span> DEFAULT_LOAD_FACTOR<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u53EF\u4EE5\u6307\u5B9A\u521D\u59CB\u5BB9\u91CF\uFF0C\u5E76\u4E14\u4F7F\u7528\u9ED8\u8BA4\u7684\u52A0\u8F7D\u56E0\u5B50</span>
<span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">,</span> DEFAULT_LOAD_FACTOR<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5BF9\u521D\u59CB\u5BB9\u91CF\u7684\u503C\u5224\u65AD</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal initial capacity: &quot;</span> <span class="token operator">+</span>
                                           initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span>
        initialCapacity <span class="token operator">=</span> MAXIMUM_CAPACITY<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>loadFactor <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token class-name">Float</span><span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span>loadFactor<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal load factor: &quot;</span> <span class="token operator">+</span>
                                           loadFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BBE\u7F6E\u52A0\u8F7D\u56E0\u5B50</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>loadFactor <span class="token operator">=</span> loadFactor<span class="token punctuation">;</span>
    threshold <span class="token operator">=</span> initialCapacity<span class="token punctuation">;</span>
    <span class="token comment">// \u7A7A\u65B9\u6CD5</span>
    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> DEFAULT_LOAD_FACTOR<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
                DEFAULT_INITIAL_CAPACITY<span class="token punctuation">)</span><span class="token punctuation">,</span> DEFAULT_LOAD_FACTOR<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">inflateTable</span><span class="token punctuation">(</span>threshold<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">putAllForCreate</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HashMap \u7684\u524D 3 \u4E2A\u6784\u9020\u65B9\u6CD5\u6700\u540E\u90FD\u4F1A\u53BB\u8C03\u7528 <code>HashMap(int initialCapacity, float loadFactor)</code> \u3002\u5728\u5176\u5185\u90E8\u53BB\u8BBE\u7F6E\u521D\u59CB\u5BB9\u91CF\u548C\u52A0\u8F7D\u56E0\u5B50\u3002\u800C\u6700\u540E\u7684 <code>init()</code> \u662F\u7A7A\u65B9\u6CD5\uFF0C\u4E3B\u8981\u7ED9\u5B50\u7C7B\u5B9E\u73B0\uFF0C\u6BD4\u5982LinkedHashMap\u3002</p><h5 id="put-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#put-\u65B9\u6CD5" aria-hidden="true">#</a> put() \u65B9\u6CD5</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C table \u6570\u7EC4\u4E3A\u7A7A\u65F6\u5148\u521B\u5EFA\u6570\u7EC4\uFF0C\u5E76\u4E14\u8BBE\u7F6E\u6269\u5BB9\u9600\u503C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>table <span class="token operator">==</span> EMPTY_TABLE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">inflateTable</span><span class="token punctuation">(</span>threshold<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C key \u4E3A\u7A7A\u65F6\uFF0C\u8C03\u7528 putForNullKey \u65B9\u6CD5\u7279\u6B8A\u5904\u7406</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">putForNullKey</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BA1\u7B97 key \u7684\u54C8\u5E0C\u503C</span>
    <span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6839\u636E\u8BA1\u7B97\u51FA\u6765\u7684\u54C8\u5E0C\u503C\u548C\u5F53\u524D\u6570\u7EC4\u7684\u957F\u5EA6\u8BA1\u7B97\u5728\u6570\u7EC4\u4E2D\u7684\u7D22\u5F15</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">indexFor</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> table<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5148\u904D\u5386\u8BE5\u6570\u7EC4\u7D22\u5F15\u4E0B\u7684\u6574\u6761\u94FE\u8868</span>
    <span class="token comment">// \u5982\u679C\u8BE5 key \u4E4B\u524D\u5DF2\u7ECF\u5728 HashMap \u4E2D\u5B58\u50A8\u4E86\u7684\u8BDD\uFF0C\u76F4\u63A5\u66FF\u6362\u5BF9\u5E94\u7684 value \u503C\u5373\u53EF</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> k<span class="token punctuation">;</span>
       <span class="token comment">//\u5148\u5224\u65ADhash\u503C\u662F\u5426\u4E00\u6837\uFF0C\u5982\u679C\u4E00\u6837\uFF0C\u518D\u5224\u65ADkey\u662F\u5426\u4E00\u6837\uFF0C\u4E0D\u540C\u5BF9\u8C61\u7684hash\u503C\u53EF\u80FD\u4E00\u6837</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">V</span> oldValue <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            e<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            e<span class="token punctuation">.</span><span class="token function">recordAccess</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u8BE5 key \u4E4B\u524D\u6CA1\u6709\u88AB\u5B58\u50A8\u8FC7\uFF0C\u90A3\u4E48\u5C31\u8FDB\u5165 addEntry \u65B9\u6CD5</span>
    <span class="token function">addEntry</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">addEntry</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">int</span> bucketIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F53\u524D\u5BB9\u91CF\u5927\u4E8E\u6216\u7B49\u4E8E\u6269\u5BB9\u9600\u503C\u7684\u65F6\u5019\uFF0C\u4F1A\u6267\u884C\u6269\u5BB9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>size <span class="token operator">&gt;=</span> threshold<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> table<span class="token punctuation">[</span>bucketIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6269\u5BB9\u4E3A\u539F\u6765\u5BB9\u91CF\u7684\u4E24\u500D</span>
        <span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> table<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u91CD\u65B0\u8BA1\u7B97\u54C8\u5E0C\u503C</span>
        hash <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> key<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// \u91CD\u65B0\u5F97\u5230\u5728\u65B0\u6570\u7EC4\u4E2D\u7684\u7D22\u5F15</span>
        bucketIndex <span class="token operator">=</span> <span class="token function">indexFor</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> table<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA\u8282\u70B9</span>
    <span class="token function">createEntry</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> bucketIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u6269\u5BB9\uFF0C\u521B\u5EFA\u4E86\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\uFF0C\u7136\u540E\u628A\u6570\u636E\u5168\u90E8\u590D\u5236\u8FC7\u53BB\uFF0C\u518D\u628A\u65B0\u6570\u7EC4\u7684\u5F15\u7528\u8D4B\u7ED9 table</span>
<span class="token keyword">void</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token keyword">int</span> newCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldTable <span class="token operator">=</span> table<span class="token punctuation">;</span>  <span class="token comment">//\u5F15\u7528\u6269\u5BB9\u524D\u7684Entry\u6570\u7EC4</span>
    <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> oldTable<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCapacity <span class="token operator">==</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u6269\u5BB9\u524D\u7684\u6570\u7EC4\u5927\u5C0F\u5982\u679C\u5DF2\u7ECF\u8FBE\u5230\u6700\u5927(2^30)\u4E86</span>
        threshold <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>  <span class="token comment">//\u4FEE\u6539\u9608\u503C\u4E3Aint\u7684\u6700\u5927\u503C(2^31-1)\uFF0C\u8FD9\u6837\u4EE5\u540E\u5C31\u4E0D\u4F1A\u6269\u5BB9\u4E86</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA\u65B0\u7684 entry \u6570\u7EC4</span>
    <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token punctuation">[</span>newCapacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5C06\u65E7 entry \u6570\u7EC4\u4E2D\u7684\u6570\u636E\u590D\u5236\u5230\u65B0 entry \u6570\u7EC4\u4E2D</span>
    <span class="token function">transfer</span><span class="token punctuation">(</span>newTable<span class="token punctuation">,</span> <span class="token function">initHashSeedAsNeeded</span><span class="token punctuation">(</span>newCapacity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5C06\u65B0\u6570\u7EC4\u7684\u5F15\u7528\u8D4B\u7ED9 table</span>
    table <span class="token operator">=</span> newTable<span class="token punctuation">;</span>
    <span class="token comment">// \u8BA1\u7B97\u65B0\u7684\u6269\u5BB9\u9600\u503C</span>
    threshold <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>newCapacity <span class="token operator">*</span> loadFactor<span class="token punctuation">,</span> MAXIMUM_CAPACITY <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> src <span class="token operator">=</span> table<span class="token punctuation">;</span>                   <span class="token comment">//src\u5F15\u7528\u4E86\u65E7\u7684Entry\u6570\u7EC4</span>
     <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> newTable<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> src<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u904D\u5386\u65E7\u7684Entry\u6570\u7EC4</span>
         <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> src<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token comment">//\u53D6\u5F97\u65E7Entry\u6570\u7EC4\u7684\u6BCF\u4E2A\u5143\u7D20</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
             src<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token comment">//\u91CA\u653E\u65E7Entry\u6570\u7EC4\u7684\u5BF9\u8C61\u5F15\u7528\uFF08for\u5FAA\u73AF\u540E\uFF0C\u65E7\u7684Entry\u6570\u7EC4\u4E0D\u518D\u5F15\u7528\u4EFB\u4F55\u5BF9\u8C61\uFF09</span>
             <span class="token keyword">do</span> <span class="token punctuation">{</span>
                 <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                 <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">indexFor</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\uFF01\uFF01\u91CD\u65B0\u8BA1\u7B97\u6BCF\u4E2A\u5143\u7D20\u5728\u6570\u7EC4\u4E2D\u7684\u4F4D\u7F6E</span>
                 e<span class="token punctuation">.</span>next <span class="token operator">=</span> newTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u6807\u8BB0[1]</span>
                 newTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>      <span class="token comment">//\u5C06\u5143\u7D20\u653E\u5728\u6570\u7EC4\u4E0A</span>
                 e <span class="token operator">=</span> next<span class="token punctuation">;</span>             <span class="token comment">//\u8BBF\u95EE\u4E0B\u4E00\u4E2AEntry\u94FE\u4E0A\u7684\u5143\u7D20</span>
             <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span> 

<span class="token keyword">void</span> <span class="token function">createEntry</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">int</span> bucketIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u53D6\u51FAtable\u4E2D\u4E0B\u6807\u4E3AbucketIndex\u7684Entry</span>
    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> table<span class="token punctuation">[</span>bucketIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token comment">// \u5229\u7528key\u3001value\u6765\u6784\u5EFA\u65B0\u7684Entry</span>
   <span class="token comment">// \u5E76\u4E14\u4E4B\u524D\u5B58\u653E\u5728table[bucketIndex]\u5904\u7684Entry\u4F5C\u4E3A\u65B0Entry\u7684next</span>
   <span class="token comment">// \u628A\u65B0\u521B\u5EFA\u7684Entry\u653E\u5230table[bucketIndex]\u4F4D\u7F6E</span>
    table<span class="token punctuation">[</span>bucketIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5F53\u524D HashMap \u7684\u5BB9\u91CF\u52A0 1</span>
    size<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u7684 <code>createEntry()</code> \u65B9\u6CD5\u5C31\u8BF4\u660E\u4E86\u5F53 hash \u51B2\u7A81\u65F6\uFF0C\u91C7\u7528\u7684\u62C9\u94FE\u6CD5\u6765\u89E3\u51B3 hash \u51B2\u7A81\u7684\uFF0C\u5E76\u4E14\u662F\u628A\u65B0\u5143\u7D20\u63D2\u5165\u5230\u5355\u94FE\u8868\u7684\u8868\u5934\u3002</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdx45xr0x5j31hl0u0ncd.jpg" alt="" loading="lazy"></p><h5 id="get-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#get-\u65B9\u6CD5" aria-hidden="true">#</a> get() \u65B9\u6CD5</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C key \u662F\u7A7A\u7684\uFF0C\u5C31\u8C03\u7528 getForNullKey \u65B9\u6CD5\u7279\u6B8A\u5904\u7406</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">getForNullKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u83B7\u53D6 key \u76F8\u5BF9\u5E94\u7684 entry </span>
    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">=</span> <span class="token function">getEntry</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">null</span> <span class="token operator">==</span> entry <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u627E\u5230\u5BF9\u5E94 key \u7684\u6570\u7EC4\u7D22\u5F15\uFF0C\u7136\u540E\u904D\u5386\u94FE\u8868\u67E5\u627E\u5373\u53EF</span>
<span class="token keyword">final</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">getEntry</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8BA1\u7B97 key \u7684\u54C8\u5E0C\u503C</span>
    <span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5F97\u5230\u6570\u7EC4\u7684\u7D22\u5F15\uFF0C\u7136\u540E\u904D\u5386\u94FE\u8868\uFF0C\u67E5\u770B\u662F\u5426\u6709\u76F8\u540C key \u7684 Entry</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> table<span class="token punctuation">[</span><span class="token function">indexFor</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> table<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
         e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
         e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> k<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> e<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6CA1\u6709\u7684\u8BDD\uFF0C\u8FD4\u56DE null</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jdk1-8-\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#jdk1-8-\u5B9E\u73B0" aria-hidden="true">#</a> JDK1.8 \u5B9E\u73B0</h3><p>JDK 1.7 \u4E2D\uFF0C\u5982\u679C\u54C8\u5E0C\u78B0\u649E\u8FC7\u591A\uFF0C\u62C9\u94FE\u8FC7\u957F\uFF0C\u6781\u7AEF\u60C5\u51B5\u4E0B\uFF0C\u6240\u6709\u503C\u90FD\u843D\u5165\u4E86\u540C\u4E00\u4E2A\u6876\u5185\uFF0C\u8FD9\u5C31\u9000\u5316\u6210\u4E86\u4E00\u4E2A\u94FE\u8868\u3002\u901A\u8FC7 key \u503C\u67E5\u627E\u8981\u904D\u5386\u94FE\u8868\uFF0C\u6548\u7387\u8F83\u4F4E\u3002 JDK1.8 \u5728\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\u65F6\u6709\u4E86\u8F83\u5927\u7684\u53D8\u5316\uFF0C<strong>\u5F53\u94FE\u8868\u957F\u5EA6\u5927\u4E8E\u9608\u503C\uFF08\u9ED8\u8BA4\u4E3A8\uFF09\u65F6\uFF0C\u5C06\u94FE\u8868\u8F6C\u5316\u4E3A\u7EA2\u9ED1\u6811</strong>\uFF0C\u4EE5\u51CF\u5C11\u641C\u7D22\u65F6\u95F4\u3002</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdx468uknnj31650ogjth.jpg" alt="" loading="lazy"></p><p>TreeMap\u3001TreeSet \u4EE5\u53CA JDK1.8 \u4E4B\u540E\u7684 HashMap \u5E95\u5C42\u90FD\u7528\u5230\u4E86\u7EA2\u9ED1\u6811\u3002\u7EA2\u9ED1\u6811\u5C31\u662F\u4E3A\u4E86\u89E3\u51B3\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u7F3A\u9677\uFF0C\u56E0\u4E3A\u4E8C\u53C9\u67E5\u627E\u6811\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\u4F1A\u9000\u5316\u6210\u4E00\u4E2A\u7EBF\u6027\u7ED3\u6784\u3002</p><h4 id="\u6E90\u7801\u89E3\u6790-1" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u89E3\u6790-1" aria-hidden="true">#</a> \u6E90\u7801\u89E3\u6790</h4><h5 id="\u6784\u9020\u65B9\u6CD5-1" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u65B9\u6CD5-1" aria-hidden="true">#</a> \u6784\u9020\u65B9\u6CD5</h5><p>JDK8 \u6784\u9020\u65B9\u6CD5\u6539\u52A8\u4E0D\u662F\u5F88\u5927</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>loadFactor <span class="token operator">=</span> DEFAULT_LOAD_FACTOR<span class="token punctuation">;</span> <span class="token comment">// all other fields defaulted</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">,</span> DEFAULT_LOAD_FACTOR<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal initial capacity: &quot;</span> <span class="token operator">+</span>
                                       initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span>
    initialCapacity <span class="token operator">=</span> MAXIMUM_CAPACITY<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>loadFactor <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token class-name">Float</span><span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span>loadFactor<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal load factor: &quot;</span> <span class="token operator">+</span>
                                       loadFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>loadFactor <span class="token operator">=</span> loadFactor<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>threshold <span class="token operator">=</span> <span class="token function">tableSizeFor</span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>loadFactor <span class="token operator">=</span> DEFAULT_LOAD_FACTOR<span class="token punctuation">;</span>
  <span class="token function">putMapEntries</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u786E\u5B9A\u54C8\u5E0C\u6876\u6570\u7EC4\u7D22\u5F15\u4F4D\u7F6E-hash-\u51FD\u6570\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u786E\u5B9A\u54C8\u5E0C\u6876\u6570\u7EC4\u7D22\u5F15\u4F4D\u7F6E-hash-\u51FD\u6570\u7684\u5B9E\u73B0" aria-hidden="true">#</a> \u786E\u5B9A\u54C8\u5E0C\u6876\u6570\u7EC4\u7D22\u5F15\u4F4D\u7F6E\uFF08hash \u51FD\u6570\u7684\u5B9E\u73B0\uFF09</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u65B9\u6CD5\u4E00\uFF1A</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//jdk1.8 &amp; jdk1.7</span>
 <span class="token keyword">int</span> h<span class="token punctuation">;</span>
 <span class="token comment">// h = key.hashCode() \u4E3A\u7B2C\u4E00\u6B65 \u53D6hashCode\u503C</span>
 <span class="token comment">// h ^ (h &gt;&gt;&gt; 16)  \u4E3A\u7B2C\u4E8C\u6B65 \u9AD8\u4F4D\u53C2\u4E0E\u8FD0\u7B97</span>
 <span class="token keyword">return</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>h <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u65B9\u6CD5\u4E8C\uFF1A</span>
<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">indexFor</span><span class="token punctuation">(</span><span class="token keyword">int</span> h<span class="token punctuation">,</span> <span class="token keyword">int</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//jdk1.7\u7684\u6E90\u7801\uFF0Cjdk1.8\u6CA1\u6709\u63D0\u53D6\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u800C\u662F\u653E\u5728\u4E86\u5176\u4ED6\u65B9\u6CD5\u4E2D\uFF0C\u6BD4\u5982 put \u7684p = tab[i = (n - 1) &amp; hash]</span>
 <span class="token keyword">return</span> h <span class="token operator">&amp;</span> <span class="token punctuation">(</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u7B2C\u4E09\u6B65 \u53D6\u6A21\u8FD0\u7B97</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HashMap \u5B9A\u4F4D\u6570\u7EC4\u7D22\u5F15\u4F4D\u7F6E\uFF0C\u76F4\u63A5\u51B3\u5B9A\u4E86 hash \u65B9\u6CD5\u7684\u79BB\u6563\u6027\u80FD\u3002Hash \u7B97\u6CD5\u672C\u8D28\u4E0A\u5C31\u662F\u4E09\u6B65\uFF1A<strong>\u53D6key\u7684hashCode\u503C\u3001\u9AD8\u4F4D\u8FD0\u7B97\u3001\u53D6\u6A21\u8FD0\u7B97</strong>\u3002</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdwv5m4g4sj30ga09cdfy.jpg" alt="hash" loading="lazy"></p><blockquote><p>\u4E3A\u4EC0\u4E48\u8981\u8FD9\u6837\u5462\uFF1F</p></blockquote><h3 id="hashmap-\u7684\u957F\u5EA6\u4E3A\u4EC0\u4E48\u662F-2-\u7684\u5E42\u6B21\u65B9" tabindex="-1"><a class="header-anchor" href="#hashmap-\u7684\u957F\u5EA6\u4E3A\u4EC0\u4E48\u662F-2-\u7684\u5E42\u6B21\u65B9" aria-hidden="true">#</a> HashMap \u7684\u957F\u5EA6\u4E3A\u4EC0\u4E48\u662F 2 \u7684\u5E42\u6B21\u65B9?</h3><p>\u76EE\u7684\u5F53\u7136\u662F\u4E3A\u4E86\u51CF\u5C11\u54C8\u5E0C\u78B0\u649E\uFF0C\u4F7F table \u91CC\u7684\u6570\u636E\u5206\u5E03\u7684\u66F4\u5747\u5300\u3002</p><ol><li><p>HashMap \u4E2D\u6876\u6570\u7EC4\u7684\u5927\u5C0F length \u603B\u662F 2 \u7684\u5E42\uFF0C\u6B64\u65F6\uFF0C<code>h &amp; (table.length -1)</code> \u7B49\u4EF7\u4E8E\u5BF9 length \u53D6\u6A21 <code>h%length</code>\u3002\u4F46\u53D6\u6A21\u7684\u8BA1\u7B97\u6548\u7387\u6CA1\u6709\u4F4D\u8FD0\u7B97\u9AD8\uFF0C\u6240\u4EE5\u8FD9\u662F\u4E00\u4E2A\u4F18\u5316\u3002\u5047\u8BBE <code>h = 185</code>\uFF0C<code>table.length-1 = 15(0x1111)</code>\uFF0C\u5176\u5B9E\u6563\u5217\u771F\u6B63\u751F\u6548\u7684\u53EA\u662F\u4F4E 4bit \u7684\u6709\u6548\u4F4D\uFF0C\u6240\u4EE5\u5F88\u5BB9\u6613\u78B0\u649E\u3002</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdx46gac50j30m8037mxf.jpg" alt="img" loading="lazy"></p></li><li><p>\u56FE\u4E2D\u7684 hash \u662F\u7531\u952E\u7684 hashCode \u4EA7\u751F\u3002\u8BA1\u7B97\u4F59\u6570\u65F6\uFF0C\u7531\u4E8E n \u6BD4\u8F83\u5C0F\uFF0Chash \u53EA\u6709\u4F4E 4 \u4F4D\u53C2\u4E0E\u4E86\u8BA1\u7B97\uFF0C\u9AD8\u4F4D\u7684\u8BA1\u7B97\u53EF\u4EE5\u8BA4\u4E3A\u662F\u65E0\u6548\u7684\u3002\u8FD9\u6837\u5BFC\u81F4\u4E86\u8BA1\u7B97\u7ED3\u679C\u53EA\u4E0E\u4F4E\u4F4D\u4FE1\u606F\u6709\u5173\uFF0C\u9AD8\u4F4D\u6570\u636E\u6CA1\u53D1\u6325\u4F5C\u7528\u3002\u4E3A\u4E86\u5904\u7406\u8FD9\u4E2A\u7F3A\u9677\uFF0C\u6211\u4EEC\u53EF\u4EE5\u628A\u4E0A\u56FE\u4E2D\u7684 hash \u9AD8 4 \u4F4D\u6570\u636E\u4E0E\u4F4E 4 \u4F4D\u6570\u636E\u8FDB\u884C\u5F02\u6216\u8FD0\u7B97\uFF0C\u5373 <code>hash ^ (hash &gt;&gt;&gt; 4)</code>\u3002\u901A\u8FC7\u8FD9\u79CD\u65B9\u5F0F\uFF0C\u8BA9\u9AD8\u4F4D\u6570\u636E\u4E0E\u4F4E\u4F4D\u6570\u636E\u8FDB\u884C\u5F02\u6216\uFF0C\u4EE5\u6B64\u52A0\u5927\u4F4E\u4F4D\u4FE1\u606F\u7684\u968F\u673A\u6027\uFF0C\u53D8\u76F8\u7684\u8BA9\u9AD8\u4F4D\u6570\u636E\u53C2\u4E0E\u5230\u8BA1\u7B97\u4E2D\u3002\u6B64\u65F6\u7684\u8BA1\u7B97\u8FC7\u7A0B\u5982\u4E0B\uFF1A</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdx46jwezjj30m804cjrw.jpg" alt="img" loading="lazy"></p><p>\u5728 Java \u4E2D\uFF0ChashCode \u65B9\u6CD5\u4EA7\u751F\u7684 hash \u662F int \u7C7B\u578B\uFF0C32 \u4F4D\u5BBD\u3002\u524D16\u4F4D\u4E3A\u9AD8\u4F4D\uFF0C\u540E16\u4F4D\u4E3A\u4F4E\u4F4D\uFF0C\u6240\u4EE5\u8981\u53F3\u79FB16\u4F4D\uFF0C\u5373 <code>hash ^ (hash &gt;&gt;&gt; 16)</code> \u3002\u8FD9\u6837\u8FD8\u589E\u52A0\u4E86 hash \u7684\u590D\u6742\u5EA6\uFF0C\u8FDB\u800C\u5F71\u54CD hash \u7684\u5206\u5E03\u6027\u3002</p></li></ol><p><strong>HashMap \u7684\u957F\u5EA6\u4E3A\u4EC0\u4E48\u662F 2 \u7684\u5E42\u6B21\u65B9\uFF1F</strong></p><p>\u4E3A\u4E86\u80FD\u8BA9 HashMap \u5B58\u53D6\u9AD8\u6548\uFF0C\u5C3D\u91CF\u51CF\u5C11\u78B0\u649E\uFF0C\u4E5F\u5C31\u662F\u8981\u5C3D\u91CF\u628A\u6570\u636E\u5206\u914D\u5747\u5300\uFF0CHash\u503C\u7684\u8303\u56F4\u662F -2147483648 \u5230 2147483647\uFF0C\u524D\u540E\u52A0\u8D77\u6765\u6709 40 \u4EBF\u7684\u6620\u5C04\u7A7A\u95F4\uFF0C\u53EA\u8981\u54C8\u5E0C\u51FD\u6570\u6620\u5C04\u7684\u6BD4\u8F83\u5747\u5300\u677E\u6563\uFF0C\u4E00\u822C\u5E94\u7528\u662F\u5F88\u96BE\u51FA\u73B0\u78B0\u649E\u7684\uFF0C\u4F46\u4E00\u4E2A\u95EE\u9898\u662F 40 \u4EBF\u7684\u6570\u7EC4\u5185\u5B58\u662F\u653E\u4E0D\u4E0B\u7684\u3002\u6240\u4EE5\u8FD9\u4E2A\u6563\u5217\u503C\u662F\u4E0D\u80FD\u76F4\u63A5\u62FF\u6765\u7528\u7684\u3002\u7528\u4E4B\u524D\u9700\u8981\u5148\u5BF9\u6570\u7EC4\u957F\u5EA6\u53D6\u6A21\u8FD0\u7B97\uFF0C\u5F97\u5230\u4F59\u6570\u624D\u80FD\u7528\u6765\u5B58\u653E\u4F4D\u7F6E\u4E5F\u5C31\u662F\u5BF9\u5E94\u7684\u6570\u7EC4\u5C0F\u6807\u3002\u8FD9\u4E2A\u6570\u7EC4\u4E0B\u6807\u7684\u8BA1\u7B97\u65B9\u6CD5\u662F <code>(n-1)&amp;hash</code>\uFF0Cn \u4EE3\u8868\u6570\u7EC4\u957F\u5EA6\u3002</p><p>\u8FD9\u4E2A\u7B97\u6CD5\u5E94\u8BE5\u5982\u4F55\u8BBE\u8BA1\u5462\uFF1F</p><p>\u6211\u4EEC\u9996\u5148\u53EF\u80FD\u4F1A\u60F3\u5230\u91C7\u7528%\u53D6\u4F59\u7684\u64CD\u4F5C\u6765\u5B9E\u73B0\u3002\u4F46\u662F\uFF0C\u91CD\u70B9\u6765\u4E86\u3002</p><p><strong>\u53D6\u4F59\u64CD\u4F5C\u4E2D\u5982\u679C\u9664\u6570\u662F2\u7684\u5E42\u6B21\u5219\u7B49\u4EF7\u4E8E\u5176\u9664\u6570\u51CF\u4E00\u7684\u4E0E\u64CD\u4F5C</strong>\uFF0C\u4E5F\u5C31\u662F\u8BF4 <code>hash%length=hash&amp;(length-1)</code>\uFF0C\u4F46\u524D\u63D0\u662F length \u662F 2 \u7684 n \u6B21\u65B9\uFF0C\u5E76\u4E14\u91C7\u7528 &amp; \u8FD0\u7B97\u6BD4 % \u8FD0\u7B97\u6548\u7387\u9AD8\uFF0C\u8FD9\u4E5F\u5C31\u89E3\u91CA\u4E86 HashMap \u7684\u957F\u5EA6\u4E3A\u4EC0\u4E48\u662F 2 \u7684\u5E42\u6B21\u65B9\u3002</p><h5 id="get-\u65B9\u6CD5-1" tabindex="-1"><a class="header-anchor" href="#get-\u65B9\u6CD5-1" aria-hidden="true">#</a> get() \u65B9\u6CD5</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">,</span> e<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span>
  <span class="token comment">//\u5B9A\u4F4D\u952E\u503C\u5BF9\u6240\u5728\u6876\u7684\u4F4D\u7F6E</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
      <span class="token punctuation">(</span>first <span class="token operator">=</span> tab<span class="token punctuation">[</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u76F4\u63A5\u547D\u4E2D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>first<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span> <span class="token comment">// always check first node</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> first<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> first<span class="token punctuation">;</span>
    <span class="token comment">// \u672A\u547D\u4E2D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> first<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C first \u662F TreeNode \u7C7B\u578B\uFF0C\u5219\u8C03\u7528\u9ED1\u7EA2\u6811\u67E5\u627E\u65B9\u6CD5</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>first<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTreeNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">do</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5728\u94FE\u8868\u4E2D\u67E5\u627E</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token keyword">return</span> e<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="put-\u65B9\u6CD5-1" tabindex="-1"><a class="header-anchor" href="#put-\u65B9\u6CD5-1" aria-hidden="true">#</a> put() \u65B9\u6CD5</h5><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdx470vyzej311c0u0120.jpg" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5BF9key\u7684hashCode()\u505Ahash</span>
  <span class="token keyword">return</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">,</span>
               <span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">;</span>
  <span class="token comment">// tab\u4E3A\u7A7A\u5219\u521B\u5EFA</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
    n <span class="token operator">=</span> <span class="token punctuation">(</span>tab <span class="token operator">=</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token comment">// \u8BA1\u7B97index\uFF0C\u5E76\u5BF9null\u505A\u5904\u7406</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span>
    <span class="token comment">// \u8282\u70B9key\u5B58\u5728\uFF0C\u76F4\u63A5\u8986\u76D6value</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      e <span class="token operator">=</span> p<span class="token punctuation">;</span>
    <span class="token comment">// \u5224\u65AD\u8BE5\u94FE\u4E3A\u7EA2\u9ED1\u6811</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
      e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> tab<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u8BE5\u94FE\u4E3A\u94FE\u8868</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> binCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token operator">++</span>binCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">//\u94FE\u8868\u957F\u5EA6\u5927\u4E8E8\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811\u8FDB\u884C\u5904\u7406</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">&gt;=</span> TREEIFY_THRESHOLD <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// -1 for 1st</span>
            <span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//key\u5DF2\u7ECF\u5B58\u5728\u76F4\u63A5\u8986\u76D6value</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        p <span class="token operator">=</span> e<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// existing mapping for key</span>
      <span class="token class-name">V</span> oldValue <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent <span class="token operator">||</span> oldValue <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        e<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
      <span class="token function">afterNodeAccess</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token operator">++</span>modCount<span class="token punctuation">;</span>
  <span class="token comment">// \u8D85\u8FC7\u6700\u5927\u5BB9\u91CF \u5C31\u6269\u5BB9</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>size <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span>
    <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">afterNodeInsertion</span><span class="token punctuation">(</span>evict<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>HashMap \u7684 put \u65B9\u6CD5\u7684\u5177\u4F53\u6D41\u7A0B\uFF1F</p></blockquote><p>\u2460.\u5224\u65AD\u952E\u503C\u5BF9\u6570\u7EC4table[i]\u662F\u5426\u4E3A\u7A7A\u6216\u4E3Anull\uFF0C\u5426\u5219\u6267\u884Cresize()\u8FDB\u884C\u6269\u5BB9\uFF1B</p><p>\u2461.\u6839\u636E\u952E\u503Ckey\u8BA1\u7B97hash\u503C\u5F97\u5230\u63D2\u5165\u7684\u6570\u7EC4\u7D22\u5F15i\uFF0C\u5982\u679Ctable[i]==null\uFF0C\u76F4\u63A5\u65B0\u5EFA\u8282\u70B9\u6DFB\u52A0\uFF0C\u8F6C\u5411\u2465\uFF0C\u5982\u679Ctable[i]\u4E0D\u4E3A\u7A7A\uFF0C\u8F6C\u5411\u2462\uFF1B</p><p>\u2462.\u5224\u65ADtable[i]\u7684\u9996\u4E2A\u5143\u7D20\u662F\u5426\u548Ckey\u4E00\u6837\uFF0C\u5982\u679C\u76F8\u540C\u76F4\u63A5\u8986\u76D6value\uFF0C\u5426\u5219\u8F6C\u5411\u2463\uFF0C\u8FD9\u91CC\u7684\u76F8\u540C\u6307\u7684\u662FhashCode\u4EE5\u53CAequals\uFF1B</p><p>\u2463.\u5224\u65ADtable[i] \u662F\u5426\u4E3AtreeNode\uFF0C\u5373table[i] \u662F\u5426\u662F\u7EA2\u9ED1\u6811\uFF0C\u5982\u679C\u662F\u7EA2\u9ED1\u6811\uFF0C\u5219\u76F4\u63A5\u5728\u6811\u4E2D\u63D2\u5165\u952E\u503C\u5BF9\uFF0C\u5426\u5219\u8F6C\u5411\u2464\uFF1B</p><p>\u2464.\u904D\u5386table[i]\uFF0C\u5224\u65AD\u94FE\u8868\u957F\u5EA6\u662F\u5426\u5927\u4E8E8\uFF08\u8FD8\u4F1A\u5224\u65AD\u6570\u7EC4\u957F\u5EA6\u662F\u5426\u5927\u4E8E\u7B49\u4E8E64\uFF09\uFF0C\u5927\u4E8E8\u7684\u8BDD\u628A\u94FE\u8868\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811\uFF0C\u5728\u7EA2\u9ED1\u6811\u4E2D\u6267\u884C\u63D2\u5165\u64CD\u4F5C\uFF0C\u5426\u5219\u8FDB\u884C\u94FE\u8868\u7684\u63D2\u5165\u64CD\u4F5C\uFF1B\u904D\u5386\u8FC7\u7A0B\u4E2D\u82E5\u53D1\u73B0key\u5DF2\u7ECF\u5B58\u5728\u76F4\u63A5\u8986\u76D6value\u5373\u53EF\uFF1B</p><p>\u2465.\u63D2\u5165\u6210\u529F\u540E\uFF0C\u5224\u65AD\u5B9E\u9645\u5B58\u5728\u7684\u952E\u503C\u5BF9\u6570\u91CFsize\u662F\u5426\u8D85\u591A\u4E86\u6700\u5927\u5BB9\u91CFthreshold\uFF0C\u5982\u679C\u8D85\u8FC7\uFF0C\u8FDB\u884C\u6269\u5BB9\u3002</p><h5 id="resize-\u6269\u5BB9" tabindex="-1"><a class="header-anchor" href="#resize-\u6269\u5BB9" aria-hidden="true">#</a> resize() \u6269\u5BB9</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldTab <span class="token operator">=</span> table<span class="token punctuation">;</span>
  <span class="token keyword">int</span> oldCap <span class="token operator">=</span> <span class="token punctuation">(</span>oldTab <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> oldTab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">int</span> oldThr <span class="token operator">=</span> threshold<span class="token punctuation">;</span>
  <span class="token keyword">int</span> newCap<span class="token punctuation">,</span> newThr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8D85\u8FC7\u6700\u5927\u503C\u5C31\u4E0D\u518D\u6269\u5145\u4E86\uFF0C\u5C31\u53EA\u597D\u968F\u4F60\u78B0\u649E\u4E86</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;=</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u4FEE\u6539\u9608\u503C\u4E3Aint\u7684\u6700\u5927\u503C(2^31-1)\uFF0C\u8FD9\u6837\u4EE5\u540E\u5C31\u4E0D\u4F1A\u6269\u5BB9\u4E86</span>
      threshold <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
      <span class="token keyword">return</span> oldTab<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
     <span class="token comment">// \u6CA1\u8D85\u8FC7\u6700\u5927\u503C\uFF0C\u5C31\u6269\u5145\u4E3A\u539F\u6765\u76842\u500D</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>newCap <span class="token operator">=</span> oldCap <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> MAXIMUM_CAPACITY <span class="token operator">&amp;&amp;</span>
             oldCap <span class="token operator">&gt;=</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">)</span>
      newThr <span class="token operator">=</span> oldThr <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// double threshold</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldThr <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// initial capacity was placed in threshold</span>
    newCap <span class="token operator">=</span> oldThr<span class="token punctuation">;</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>               <span class="token comment">// zero initial threshold signifies using defaults</span>
    newCap <span class="token operator">=</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">;</span>
    newThr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>DEFAULT_LOAD_FACTOR <span class="token operator">*</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8BA1\u7B97\u65B0\u7684resize\u4E0A\u9650</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>newThr <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">float</span> ft <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>newCap <span class="token operator">*</span> loadFactor<span class="token punctuation">;</span>
    newThr <span class="token operator">=</span> <span class="token punctuation">(</span>newCap <span class="token operator">&lt;</span> MAXIMUM_CAPACITY <span class="token operator">&amp;&amp;</span> ft <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>MAXIMUM_CAPACITY <span class="token operator">?</span>
              <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>ft <span class="token operator">:</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  threshold <span class="token operator">=</span> newThr<span class="token punctuation">;</span>
  <span class="token comment">// \u5F00\u59CB\u590D\u5236\u5230\u65B0\u7684\u6570\u7EC4</span>
  <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;rawtypes&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTab <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">[</span>newCap<span class="token punctuation">]</span><span class="token punctuation">;</span>
  table <span class="token operator">=</span> newTab<span class="token punctuation">;</span>
  <span class="token comment">// \u628A\u6BCF\u4E2Abucket\u90FD\u79FB\u52A8\u5230\u65B0\u7684buckets\u4E2D</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldTab <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//  \u5FAA\u73AF\u904D\u5386\u65E7\u7684 table \u6570\u7EC4</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> oldCap<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">//  \u5982\u679C\u8BE5\u6876\u53EA\u6709\u4E00\u4E2A\u5143\u7D20\uFF0C\u90A3\u4E48\u76F4\u63A5\u590D\u5236</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
          newTab<span class="token punctuation">[</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> <span class="token punctuation">(</span>newCap <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u662F\u7EA2\u9ED1\u6811\uFF0C\u90A3\u4E48\u5BF9\u7EA2\u9ED1\u6811\u8FDB\u884C\u62C6\u5206</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
          <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> newTab<span class="token punctuation">,</span> j<span class="token punctuation">,</span> oldCap<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">//  \u904D\u5386\u94FE\u8868\uFF0C\u5C06\u539F\u94FE\u8868\u8282\u70B9\u5206\u6210lo\u548Chi\u4E24\u4E2A\u94FE\u8868</span>
         <span class="token comment">// \u5176\u4E2D lo \u8868\u793A\u5728\u539F\u6765\u7684\u6876\u4F4D\u7F6E\uFF0Chi \u8868\u793A\u5728\u65B0\u7684\u6876\u4F4D\u7F6E</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// preserve order  \u94FE\u8868\u4F18\u5316\u91CDhash\u7684\u4EE3\u7801\u5757</span>
          <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> loHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> loTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
          <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hiHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> hiTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
          <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
          <span class="token keyword">do</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u539F\u7D22\u5F15</span>
            next <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> oldCap<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>loTail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                loHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
              <span class="token keyword">else</span>
                loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
              loTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u539F\u7D22\u5F15+oldCap</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>hiTail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                hiHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
              <span class="token keyword">else</span>
                hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
              hiTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// \u539F\u7D22\u5F15\u653E\u5230bucket\u91CC</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>loTail <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            newTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> loHead<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token comment">// \u539F\u7D22\u5F15+oldCap\u653E\u5230bucket\u91CC</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>hiTail <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            newTab<span class="token punctuation">[</span>j <span class="token operator">+</span> oldCap<span class="token punctuation">]</span> <span class="token operator">=</span> hiHead<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newTab<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hashmap\u7684\u6269\u5BB9\u64CD\u4F5C\u662F\u600E\u4E48\u5B9E\u73B0\u7684" tabindex="-1"><a class="header-anchor" href="#hashmap\u7684\u6269\u5BB9\u64CD\u4F5C\u662F\u600E\u4E48\u5B9E\u73B0\u7684" aria-hidden="true">#</a> HashMap\u7684\u6269\u5BB9\u64CD\u4F5C\u662F\u600E\u4E48\u5B9E\u73B0\u7684\uFF1F</h3><ol><li>\u5728 jdk1.8 \u4E2D\uFF0Cresize \u65B9\u6CD5\u662F\u5728 HashMap \u4E2D\u7684\u952E\u503C\u5BF9\u5927\u4E8E\u9600\u503C\u65F6\u6216\u8005\u521D\u59CB\u5316\u65F6\uFF0C\u5C31\u8C03\u7528 resize \u65B9\u6CD5\u8FDB\u884C\u6269\u5BB9\uFF1B</li><li>\u6BCF\u6B21\u6269\u5C55\u7684\u65F6\u5019\uFF0C\u90FD\u662F\u6269\u5C55 2 \u500D\uFF1B</li><li>\u6269\u5C55\u540E Node \u5BF9\u8C61\u7684\u4F4D\u7F6E\u8981\u4E48\u5728\u539F\u4F4D\u7F6E\uFF0C\u8981\u4E48\u79FB\u52A8\u5230\u539F\u504F\u79FB\u91CF\u4E24\u500D\u7684\u4F4D\u7F6E\u3002</li></ol><p>\u5728 <code>putVal()</code> \u4E2D\uFF0C\u6211\u4EEC\u770B\u5230\u5728\u8FD9\u4E2A\u51FD\u6570\u91CC\u9762\u4F7F\u7528\u5230\u4E862\u6B21 <code>resize()</code> \u65B9\u6CD5\uFF0C<code>resize()</code> \u65B9\u6CD5\u8868\u793A\u5728\u8FDB\u884C\u7B2C\u4E00\u6B21\u521D\u59CB\u5316\u65F6\u4F1A\u5BF9\u5176\u8FDB\u884C\u6269\u5BB9\uFF0C\u6216\u8005\u5F53\u8BE5\u6570\u7EC4\u7684\u5B9E\u9645\u5927\u5C0F\u5927\u4E8E\u5176\u6269\u5BB9\u9608\u503C\uFF08\u7B2C\u4E00\u6B21\u4E3A0.75 * 16 = 12\uFF09\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5728\u6269\u5BB9\u7684\u540C\u65F6\u4E5F\u4F1A\u4F34\u968F\u7684\u6876\u4E0A\u9762\u7684\u5143\u7D20\u8FDB\u884C\u91CD\u65B0\u5206\u53D1\uFF0C\u8FD9\u4E5F\u662FJDK1.8\u7248\u672C\u7684\u4E00\u4E2A\u4F18\u5316\u7684\u5730\u65B9\uFF0C\u57281.7\u4E2D\uFF0C\u6269\u5BB9\u4E4B\u540E\u9700\u8981\u91CD\u65B0\u53BB\u8BA1\u7B97\u5176Hash\u503C\uFF0C\u6839\u636EHash\u503C\u5BF9\u5176\u8FDB\u884C\u5206\u53D1\uFF0C\u4F46\u57281.8 \u7248\u672C\u4E2D\uFF0C\u5219\u662F\u6839\u636E\u5728\u540C\u4E00\u4E2A\u6876\u7684\u4F4D\u7F6E\u4E2D\u8FDB\u884C\u5224\u65AD(e.hash &amp; oldCap)\u662F\u5426\u4E3A0\uFF0C\u91CD\u65B0\u8FDB\u884Chash\u5206\u914D\u540E\uFF0C\u8BE5\u5143\u7D20\u7684\u4F4D\u7F6E\u8981\u4E48\u505C\u7559\u5728\u539F\u59CB\u4F4D\u7F6E\uFF0C\u8981\u4E48\u79FB\u52A8\u5230\u539F\u59CB\u4F4D\u7F6E+\u589E\u52A0\u7684\u6570\u7EC4\u5927\u5C0F\u8FD9\u4E2A\u4F4D\u7F6E\u4E0A</p><h5 id="\u94FE\u8868\u6811\u5316" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868\u6811\u5316" aria-hidden="true">#</a> \u94FE\u8868\u6811\u5316</h5><p>\u5F53\u6876\u4E2D\u94FE\u8868\u957F\u5EA6\u8D85\u8FC7 TREEIFY_THRESHOLD\uFF08\u9ED8\u8BA4\u4E3A8\uFF09\u65F6\uFF0C\u5C31\u4F1A\u8C03\u7528 treeifyBin \u65B9\u6CD5\u8FDB\u884C\u6811\u5316\u64CD\u4F5C\u3002\u4F46\u6B64\u65F6\u5E76\u4E0D\u4E00\u5B9A\u4F1A\u6811\u5316\uFF0C\u56E0\u4E3A\u5728 treeifyBin \u65B9\u6CD5\u4E2D\u8FD8\u4F1A\u5224\u65AD HashMap \u7684\u5BB9\u91CF\u662F\u5426\u5927\u4E8E\u7B49\u4E8E 64\u3002\u5982\u679C\u5BB9\u91CF\u5927\u4E8E\u7B49\u4E8E 64\uFF0C\u90A3\u4E48\u8FDB\u884C\u6811\u5316\uFF0C\u5426\u5219\u4F18\u5148\u8FDB\u884C\u6269\u5BB9\u3002</p><p>\u4E3A\u4EC0\u4E48\u6811\u5316\u8FD8\u8981\u5224\u65AD\u6574\u4F53\u5BB9\u91CF\u662F\u5426\u5927\u4E8E 64 \u5462\uFF1F</p><p>\u5F53\u6876\u6570\u7EC4\u5BB9\u91CF\u6BD4\u8F83\u5C0F\u65F6\uFF0C\u952E\u503C\u5BF9\u8282\u70B9 hash \u7684\u78B0\u649E\u7387\u53EF\u80FD\u4F1A\u6BD4\u8F83\u9AD8\uFF0C\u8FDB\u800C\u5BFC\u81F4\u94FE\u8868\u957F\u5EA6\u8F83\u957F\uFF0C\u4ECE\u800C\u5BFC\u81F4\u67E5\u8BE2\u6548\u7387\u4F4E\u4E0B\u3002\u8FD9\u65F6\u5019\u6211\u4EEC\u6709\u4E24\u79CD\u9009\u62E9\uFF0C\u4E00\u79CD\u662F\u6269\u5BB9\uFF0C\u8BA9\u54C8\u5E0C\u78B0\u649E\u7387\u4F4E\u4E00\u4E9B\u3002\u53E6\u4E00\u79CD\u662F\u6811\u5316\uFF0C\u63D0\u9AD8\u67E5\u8BE2\u6548\u7387\u3002</p><p>\u5982\u679C\u6211\u4EEC\u91C7\u7528\u6269\u5BB9\uFF0C\u90A3\u4E48\u6211\u4EEC\u9700\u8981\u505A\u7684\u5C31\u662F\u505A\u4E00\u6B21\u94FE\u8868\u6570\u636E\u7684\u590D\u5236\u3002\u800C\u5982\u679C\u6211\u4EEC\u91C7\u7528\u6811\u5316\uFF0C\u90A3\u4E48\u6211\u4EEC\u9700\u8981\u5C06\u94FE\u8868\u8F6C\u5316\u6210\u7EA2\u9ED1\u6811\u3002\u5230\u8FD9\u91CC\uFF0C\u8C8C\u4F3C\u6CA1\u6709\u4EC0\u4E48\u592A\u5927\u7684\u533A\u522B\uFF0C\u4F46\u6211\u4EEC\u8BA9\u573A\u666F\u7EE7\u7EED\u5EF6\u4F38\u4E0B\u53BB\u3002\u5F53\u63D2\u5165\u7684\u6570\u636E\u8D8A\u6765\u8D8A\u591A\uFF0C\u6211\u4EEC\u4F1A\u53D1\u73B0\u9700\u8981\u8F6C\u5316\u6210\u6811\u7684\u94FE\u8868\u8D8A\u6765\u8D8A\u591A\u3002</p><p>\u5230\u4E86\u4E00\u5B9A\u5BB9\u91CF\uFF0C\u6211\u4EEC\u5C31\u9700\u8981\u8FDB\u884C\u6269\u5BB9\u4E86\u3002\u8FD9\u4E2A\u65F6\u5019\u6211\u4EEC\u6709\u8BB8\u591A\u6811\u5316\u7684\u7EA2\u9ED1\u6811\uFF0C\u5728\u6269\u5BB9\u4E4B\u65F6\uFF0C\u6211\u4EEC\u9700\u8981\u5C06\u8BB8\u591A\u7684\u7EA2\u9ED1\u6811\u62C6\u5206\u6210\u94FE\u8868\uFF0C\u8FD9\u662F\u4E00\u4E2A\u633A\u5927\u7684\u6210\u672C\u3002\u800C\u5982\u679C\u6211\u4EEC\u5728\u5BB9\u91CF\u5C0F\u7684\u65F6\u5019\u5C31\u8FDB\u884C\u6269\u5BB9\uFF0C\u90A3\u4E48\u9700\u8981\u6811\u5316\u7684\u94FE\u8868\u5C31\u8D8A\u5C11\uFF0C\u6211\u4EEC\u6269\u5BB9\u7684\u6210\u672C\u4E5F\u5C31\u8D8A\u4F4E\u3002</p><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u770B\u770B\u94FE\u8868\u6811\u5316\u662F\u600E\u4E48\u505A\u7684\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">treeifyBin</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> <span class="token keyword">int</span> hash<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">,</span> index<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
    <span class="token comment">// 1. \u5BB9\u91CF\u5C0F\u4E8E MIN_TREEIFY_CAPACITY\uFF0C\u4F18\u5148\u6269\u5BB9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&lt;</span> MIN_TREEIFY_CAPACITY<span class="token punctuation">)</span>
        <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 2. \u6876\u4E0D\u4E3A\u7A7A\uFF0C\u90A3\u4E48\u8FDB\u884C\u6811\u5316\u64CD\u4F5C</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> tab<span class="token punctuation">[</span>index <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hd <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> tl <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.1 \u5148\u5C06\u94FE\u8868\u8F6C\u6210 TreeNode \u8868\u793A\u7684\u53CC\u5411\u94FE\u8868</span>
        <span class="token keyword">do</span> <span class="token punctuation">{</span>
            <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> <span class="token function">replacementTreeNode</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>tl <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                hd <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                p<span class="token punctuation">.</span>prev <span class="token operator">=</span> tl<span class="token punctuation">;</span>
                tl<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            tl <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.2 \u5C06 TreeNode \u8868\u793A\u7684\u53CC\u5411\u94FE\u8868\u6811\u5316</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> hd<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            hd<span class="token punctuation">.</span><span class="token function">treeify</span><span class="token punctuation">(</span>tab<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u94FE\u8868\u6811\u5316\u7684\u6574\u4F53\u601D\u8DEF\u4E5F\u6BD4\u8F83\u6E05\u6670\u3002\u9996\u5148\u5C06\u94FE\u8868\u8F6C\u6210 TreeNode \u8868\u793A\u7684\u53CC\u5411\u94FE\u8868\uFF0C\u4E4B\u540E\u518D\u8C03\u7528 <code>treeify()</code> \u65B9\u6CD5\u8FDB\u884C\u6811\u5316\u64CD\u4F5C\u3002\u90A3\u4E48\u6211\u4EEC\u7EE7\u7EED\u770B\u770B <code>treeify()</code> \u65B9\u6CD5\u7684\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">treeify</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> root <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token comment">// 1. \u904D\u5386\u53CC\u5411 TreeNode \u94FE\u8868\uFF0C\u5C06 TreeNode \u8282\u70B9\u4E00\u4E2A\u4E2A\u63D2\u5165</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> next<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        next <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>x<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        x<span class="token punctuation">.</span>left <span class="token operator">=</span> x<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">// 2. \u5982\u679C root \u8282\u70B9\u4E3A\u7A7A\uFF0C\u90A3\u4E48\u76F4\u63A5\u5C06 x \u8282\u70B9\u8BBE\u7F6E\u4E3A\u6839\u8282\u70B9</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            x<span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            x<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            root <span class="token operator">=</span> x<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">K</span> k <span class="token operator">=</span> x<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
            <span class="token keyword">int</span> h <span class="token operator">=</span> x<span class="token punctuation">.</span>hash<span class="token punctuation">;</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> kc <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            
            <span class="token comment">// 3. \u5982\u679C root \u8282\u70B9\u4E0D\u4E3A\u7A7A\uFF0C\u90A3\u4E48\u8FDB\u884C\u6BD4\u8F83\u5E76\u5728\u5408\u9002\u7684\u5730\u65B9\u63D2\u5165</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> root<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> dir<span class="token punctuation">,</span> ph<span class="token punctuation">;</span>
                <span class="token class-name">K</span> pk <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
                <span class="token comment">// 4. \u8BA1\u7B97 dir \u503C\uFF0C-1 \u8868\u793A\u8981\u4ECE\u5DE6\u5B50\u6811\u67E5\u627E\u63D2\u5165\u70B9\uFF0C1\u8868\u793A\u4ECE\u53F3\u5B50\u6811</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ph <span class="token operator">=</span> p<span class="token punctuation">.</span>hash<span class="token punctuation">)</span> <span class="token operator">&gt;</span> h<span class="token punctuation">)</span>
                    dir <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ph <span class="token operator">&lt;</span> h<span class="token punctuation">)</span>
                    dir <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>kc <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                          <span class="token punctuation">(</span>kc <span class="token operator">=</span> <span class="token function">comparableClassFor</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                         <span class="token punctuation">(</span>dir <span class="token operator">=</span> <span class="token function">compareComparables</span><span class="token punctuation">(</span>kc<span class="token punctuation">,</span> k<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    dir <span class="token operator">=</span> <span class="token function">tieBreakOrder</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> xp <span class="token operator">=</span> p<span class="token punctuation">;</span>
                <span class="token comment">// 5. \u5982\u679C\u67E5\u627E\u5230\u4E00\u4E2A p \u70B9\uFF0C\u8FD9\u4E2A\u70B9\u662F\u53F6\u5B50\u8282\u70B9</span>
                <span class="token comment">// \u90A3\u4E48\u8FD9\u4E2A\u5C31\u662F\u63D2\u5165\u4F4D\u7F6E</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token punctuation">(</span>dir <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> p<span class="token punctuation">.</span>left <span class="token operator">:</span> p<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    x<span class="token punctuation">.</span>parent <span class="token operator">=</span> xp<span class="token punctuation">;</span>   
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>dir <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                        xp<span class="token punctuation">.</span>left <span class="token operator">=</span> x<span class="token punctuation">;</span>
                    <span class="token keyword">else</span>
                        xp<span class="token punctuation">.</span>right <span class="token operator">=</span> x<span class="token punctuation">;</span>
                    <span class="token comment">// \u505A\u63D2\u5165\u540E\u7684\u52A8\u5E73\u8861</span>
                    root <span class="token operator">=</span> <span class="token function">balanceInsertion</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 6.\u5C06 root \u8282\u70B9\u79FB\u52A8\u5230\u94FE\u8868\u5934</span>
    <span class="token function">moveRootToFront</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> root<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u4EE3\u7801\u53EF\u4EE5\u770B\u5230\uFF0Ctreeify() \u65B9\u6CD5\u5176\u5B9E\u5C31\u662F\u5C06\u53CC\u5411 TreeNode \u94FE\u8868\u8FDB\u4E00\u6B65\u6811\u5316\u6210\u7EA2\u9ED1\u6811\u3002\u5176\u4E2D\u5927\u81F4\u7684\u6B65\u9AA4\u4E3A\uFF1A</p><ul><li>\u904D\u5386 TreeNode \u53CC\u5411\u94FE\u8868\uFF0C\u5C06 TreeNode \u8282\u70B9\u4E00\u4E2A\u4E2A\u63D2\u5165</li><li>\u5982\u679C root \u8282\u70B9\u4E3A\u7A7A\uFF0C\u90A3\u4E48\u8868\u793A\u7EA2\u9ED1\u6811\u73B0\u5728\u4E3A\u7A7A\uFF0C\u76F4\u63A5\u5C06\u8BE5\u8282\u70B9\u4F5C\u4E3A\u6839\u8282\u70B9\u3002\u5426\u5219\u9700\u8981\u67E5\u627E\u5230\u5408\u9002\u7684\u4F4D\u7F6E\u53BB\u63D2\u5165 TreeNode \u8282\u70B9\u3002</li><li>\u901A\u8FC7\u6BD4\u8F83\u4E0E root \u8282\u70B9\u7684\u4F4D\u7F6E\uFF0C\u4E0D\u65AD\u5BFB\u627E\u6700\u5408\u9002\u7684\u70B9\u3002\u5982\u679C\u6700\u7EC8\u8BE5\u8282\u70B9\u7684\u53F6\u5B50\u8282\u70B9\u4E3A\u7A7A\uFF0C\u90A3\u4E48\u8BE5\u8282\u70B9 p \u5C31\u662F\u63D2\u5165\u8282\u70B9\u7684\u7236\u8282\u70B9\u3002\u63A5\u7740\uFF0C\u5C06 x \u8282\u70B9\u7684 parent \u5F15\u7528\u6307\u5411 xp \u8282\u70B9\uFF0Cxp \u8282\u70B9\u7684\u5DE6\u5B50\u8282\u70B9\u6216\u53F3\u5B50\u8282\u70B9\u6307\u5411 x \u8282\u70B9\u3002</li><li>\u63A5\u7740\uFF0C\u8C03\u7528 balanceInsertion \u505A\u4E00\u6B21\u52A8\u6001\u5E73\u8861\u3002</li><li>\u6700\u540E\uFF0C\u8C03\u7528 moveRootToFront \u65B9\u6CD5\u5C06 root \u8282\u70B9\u79FB\u52A8\u5230\u94FE\u8868\u5934\u3002</li></ul><p>\u5173\u4E8E balanceInsertion() \u52A8\u5E73\u8861\u53EF\u4EE5\u53C2\u8003\u7EA2\u9ED1\u6811\u7684\u63D2\u5165\u52A8\u5E73\u8861\uFF0C\u8FD9\u91CC\u6682\u4E0D\u6DF1\u5165\u8BB2\u89E3\u3002\u6700\u540E\u6211\u4EEC\u7EE7\u7EED\u770B\u770B moveRootToFront \u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">moveRootToFront</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> tab <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> root<span class="token punctuation">.</span>hash<span class="token punctuation">;</span>
        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u63D2\u5165\u7EA2\u9ED1\u6811\u7684 root \u8282\u70B9\u4E0D\u662F\u94FE\u8868\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
        <span class="token comment">// \u90A3\u4E48\u5C06 root \u8282\u70B9\u53D6\u51FA\u6765\uFF0C\u63D2\u5728 first \u8282\u70B9\u524D\u9762</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">!=</span> first<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> rn<span class="token punctuation">;</span>
            tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> root<span class="token punctuation">;</span>
            <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> rp <span class="token operator">=</span> root<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
            <span class="token comment">// \u4E0B\u9762\u7684\u4E24\u4E2A if \u8BED\u53E5\uFF0C\u505A\u7684\u4E8B\u60C5\u662F\u5C06 root \u8282\u70B9\u53D6\u51FA\u6765</span>
            <span class="token comment">// \u8BA9 root \u8282\u70B9\u7684\u524D\u7EE7\u6307\u5411\u5176\u540E\u7EE7\u8282\u70B9</span>
            <span class="token comment">// \u8BA9 root \u8282\u70B9\u7684\u540E\u7EE7\u6307\u5411\u5176\u524D\u7EE7\u8282\u70B9</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>rn <span class="token operator">=</span> root<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>rn<span class="token punctuation">)</span><span class="token punctuation">.</span>prev <span class="token operator">=</span> rp<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>rp <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                rp<span class="token punctuation">.</span>next <span class="token operator">=</span> rn<span class="token punctuation">;</span>
            <span class="token comment">// \u8FD9\u91CC\u76F4\u63A5\u8BA9 root \u8282\u70B9\u63D2\u5165\u5230 first \u8282\u70B9\u524D\u65B9</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                first<span class="token punctuation">.</span>prev <span class="token operator">=</span> root<span class="token punctuation">;</span>
            root<span class="token punctuation">.</span>next <span class="token operator">=</span> first<span class="token punctuation">;</span>
            root<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">assert</span> <span class="token function">checkInvariants</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u7EA2\u9ED1\u6811\u62C6\u5206" tabindex="-1"><a class="header-anchor" href="#\u7EA2\u9ED1\u6811\u62C6\u5206" aria-hidden="true">#</a> \u7EA2\u9ED1\u6811\u62C6\u5206</h5><p>\u6269\u5BB9\u540E\uFF0C\u666E\u901A\u8282\u70B9\u9700\u8981\u91CD\u65B0\u6620\u5C04\uFF0C\u7EA2\u9ED1\u6811\u8282\u70B9\u4E5F\u4E0D\u4F8B\u5916\u3002\u6309\u7167\u4E00\u822C\u7684\u601D\u8DEF\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5148\u628A\u7EA2\u9ED1\u6811\u8F6C\u6210\u94FE\u8868\uFF0C\u4E4B\u540E\u518D\u91CD\u65B0\u6620\u5C04\u94FE\u8868\u5373\u53EF\u3002\u4F46\u56E0\u4E3A\u7EA2\u9ED1\u6811\u63D2\u5165\u7684\u65F6\u5019\uFF0CTreeNode \u4FDD\u5B58\u4E86\u5143\u7D20\u63D2\u5165\u7684\u987A\u5E8F\uFF0C\u6240\u4EE5\u76F4\u63A5\u53EF\u4EE5\u6309\u7167\u63D2\u5165\u987A\u5E8F\u8FD8\u539F\u6210\u94FE\u8868\u3002\u8FD9\u6837\u5C31\u907F\u514D\u4E86\u5C06\u7EA2\u9ED1\u6811\u8F6C\u6210\u94FE\u8868\u540E\u518D\u8FDB\u884C\u54C8\u5E0C\u6620\u5C04\uFF0C\u65E0\u5F62\u4E2D\u63D0\u9AD8\u4E86\u6548\u7387\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">split</span><span class="token punctuation">(</span><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token keyword">int</span> bit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> b <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token comment">// Relink into lo and hi lists, preserving order</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> loHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> loTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hiHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> hiTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> lc <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> hc <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// 1. \u5C06\u7EA2\u9ED1\u6811\u5F53\u6210\u662F\u4E00\u4E2A TreeNode \u7EC4\u6210\u7684\u53CC\u5411\u94FE\u8868</span>
    <span class="token comment">// \u6309\u7167\u94FE\u8868\u6269\u5BB9\u4E00\u6837\uFF0C\u5206\u522B\u653E\u5165 loHead \u548C hiHead \u5F00\u5934\u7684\u94FE\u8868\u4E2D</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> b<span class="token punctuation">,</span> next<span class="token punctuation">;</span> e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> e <span class="token operator">=</span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        next <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        e<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">// 1.1. \u6269\u5BB9\u540E\u7684\u4F4D\u7F6E\u4E0D\u53D8\uFF0C\u8FD8\u662F\u539F\u6765\u7684\u4F4D\u7F6E\uFF0C\u8BE5\u8282\u70B9\u653E\u5165 loHead \u94FE\u8868</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> bit<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>prev <span class="token operator">=</span> loTail<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                loHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
            loTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token operator">++</span>lc<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 1.2 \u6269\u5BB9\u540E\u7684\u4F4D\u7F6E\u6539\u53D8\u4E86\uFF0C\u653E\u5165 hiHead \u94FE\u8868</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>prev <span class="token operator">=</span> hiTail<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                hiHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
            hiTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token operator">++</span>hc<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 2. \u5BF9 loHead \u548C hiHead \u8FDB\u884C\u6811\u5316\u6216\u94FE\u8868\u5316</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>loHead <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 2.1 \u5982\u679C\u94FE\u8868\u957F\u5EA6\u5C0F\u4E8E\u9608\u503C\uFF0C\u90A3\u5C31\u94FE\u8868\u5316\uFF0C\u5426\u5219\u6811\u5316</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lc <span class="token operator">&lt;=</span> UNTREEIFY_THRESHOLD<span class="token punctuation">)</span>
            tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> loHead<span class="token punctuation">.</span><span class="token function">untreeify</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> loHead<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>hiHead <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// (else is already treeified)</span>
                loHead<span class="token punctuation">.</span><span class="token function">treeify</span><span class="token punctuation">(</span>tab<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>hiHead <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>hc <span class="token operator">&lt;=</span> UNTREEIFY_THRESHOLD<span class="token punctuation">)</span>
            tab<span class="token punctuation">[</span>index <span class="token operator">+</span> bit<span class="token punctuation">]</span> <span class="token operator">=</span> hiHead<span class="token punctuation">.</span><span class="token function">untreeify</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            tab<span class="token punctuation">[</span>index <span class="token operator">+</span> bit<span class="token punctuation">]</span> <span class="token operator">=</span> hiHead<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>loHead <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                hiHead<span class="token punctuation">.</span><span class="token function">treeify</span><span class="token punctuation">(</span>tab<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u7684\u4EE3\u7801\u6211\u4EEC\u77E5\u9053\u7EA2\u9ED1\u6811\u7684\u6269\u5BB9\u4E5F\u548C\u94FE\u8868\u7684\u8F6C\u79FB\u662F\u4E00\u6837\u7684\uFF0C\u4E0D\u540C\u7684\u662F\u5176\u8F6C\u5316\u6210 hiHead \u548C loHead \u4E4B\u540E\uFF0C\u4F1A\u6839\u636E\u94FE\u8868\u957F\u5EA6\u9009\u62E9\u62C6\u5206\u6210\u94FE\u8868\u8FD8\u662F\u7EE7\u627F\u7EF4\u6301\u7EA2\u9ED1\u6811\u7684\u7ED3\u6784\u3002</p><h5 id="\u7EA2\u9ED1\u6811\u94FE\u5316" tabindex="-1"><a class="header-anchor" href="#\u7EA2\u9ED1\u6811\u94FE\u5316" aria-hidden="true">#</a> \u7EA2\u9ED1\u6811\u94FE\u5316</h5><p>\u6211\u4EEC\u5728\u8BF4\u5230\u7EA2\u9ED1\u6811\u62C6\u5206\u7684\u65F6\u5019\u8BF4\u5230\uFF0C\u7EA2\u9ED1\u6811\u7ED3\u6784\u5728\u6269\u5BB9\u7684\u65F6\u5019\u5982\u679C\u957F\u5EA6\u4F4E\u4E8E\u9608\u503C\uFF0C\u90A3\u4E48\u5C31\u4F1A\u5C06\u5176\u8F6C\u5316\u6210\u94FE\u8868\u3002\u5176\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">untreeify</span><span class="token punctuation">(</span><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hd <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> tl <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> q <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span> q <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> q <span class="token operator">=</span> q<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">replacementNode</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tl <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            hd <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            tl<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
        tl <span class="token operator">=</span> p<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> hd<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u7EA2\u9ED1\u6811\u4E2D\u5305\u542B\u4E86\u63D2\u5165\u5143\u7D20\u7684\u987A\u5E8F\uFF0C\u6240\u4EE5\u5F53\u6211\u4EEC\u5C06\u7EA2\u9ED1\u6811\u62C6\u5206\u6210\u4E24\u4E2A\u94FE\u8868 hiHead \u548C loHead \u65F6\uFF0C\u5176\u8FD8\u662F\u4FDD\u6301\u7740\u539F\u6765\u7684\u987A\u5E8F\u7684\u3002\u6240\u4EE5\u6B64\u65F6\u6211\u4EEC\u53EA\u9700\u8981\u5FAA\u73AF\u904D\u5386\u4E00\u904D\uFF0C\u7136\u540E\u5C06 TreeNode \u8282\u70B9\u6362\u6210 Node \u8282\u70B9\u5373\u53EF\u3002</p><h3 id="\u4E3A\u4EC0\u4E48jdk1-8\u4E2Dhashmap\u4ECE\u5934\u63D2\u5165\u6539\u6210\u5C3E\u63D2\u5165" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48jdk1-8\u4E2Dhashmap\u4ECE\u5934\u63D2\u5165\u6539\u6210\u5C3E\u63D2\u5165" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48JDK1.8\u4E2DHashMap\u4ECE\u5934\u63D2\u5165\u6539\u6210\u5C3E\u63D2\u5165</h3><p>JDK1.7\u4E2D\u6269\u5BB9\u65F6\uFF0C\u6BCF\u4E2A\u5143\u7D20\u7684rehash\u4E4B\u540E\uFF0C\u90FD\u4F1A\u63D2\u5165\u5230\u65B0\u6570\u7EC4\u5BF9\u5E94\u7D22\u5F15\u7684\u94FE\u8868\u5934\uFF0C\u6240\u4EE5\u8FD9\u5C31\u5BFC\u81F4\u539F\u94FE\u8868\u987A\u5E8F\u4E3AA-&gt;B-&gt;C\uFF0C\u6269\u5BB9\u4E4B\u540E\uFF0Crehash\u4E4B\u540E\u7684\u94FE\u8868\u53EF\u80FD\u4E3AC-&gt;B-&gt;A\uFF0C\u5143\u7D20\u7684\u987A\u5E8F\u53D1\u751F\u4E86\u53D8\u5316\u3002\u5728\u5E76\u53D1\u573A\u666F\u4E0B\uFF0C<strong>\u6269\u5BB9\u65F6</strong>\u53EF\u80FD\u4F1A\u51FA\u73B0\u5FAA\u73AF\u94FE\u8868\u7684\u60C5\u51B5\u3002\u800CJDK1.8\u4ECE\u5934\u63D2\u5165\u6539\u6210\u5C3E\u63D2\u5165\u5143\u7D20\u7684\u987A\u5E8F\u4E0D\u53D8\uFF0C\u907F\u514D\u51FA\u73B0\u5FAA\u73AF\u94FE\u8868\u7684\u60C5\u51B5</p><p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h38x7ejwejj20u00bjmxd.jpg" alt="" loading="lazy"></p><blockquote><p>\u5728\u6269\u5BB9\u65F6\uFF0C\u5934\u63D2\u6CD5\u4F1A\u6539\u53D8\u94FE\u8868\u4E2D\u5143\u7D20\u539F\u672C\u7684\u987A\u5E8F\uFF0C\u4EE5\u81F3\u4E8E\u5728\u5E76\u53D1\u573A\u666F\u4E0B\u5BFC\u81F4\u94FE\u8868\u6210\u73AF\u7684\u95EE\u9898\uFF0C\u800C\u5C3E\u63D2\u6CD5\uFF0C\u5728\u6269\u5BB9\u65F6\u4F1A\u4FDD\u6301\u94FE\u8868\u5143\u7D20\u539F\u672C\u7684\u987A\u5E8F\uFF0C\u5C31\u4E0D\u4F1A\u51FA\u73B0\u94FE\u8868\u6210\u73AF\u7684\u95EE\u9898</p><h3 id="\u6B7B\u5FAA\u73AF\u6267\u884C\u6B65\u9AA41" tabindex="-1"><a class="header-anchor" href="#\u6B7B\u5FAA\u73AF\u6267\u884C\u6B65\u9AA41" aria-hidden="true">#</a> \u6B7B\u5FAA\u73AF\u6267\u884C\u6B65\u9AA41</h3><p>\u6B7B\u5FAA\u73AF\u662F\u56E0\u4E3A\u5E76\u53D1 HashMap \u6269\u5BB9\u5BFC\u81F4\u7684\uFF0C\u5E76\u53D1\u6269\u5BB9\u7684\u7B2C\u4E00\u6B65\uFF0C\u7EBF\u7A0B T1 \u548C\u7EBF\u7A0B T2 \u8981\u5BF9 HashMap \u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C\uFF0C\u6B64\u65F6 T1 \u548C T2 \u6307\u5411\u7684\u662F\u94FE\u8868\u7684\u5934\u7ED3\u70B9\u5143\u7D20 A\uFF0C\u800C T1 \u548C T2 \u7684\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF0C\u4E5F\u5C31\u662F T1.next \u548C T2.next \u6307\u5411\u7684\u662F B \u8282\u70B9\uFF0C\u5982\u4E0B\u56FE\u6240\u793A\uFF1A</p><p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h38x6z1svnj20ps0ingm2.jpg" alt="" loading="lazy"></p><h3 id="\u6B7B\u5FAA\u73AF\u6267\u884C\u6B65\u9AA42" tabindex="-1"><a class="header-anchor" href="#\u6B7B\u5FAA\u73AF\u6267\u884C\u6B65\u9AA42" aria-hidden="true">#</a> \u6B7B\u5FAA\u73AF\u6267\u884C\u6B65\u9AA42</h3><p>\u6B7B\u5FAA\u73AF\u7684\u7B2C\u4E8C\u6B65\u64CD\u4F5C\u662F\uFF0C\u7EBF\u7A0B T2 \u65F6\u95F4\u7247\u7528\u5B8C\u8FDB\u5165\u4F11\u7720\u72B6\u6001\uFF0C\u800C\u7EBF\u7A0B T1 \u5F00\u59CB\u6267\u884C\u6269\u5BB9\u64CD\u4F5C\uFF0C\u4E00\u76F4\u5230\u7EBF\u7A0B T1 \u6269\u5BB9\u5B8C\u6210\u540E\uFF0C\u7EBF\u7A0B T2 \u624D\u88AB\u5524\u9192\uFF0C\u6269\u5BB9\u4E4B\u540E\u7684\u573A\u666F\u5982\u4E0B\u56FE\u6240\u793A\uFF1A\u56FE\u7247\u4ECE\u4E0A\u56FE\u53EF\u77E5\u7EBF\u7A0B T1 \u6267\u884C\u4E4B\u540E\uFF0C\u56E0\u4E3A\u662F\u5934\u63D2\u6CD5\uFF0C\u6240\u4EE5 HashMap \u7684\u987A\u5E8F\u5DF2\u7ECF\u53D1\u751F\u4E86\u6539\u53D8\uFF0C\u4F46\u7EBF\u7A0B T2 \u5BF9\u4E8E\u53D1\u751F\u7684\u4E00\u5207\u662F\u4E0D\u53EF\u77E5\u7684\uFF0C\u6240\u4EE5\u5B83\u7684\u6307\u5411\u5143\u7D20\u4F9D\u7136\u6CA1\u53D8\uFF0C\u5982\u4E0A\u56FE\u5C55\u793A\u7684\u90A3\u6837\uFF0CT2 \u6307\u5411\u7684\u662F A \u5143\u7D20\uFF0CT2.next \u6307\u5411\u7684\u8282\u70B9\u662F B \u5143\u7D20\u3002</p><h3 id="\u6B7B\u5FAA\u73AF\u6267\u884C\u6B65\u9AA43" tabindex="-1"><a class="header-anchor" href="#\u6B7B\u5FAA\u73AF\u6267\u884C\u6B65\u9AA43" aria-hidden="true">#</a> \u6B7B\u5FAA\u73AF\u6267\u884C\u6B65\u9AA43</h3><p>\u5F53\u7EBF\u7A0B T1 \u6267\u884C\u5B8C\uFF0C\u800C\u7EBF\u7A0B T2 \u6062\u590D\u6267\u884C\u65F6\uFF0C\u6B7B\u5FAA\u73AF\u5C31\u5EFA\u7ACB\u4E86\uFF0C\u5982\u4E0B\u56FE\u6240\u793A\uFF1A</p><p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h38x6gq48cj20rw0iwwew.jpg" alt="" loading="lazy"></p><p>\u56E0\u4E3A T1 \u6267\u884C\u5B8C\u6269\u5BB9\u4E4B\u540E B \u8282\u70B9\u7684\u4E0B\u4E00\u4E2A\u8282\u70B9\u662F A\uFF0C\u800C T2 \u7EBF\u7A0B\u6307\u5411\u7684\u9996\u8282\u70B9\u662F A\uFF0C\u7B2C\u4E8C\u4E2A\u8282\u70B9\u662F B\uFF0C\u8FD9\u4E2A\u987A\u5E8F\u521A\u597D\u548C T1 \u6269\u5B8C\u5BB9\u5B8C\u4E4B\u540E\u7684\u8282\u70B9\u987A\u5E8F\u662F\u76F8\u53CD\u7684\u3002T1 \u6267\u884C\u5B8C\u4E4B\u540E\u7684\u987A\u5E8F\u662F B \u5230 A\uFF0C\u800C T2 \u7684\u987A\u5E8F\u662F A \u5230 B\uFF0C\u8FD9\u6837 A \u8282\u70B9\u548C B \u8282\u70B9\u5C31\u5F62\u6210\u6B7B\u5FAA\u73AF\u4E86\uFF0C\u8FD9\u5C31\u662F HashMap \u6B7B\u5FAA\u73AF\u5BFC\u81F4\u7684\u539F\u56E0\u3002</p></blockquote><h3 id="hashmap-\u4E3A\u4EC0\u4E48\u7EBF\u7A0B\u4E0D\u5B89\u5168" tabindex="-1"><a class="header-anchor" href="#hashmap-\u4E3A\u4EC0\u4E48\u7EBF\u7A0B\u4E0D\u5B89\u5168" aria-hidden="true">#</a> HashMap \u4E3A\u4EC0\u4E48\u7EBF\u7A0B\u4E0D\u5B89\u5168</h3><ol><li><p>put \u7684\u65F6\u5019\u5BFC\u81F4\u7684\u591A\u7EBF\u7A0B\u6570\u636E\u4E0D\u4E00\u81F4\u3002 \u8FD9\u4E2A\u95EE\u9898\u6BD4\u8F83\u597D\u60F3\u8C61\uFF0C\u6BD4\u5982\u6709\u4E24\u4E2A\u7EBF\u7A0B A \u548C B\uFF0C\u9996\u5148 A \u5E0C\u671B\u63D2\u5165\u4E00\u4E2A key-value \u5BF9\u5230 HashMap \u4E2D\uFF0C\u9996\u5148\u8BA1\u7B97\u8BB0\u5F55\u6240\u8981\u843D\u5230\u7684\u6876\u7684\u7D22\u5F15\u5750\u6807\uFF0C\u7136\u540E\u83B7\u53D6\u5230\u8BE5\u6876\u91CC\u9762\u7684\u94FE\u8868\u5934\u7ED3\u70B9\uFF0C\u6B64\u65F6\u7EBF\u7A0B A \u7684\u65F6\u95F4\u7247\u7528\u5B8C\u4E86\uFF0C\u800C\u6B64\u65F6\u7EBF\u7A0B B \u88AB\u8C03\u5EA6\u5F97\u4EE5\u6267\u884C\uFF0C\u548C\u7EBF\u7A0B A \u4E00\u6837\u6267\u884C\uFF0C\u53EA\u4E0D\u8FC7\u7EBF\u7A0B B \u6210\u529F\u5C06\u8BB0\u5F55\u63D2\u5230\u4E86\u6876\u91CC\u9762\uFF0C\u5047\u8BBE\u7EBF\u7A0B A \u63D2\u5165\u7684\u8BB0\u5F55\u8BA1\u7B97\u51FA\u6765\u7684\u6876\u7D22\u5F15\u548C\u7EBF\u7A0B B \u8981\u63D2\u5165\u7684\u8BB0\u5F55\u8BA1\u7B97\u51FA\u6765\u7684\u6876\u7D22\u5F15\u662F\u4E00\u6837\u7684\uFF0C\u90A3\u4E48\u5F53\u7EBF\u7A0B B \u6210\u529F\u63D2\u5165\u4E4B\u540E\uFF0C\u7EBF\u7A0B A \u518D\u6B21\u88AB\u8C03\u5EA6\u8FD0\u884C\u65F6\uFF0C\u5B83\u4F9D\u7136\u6301\u6709\u8FC7\u671F\u7684\u94FE\u8868\u5934\u4F46\u662F\u5B83\u5BF9\u6B64\u4E00\u65E0\u6240\u77E5\uFF0C\u4EE5\u81F3\u4E8E\u5B83\u8BA4\u4E3A\u5B83\u5E94\u8BE5\u8FD9\u6837\u505A\uFF0C\u5982\u6B64\u4E00\u6765\u5C31\u8986\u76D6\u4E86\u7EBF\u7A0B B \u63D2\u5165\u7684\u8BB0\u5F55\uFF0C\u8FD9\u6837\u7EBF\u7A0B B \u63D2\u5165\u7684\u8BB0\u5F55\u5C31\u51ED\u7A7A\u6D88\u5931\u4E86\uFF0C\u9020\u6210\u4E86\u6570\u636E\u4E0D\u4E00\u81F4\u7684\u884C\u4E3A\u3002</p></li><li><p>\u53E6\u5916\u4E00\u4E2A\u6BD4\u8F83\u660E\u663E\u7684\u7EBF\u7A0B\u4E0D\u5B89\u5168\u7684\u95EE\u9898\u662F HashMap \u7684 get \u64CD\u4F5C\u53EF\u80FD\u56E0\u4E3A resize \u800C\u5F15\u8D77\u6B7B\u5FAA\u73AF\uFF08cpu100%\uFF09\uFF0C\u5177\u4F53\u5206\u6790\u5982\u4E0B\uFF1A</p><p>\u4E0B\u9762\u7684\u4EE3\u7801\u662Fresize\u7684\u6838\u5FC3\u5185\u5BB9\uFF1A</p></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTable<span class="token punctuation">,</span> <span class="token keyword">boolean</span> rehash<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> newTable<span class="token punctuation">.</span>length<span class="token punctuation">;</span>  
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">:</span> table<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  
            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>           
                <span class="token keyword">if</span> <span class="token punctuation">(</span>rehash<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                    e<span class="token punctuation">.</span>hash <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token operator">==</span> e<span class="token punctuation">.</span>key <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token function">hash</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>  
                <span class="token punctuation">}</span>  
                <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">indexFor</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>   
                e<span class="token punctuation">.</span>next <span class="token operator">=</span> newTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  
                newTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>  
                e <span class="token operator">=</span> next<span class="token punctuation">;</span>  
            <span class="token punctuation">}</span> 
        <span class="token punctuation">}</span>  
    <span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5177\u4F53\u539F\u56E0\u5982\u4E0A\u9898</p><h3 id="hashmap-jdk1-7-vs-jdk1-8" tabindex="-1"><a class="header-anchor" href="#hashmap-jdk1-7-vs-jdk1-8" aria-hidden="true">#</a> HashMap\uFF1AJDK1.7 VS JDK1.8</h3><p>JDK1.8\u4E3B\u8981\u89E3\u51B3\u6216\u4F18\u5316\u4E86\u4EE5\u4E0B\u95EE\u9898\uFF1A</p><ul><li>resize \u6269\u5BB9\u4F18\u5316</li><li>\u5F15\u5165\u4E86\u7EA2\u9ED1\u6811\uFF0C\u76EE\u7684\u662F\u907F\u514D\u5355\u6761\u94FE\u8868\u8FC7\u957F\u800C\u5F71\u54CD\u67E5\u8BE2\u6548\u7387</li><li>\u89E3\u51B3\u4E86\u591A\u7EBF\u7A0B\u6B7B\u5FAA\u73AF\u95EE\u9898\uFF0C\u4F46\u4ECD\u662F\u975E\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u591A\u7EBF\u7A0B\u65F6\u53EF\u80FD\u4F1A\u9020\u6210\u6570\u636E\u4E22\u5931\u95EE\u9898</li></ul><table><thead><tr><th>\u4E0D\u540C</th><th>JDK 1.7</th><th>JDK 1.8</th></tr></thead><tbody><tr><td>\u5B58\u50A8\u7ED3\u6784</td><td>\u6570\u7EC4 + \u94FE\u8868</td><td>\u6570\u7EC4 + \u94FE\u8868 + \u7EA2\u9ED1\u6811</td></tr><tr><td>\u521D\u59CB\u5316\u65B9\u5F0F</td><td>\u5355\u72EC\u51FD\u6570\uFF1AinflateTable()</td><td>\u76F4\u63A5\u96C6\u6210\u5230\u4E86\u6269\u5BB9\u51FD\u6570resize()\u4E2D</td></tr><tr><td>hash\u503C\u8BA1\u7B97\u65B9\u5F0F</td><td>\u6270\u52A8\u5904\u7406 = 9\u6B21\u6270\u52A8 = 4\u6B21\u4F4D\u8FD0\u7B97 + 5\u6B21\u5F02\u6216\u8FD0\u7B97</td><td>\u6270\u52A8\u5904\u7406 = 2\u6B21\u6270\u52A8 = 1\u6B21\u4F4D\u8FD0\u7B97 + 1\u6B21\u5F02\u6216\u8FD0\u7B97</td></tr><tr><td>\u5B58\u653E\u6570\u636E\u7684\u89C4\u5219</td><td>\u65E0\u51B2\u7A81\u65F6\uFF0C\u5B58\u653E\u6570\u7EC4\uFF1B\u51B2\u7A81\u65F6\uFF0C\u5B58\u653E\u94FE\u8868</td><td>\u65E0\u51B2\u7A81\u65F6\uFF0C\u5B58\u653E\u6570\u7EC4\uFF1B\u51B2\u7A81 &amp; \u94FE\u8868\u957F\u5EA6 &lt; 8\uFF1A\u5B58\u653E\u5355\u94FE\u8868\uFF1B\u51B2\u7A81 &amp; \u94FE\u8868\u957F\u5EA6 &gt; 8\uFF1A\u6811\u5316\u5E76\u5B58\u653E\u7EA2\u9ED1\u6811</td></tr><tr><td>\u63D2\u5165\u6570\u636E\u65B9\u5F0F</td><td>\u5934\u63D2\u6CD5\uFF08\u5148\u5C06\u539F\u4F4D\u7F6E\u7684\u6570\u636E\u79FB\u5230\u540E1\u4F4D\uFF0C\u518D\u63D2\u5165\u6570\u636E\u5230\u8BE5\u4F4D\u7F6E\uFF09</td><td>\u5C3E\u63D2\u6CD5\uFF08\u76F4\u63A5\u63D2\u5165\u5230\u94FE\u8868\u5C3E\u90E8/\u7EA2\u9ED1\u6811\uFF09</td></tr><tr><td>\u6269\u5BB9\u540E\u5B58\u50A8\u4F4D\u7F6E\u7684\u8BA1\u7B97\u65B9\u5F0F</td><td>\u5168\u90E8\u6309\u7167\u539F\u6765\u65B9\u6CD5\u8FDB\u884C\u8BA1\u7B97\uFF08\u5373hashCode -&gt;&gt; \u6270\u52A8\u51FD\u6570 -&gt;&gt; (h&amp;length-1)\uFF09</td><td>\u6309\u7167\u6269\u5BB9\u540E\u7684\u89C4\u5F8B\u8BA1\u7B97\uFF08\u5373\u6269\u5BB9\u540E\u7684\u4F4D\u7F6E=\u539F\u4F4D\u7F6E or \u539F\u4F4D\u7F6E + \u65E7\u5BB9\u91CF</td></tr></tbody></table><hr><h2 id="hashtable" tabindex="-1"><a class="header-anchor" href="#hashtable" aria-hidden="true">#</a> Hashtable</h2><p>Hashtable \u548C HashMap \u90FD\u662F\u6563\u5217\u8868\uFF0C\u4E5F\u662F\u7528\u201D\u62C9\u94FE\u6CD5\u201C\u5B9E\u73B0\u7684\u54C8\u5E0C\u8868\u3002\u4FDD\u5B58\u6570\u636E\u548C JDK7 \u4E2D\u7684 HashMap \u4E00\u6837\uFF0C\u662F Entity \u5BF9\u8C61\uFF0C\u53EA\u662F Hashtable \u4E2D\u7684\u51E0\u4E4E\u6240\u6709\u7684 public \u65B9\u6CD5\u90FD\u662F synchronized \u7684\uFF0C\u800C\u6709\u4E9B\u65B9\u6CD5\u4E5F\u662F\u5728\u5185\u90E8\u901A\u8FC7 synchronized \u4EE3\u7801\u5757\u6765\u5B9E\u73B0\uFF0C\u6548\u7387\u80AF\u5B9A\u4F1A\u964D\u4F4E\u3002\u4E14 put() \u65B9\u6CD5\u4E0D\u5141\u8BB8\u7A7A\u503C\u3002</p><h3 id="hashmap-\u548C-hashtable-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#hashmap-\u548C-hashtable-\u7684\u533A\u522B" aria-hidden="true">#</a> HashMap \u548C Hashtable \u7684\u533A\u522B</h3><ol><li><p><strong>\u7EBF\u7A0B\u662F\u5426\u5B89\u5168\uFF1A</strong> HashMap \u662F\u975E\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0CHashTable \u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF1BHashTable \u5185\u90E8\u7684\u65B9\u6CD5\u57FA\u672C\u90FD\u7ECF\u8FC7 <code>synchronized</code> \u4FEE\u9970\u3002\uFF08\u5982\u679C\u4F60\u8981\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\u7684\u8BDD\u5C31\u4F7F\u7528 ConcurrentHashMap \u5427\uFF01\uFF09\uFF1B</p></li><li><p><strong>\u6548\u7387\uFF1A</strong> \u56E0\u4E3A\u7EBF\u7A0B\u5B89\u5168\u7684\u95EE\u9898\uFF0CHashMap \u8981\u6BD4 HashTable \u6548\u7387\u9AD8\u4E00\u70B9\u3002\u53E6\u5916\uFF0CHashTable \u57FA\u672C\u88AB\u6DD8\u6C70\uFF0C\u4E0D\u8981\u5728\u4EE3\u7801\u4E2D\u4F7F\u7528\u5B83\uFF1B</p></li><li><p><strong>\u5BF9Null key \u548CNull value\u7684\u652F\u6301\uFF1A</strong> HashMap \u4E2D\uFF0Cnull \u53EF\u4EE5\u4F5C\u4E3A\u952E\uFF0C\u8FD9\u6837\u7684\u952E\u53EA\u6709\u4E00\u4E2A\uFF0C\u53EF\u4EE5\u6709\u4E00\u4E2A\u6216\u591A\u4E2A\u952E\u6240\u5BF9\u5E94\u7684\u503C\u4E3A null\u3002\u3002\u4F46\u662F\u5728 HashTable \u4E2D put \u8FDB\u7684\u952E\u503C\u53EA\u8981\u6709\u4E00\u4E2A null\uFF0C\u76F4\u63A5\u629B\u51FA NullPointerException\u3002</p></li><li><p><strong>\u521D\u59CB\u5BB9\u91CF\u5927\u5C0F\u548C\u6BCF\u6B21\u6269\u5145\u5BB9\u91CF\u5927\u5C0F\u7684\u4E0D\u540C \uFF1A</strong></p><p>\u2460 \u521B\u5EFA\u65F6\u5982\u679C\u4E0D\u6307\u5B9A\u5BB9\u91CF\u521D\u59CB\u503C\uFF0CHashtable \u9ED8\u8BA4\u7684\u521D\u59CB\u5927\u5C0F\u4E3A11\uFF0C\u4E4B\u540E\u6BCF\u6B21\u6269\u5145\uFF0C\u5BB9\u91CF\u53D8\u4E3A\u539F\u6765\u76842n+1\u3002HashMap \u9ED8\u8BA4\u7684\u521D\u59CB\u5316\u5927\u5C0F\u4E3A16\u3002\u4E4B\u540E\u6BCF\u6B21\u6269\u5145\uFF0C\u5BB9\u91CF\u53D8\u4E3A\u539F\u6765\u76842\u500D\u3002</p><p>\u2461 \u521B\u5EFA\u65F6\u5982\u679C\u7ED9\u5B9A\u4E86\u5BB9\u91CF\u521D\u59CB\u503C\uFF0C\u90A3\u4E48 Hashtable \u4F1A\u76F4\u63A5\u4F7F\u7528\u4F60\u7ED9\u5B9A\u7684\u5927\u5C0F\uFF0C\u800C HashMap \u4F1A\u5C06\u5176\u6269\u5145\u4E3A2\u7684\u5E42\u6B21\u65B9\u5927\u5C0F\u3002\u4E5F\u5C31\u662F\u8BF4 HashMap \u603B\u662F\u4F7F\u75282\u7684\u5E42\u6B21\u65B9\u4F5C\u4E3A\u54C8\u5E0C\u8868\u7684\u5927\u5C0F,\u540E\u9762\u4F1A\u4ECB\u7ECD\u5230\u4E3A\u4EC0\u4E48\u662F2\u7684\u5E42\u6B21\u65B9\u3002</p></li><li><p><strong>\u5E95\u5C42\u6570\u636E\u7ED3\u6784\uFF1A</strong> JDK1.8 \u4EE5\u540E\u7684 HashMap \u5728\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\u65F6\u6709\u4E86\u8F83\u5927\u7684\u53D8\u5316\uFF0C\u5F53\u94FE\u8868\u957F\u5EA6\u5927\u4E8E\u9608\u503C\uFF08\u9ED8\u8BA4\u4E3A8\uFF09\u65F6\uFF0C\u5C06\u94FE\u8868\u8F6C\u5316\u4E3A\u7EA2\u9ED1\u6811\uFF0C\u4EE5\u51CF\u5C11\u641C\u7D22\u65F6\u95F4\u3002Hashtable \u6CA1\u6709\u8FD9\u6837\u7684\u673A\u5236\u3002</p></li><li><p>HashMap\u7684\u8FED\u4EE3\u5668\uFF08<code>Iterator</code>\uFF09\u662Ffail-fast\u8FED\u4EE3\u5668\uFF0C\u4F46\u662F Hashtable\u7684\u8FED\u4EE3\u5668\uFF08<code>enumerator</code>\uFF09\u4E0D\u662F fail-fast\u7684\u3002\u5982\u679C\u6709\u5176\u5B83\u7EBF\u7A0B\u5BF9HashMap\u8FDB\u884C\u7684\u6DFB\u52A0/\u5220\u9664\u5143\u7D20\uFF0C\u5C06\u4F1A\u629B\u51FA<code>ConcurrentModificationException</code>\uFF0C\u4F46\u8FED\u4EE3\u5668\u672C\u8EAB\u7684<code>remove</code>\u65B9\u6CD5\u79FB\u9664\u5143\u7D20\u5219\u4E0D\u4F1A\u629B\u51FA\u5F02\u5E38\u3002\u8FD9\u6761\u540C\u6837\u4E5F\u662F Enumeration \u548C Iterator \u7684\u533A\u522B\u3002</p></li></ol><h4 id="\u4E86\u89E3\u8FC7-linkedhashmap\u3001treemap-\u5417" tabindex="-1"><a class="header-anchor" href="#\u4E86\u89E3\u8FC7-linkedhashmap\u3001treemap-\u5417" aria-hidden="true">#</a> \u4E86\u89E3\u8FC7 LinkedHashMap\u3001TreeMap \u5417</h4><p>LinkedHashMap\u5C5E\u4E8EHashMap\u7684\u5B50\u7C7B\uFF0C\u4E0EHashMap\u7684\u533A\u522B\u5728\u4E8ELinkedHashMap\u4FDD\u5B58\u4E86\u8BB0\u5F55\u63D2\u5165\u7684\u987A\u5E8F\u3002TreeMap \u5B9E\u73B0\u4E86 SortedMap\u63A5\u53E3\uFF0CTreeMap \u6709\u80FD\u529B\u5BF9\u63D2\u5165\u7684\u8BB0\u5F55\u6839\u636E key \u6392\u5E8F\uFF0C\u9ED8\u8BA4\u6309\u7167\u5347\u5E8F\u6392\u5E8F\uFF0C\u4E5F\u53EF\u4EE5\u81EA\u5B9A\u4E49\u6BD4\u8F83\u9879\uFF0C\u5728\u4F7F\u7528 TreeMap \u7684\u65F6\u5019\uFF0Ckey \u5E94\u5F53\u5B9E\u73B0 Comparable\u3002</p><blockquote><p>\u867D\u7136 LinkedHashMap \u548C TreeMap \u90FD\u53EF\u4EE5\u4FDD\u8BC1\u67D0\u79CD\u987A\u5E8F\uFF0C\u4F46\u4E8C\u8005\u8FD8\u662F\u975E\u5E38\u4E0D\u540C\u7684\u3002</p><ul><li>LinkedHashMap \u901A\u5E38\u63D0\u4F9B\u7684\u662F\u904D\u5386\u987A\u5E8F\u7B26\u5408\u63D2\u5165\u987A\u5E8F\uFF0C\u5B83\u7684\u5B9E\u73B0\u662F\u901A\u8FC7\u4E3A\u6761\u76EE\uFF08\u952E\u503C\u5BF9\uFF09\u7EF4\u62A4\u4E00\u4E2A\u53CC\u5411\u94FE\u8868\u3002\u6CE8\u610F\uFF0C\u901A\u8FC7\u7279\u5B9A\u6784\u9020\u51FD\u6570\uFF0C\u6211\u4EEC\u53EF\u4EE5\u521B\u5EFA\u53CD\u6620\u8BBF\u95EE\u987A\u5E8F\u7684\u5B9E\u4F8B\uFF0C\u6240\u8C13\u7684 put\u3001get\u3001compute \u7B49\uFF0C\u90FD\u7B97\u4F5C\u201C\u8BBF\u95EE\u201D\u3002</li><li>\u5BF9\u4E8E TreeMap\uFF0C\u5B83\u7684\u6574\u4F53\u987A\u5E8F\u662F\u7531\u952E\u7684\u987A\u5E8F\u5173\u7CFB\u51B3\u5B9A\u7684\uFF0C\u901A\u8FC7 Comparator \u6216 Comparable\uFF08\u81EA\u7136\u987A\u5E8F\uFF09\u6765\u51B3\u5B9A\u3002</li></ul></blockquote><h2 id="concurrenthashmap" tabindex="-1"><a class="header-anchor" href="#concurrenthashmap" aria-hidden="true">#</a> ConcurrentHashMap</h2>`,89),w=s("HashMap \u5728\u591A\u7EBF\u7A0B\u60C5\u51B5\u4E0B\uFF0C\u5728 put \u7684\u65F6\u5019\uFF0C\u63D2\u5165\u7684\u5143\u7D20\u8D85\u8FC7\u4E86\u5BB9\u91CF\uFF08\u7531\u8D1F\u8F7D\u56E0\u5B50\u51B3\u5B9A\uFF09\u7684\u8303\u56F4\u5C31\u4F1A\u89E6\u53D1\u6269\u5BB9\u64CD\u4F5C\uFF0C\u5C31\u662F resize\uFF0C\u8FD9\u4E2A\u4F1A\u91CD\u65B0\u5C06\u539F\u6570\u7EC4\u7684\u5185\u5BB9\u91CD\u65B0 hash \u5230\u65B0\u7684\u6269\u5BB9\u6570\u7EC4\u4E2D\uFF0C\u5728\u591A\u7EBF\u7A0B\u7684\u73AF\u5883\u4E0B\uFF0C\u5B58\u5728\u540C\u65F6\u5176\u4ED6\u7684\u5143\u7D20\u4E5F\u5728\u8FDB\u884C put \u64CD\u4F5C\uFF0C\u5982\u679C hash \u503C\u76F8\u540C\uFF0C\u53EF\u80FD\u51FA\u73B0\u540C\u65F6\u5728\u540C\u4E00\u6570\u7EC4\u4E0B\u7528\u94FE\u8868\u8868\u793A\uFF0C\u9020\u6210"),g=n("strong",null,"\u95ED\u73AF",-1),f=s("\uFF0C\u5BFC\u81F4\u5728 get \u65F6\u4F1A\u51FA\u73B0\u6B7B\u5FAA\u73AF\uFF0C\u6240\u4EE5 HashMap \u662F\u7EBF\u7A0B\u4E0D\u5B89\u5168\u7684\u3002(\u53EF\u53C2\u8003\uFF1A"),x={href:"https://www.jianshu.com/p/e2f75c8cce01%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},C=s("https://www.jianshu.com/p/e2f75c8cce01\uFF09"),E=t(`<p>Hashtable\uFF0C\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u5B83\u5728\u6240\u6709\u6D89\u53CA\u5230\u591A\u7EBF\u7A0B\u64CD\u4F5C\u7684\u90FD\u52A0\u4E0A\u4E86 synchronized \u5173\u952E\u5B57\u6765\u9501\u4F4F\u6574\u4E2A table\uFF0C\u8FD9\u5C31\u610F\u5473\u7740\u6240\u6709\u7684\u7EBF\u7A0B\u90FD\u5728\u7ADE\u4E89\u4E00\u628A\u9501\uFF0C\u5728\u591A\u7EBF\u7A0B\u7684\u73AF\u5883\u4E0B\uFF0C\u5B83\u662F\u5B89\u5168\u7684\uFF0C\u4F46\u662F\u65E0\u7591\u662F\u6548\u7387\u4F4E\u4E0B\u7684\u3002</p><h3 id="jdk1-7-\u5B9E\u73B0-1" tabindex="-1"><a class="header-anchor" href="#jdk1-7-\u5B9E\u73B0-1" aria-hidden="true">#</a> JDK1.7 \u5B9E\u73B0</h3><p>Hashtable \u5BB9\u5668\u5728\u7ADE\u4E89\u6FC0\u70C8\u7684\u5E76\u53D1\u73AF\u5883\u4E0B\u8868\u73B0\u51FA\u6548\u7387\u4F4E\u4E0B\u7684\u539F\u56E0\uFF0C\u662F\u56E0\u4E3A\u6240\u6709\u8BBF\u95EE Hashtable \u7684\u7EBF\u7A0B\u90FD\u5FC5\u987B\u7ADE\u4E89\u540C\u4E00\u628A\u9501\uFF0C\u90A3\u5047\u5982\u5BB9\u5668\u91CC\u6709\u591A\u628A\u9501\uFF0C\u6BCF\u4E00\u628A\u9501\u7528\u4E8E\u9501\u5BB9\u5668\u5176\u4E2D\u4E00\u90E8\u5206\u6570\u636E\uFF0C\u90A3\u4E48\u5F53\u591A\u7EBF\u7A0B\u8BBF\u95EE\u5BB9\u5668\u91CC\u4E0D\u540C\u6570\u636E\u6BB5\u7684\u6570\u636E\u65F6\uFF0C\u7EBF\u7A0B\u95F4\u5C31\u4E0D\u4F1A\u5B58\u5728\u9501\u7ADE\u4E89\uFF0C\u8FD9\u5C31\u662F ConcurrentHashMap \u6240\u4F7F\u7528\u7684\u9501\u5206\u6BB5\u6280\u672F\u3002</p><p>\u5728 JDK1.7 \u7248\u672C\u4E2D\uFF0CConcurrentHashMap \u7684\u6570\u636E\u7ED3\u6784\u662F\u7531\u4E00\u4E2A Segment \u6570\u7EC4\u548C\u591A\u4E2A HashEntry \u7EC4\u6210\u3002Segment \u6570\u7EC4\u7684\u610F\u4E49\u5C31\u662F\u5C06\u4E00\u4E2A\u5927\u7684 table \u5206\u5272\u6210\u591A\u4E2A\u5C0F\u7684 table \u6765\u8FDB\u884C\u52A0\u9501\u3002\u6BCF\u4E00\u4E2A Segment \u5143\u7D20\u5B58\u50A8\u7684\u662F HashEntry \u6570\u7EC4+\u94FE\u8868\uFF0C\u8FD9\u4E2A\u548C HashMap \u7684\u6570\u636E\u5B58\u50A8\u7ED3\u6784\u4E00\u6837\u3002</p><p><img src="https://cdn.jsdelivr.net/gh/Jstarfish/picBed/others/concurrenthashmap-1.7-segment.jpg" alt="" loading="lazy"></p><p>ConcurrentHashMap \u7C7B\u4E2D\u5305\u542B\u4E24\u4E2A\u9759\u6001\u5185\u90E8\u7C7B HashEntry \u548C Segment\u3002 HashEntry \u7528\u6765\u5C01\u88C5\u6620\u5C04\u8868\u7684\u952E\u503C\u5BF9\uFF0CSegment \u7528\u6765\u5145\u5F53\u9501\u7684\u89D2\u8272\uFF0C\u6BCF\u4E2A Segment \u5BF9\u8C61\u5B88\u62A4\u6574\u4E2A\u6563\u5217\u6620\u5C04\u8868\u7684\u82E5\u5E72\u4E2A\u6876\u3002\u6BCF\u4E2A\u6876\u662F\u7531\u82E5\u5E72\u4E2A HashEntry \u5BF9\u8C61\u94FE\u63A5\u8D77\u6765\u7684\u94FE\u8868\u3002\u4E00\u4E2A ConcurrentHashMap \u5B9E\u4F8B\u4E2D\u5305\u542B\u7531\u82E5\u5E72\u4E2A Segment \u5BF9\u8C61\u7EC4\u6210\u7684\u6570\u7EC4\u3002\u6BCF\u4E2A Segment \u5B88\u62A4\u7740\u4E00\u4E2A HashEntry \u6570\u7EC4\u91CC\u7684\u5143\u7D20\uFF0C\u5F53\u5BF9 HashEntry \u6570\u7EC4\u7684\u6570\u636E\u8FDB\u884C\u4FEE\u6539\u65F6\uFF0C\u5FC5\u987B\u9996\u5148\u83B7\u5F97\u5B83\u5BF9\u5E94\u7684 Segment \u9501\u3002</p><h4 id="segment-\u7C7B" tabindex="-1"><a class="header-anchor" href="#segment-\u7C7B" aria-hidden="true">#</a> Segment \u7C7B</h4><p>Segment \u7C7B\u7EE7\u627F\u4E8E ReentrantLock \u7C7B\uFF0C\u4ECE\u800C\u4F7F\u5F97 Segment \u5BF9\u8C61\u80FD\u5145\u5F53\u53EF\u91CD\u5165\u9501\u7684\u89D2\u8272\u3002\u4E00\u4E2A Segment \u5C31\u662F\u4E00\u4E2A\u5B50\u54C8\u5E0C\u8868\uFF0CSegment \u91CC\u7EF4\u62A4\u4E86\u4E00\u4E2A HashEntry \u6570\u7EC4\uFF0C\u5E76\u53D1\u73AF\u5883\u4E0B\uFF0C\u5BF9\u4E8E\u4E0D\u540C Segment \u7684\u6570\u636E\u8FDB\u884C\u64CD\u4F5C\u662F\u4E0D\u7528\u8003\u8651\u9501\u7ADE\u4E89\u7684\u3002</p><p>\u4ECE\u6E90\u7801\u53EF\u4EE5\u770B\u5230\uFF0CSegment \u5185\u90E8\u7C7B\u548C\u6211\u4EEC\u4E0A\u8FB9\u770B\u5230\u7684 HashMap \u5F88\u76F8\u4F3C\u3002\u4E5F\u6709\u8D1F\u8F7D\u56E0\u5B50\uFF0C\u9608\u503C\u7B49\u5404\u79CD\u5C5E\u6027\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">ReentrantLock</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
  
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_SCAN_RETRIES <span class="token operator">=</span>
    <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">64</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> table<span class="token punctuation">;</span>
  <span class="token keyword">transient</span> <span class="token keyword">int</span> count<span class="token punctuation">;</span>
  <span class="token keyword">transient</span> <span class="token keyword">int</span> modCount<span class="token punctuation">;</span>  <span class="token comment">//\u8BB0\u5F55\u4FEE\u6539\u6B21\u6570</span>
  <span class="token keyword">transient</span> <span class="token keyword">int</span> threshold<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">;</span>

  <span class="token class-name">Segment</span><span class="token punctuation">(</span><span class="token keyword">float</span> lf<span class="token punctuation">,</span> <span class="token keyword">int</span> threshold<span class="token punctuation">,</span> <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>loadFactor <span class="token operator">=</span> lf<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>threshold <span class="token operator">=</span> threshold<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>table <span class="token operator">=</span> tab<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//put \u65B9\u6CD5\u4F1A\u6709\u52A0\u9501\u64CD\u4F5C\uFF0C</span>
  <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> node <span class="token operator">=</span> <span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span>
                <span class="token function">scanAndLockForPut</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">rehash</span><span class="token punctuation">(</span><span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">scanAndLockForPut</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 		<span class="token comment">//...</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">scanAndLock</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> hash<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 		<span class="token comment">//...</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//...</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">replace</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">V</span> oldValue<span class="token punctuation">,</span> <span class="token class-name">V</span> newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	<span class="token comment">//...</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">replace</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//...</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">//...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="hashentry-\u7C7B" tabindex="-1"><a class="header-anchor" href="#hashentry-\u7C7B" aria-hidden="true">#</a> HashEntry \u7C7B</h4><p>HashEntry \u662F\u76EE\u524D\u6700\u5C0F\u7684\u903B\u8F91\u5904\u7406\u5355\u5143\u3002\u4E00\u4E2A ConcurrentHashMap \u7EF4\u62A4\u4E00\u4E2A Segment \u6570\u7EC4\uFF0C\u4E00\u4E2A Segment \u7EF4\u62A4\u4E00\u4E2A HashEntry \u6570\u7EC4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">final</span> <span class="token keyword">int</span> hash<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">K</span> key<span class="token punctuation">;</span>
  <span class="token keyword">volatile</span> <span class="token class-name">V</span> value<span class="token punctuation">;</span>   <span class="token comment">// value \u4E3A volatie \u7C7B\u578B\uFF0C\u4FDD\u8BC1\u53EF\u89C1</span>
  <span class="token keyword">volatile</span> <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
	<span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="concurrenthashmap-\u7C7B" tabindex="-1"><a class="header-anchor" href="#concurrenthashmap-\u7C7B" aria-hidden="true">#</a> ConcurrentHashMap \u7C7B</h4><p>\u9ED8\u8BA4\u7684\u60C5\u51B5\u4E0B\uFF0C\u6BCF\u4E2A ConcurrentHashMap \u7C7B\u4F1A\u521B\u5EFA16\u4E2A\u5E76\u53D1\u7684 segment\uFF0C\u6BCF\u4E2A segment \u91CC\u9762\u5305\u542B\u591A\u4E2A Hash\u8868\uFF0C\u6BCF\u4E2A Hash \u94FE\u90FD\u662F\u7531 HashEntry \u8282\u70B9\u7EC4\u6210\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span>
        <span class="token keyword">implements</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u9ED8\u8BA4\u521D\u59CB\u5BB9\u91CF\u4E3A 16\uFF0C\u5373\u521D\u59CB\u9ED8\u8BA4\u4E3A 16 \u4E2A\u6876</span>
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_INITIAL_CAPACITY <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">float</span> DEFAULT_LOAD_FACTOR <span class="token operator">=</span> <span class="token number">0.75f</span><span class="token punctuation">;</span>
  <span class="token comment">//\u9ED8\u8BA4\u5E76\u53D1\u7EA7\u522B\u4E3A 16\u3002\u8BE5\u503C\u8868\u793A\u5F53\u524D\u66F4\u65B0\u7EBF\u7A0B\u7684\u4F30\u8BA1\u6570</span>
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_CONCURRENCY_LEVEL <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
  
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAXIMUM_CAPACITY <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">30</span><span class="token punctuation">;</span>
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MIN_SEGMENT_TABLE_CAPACITY <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_SEGMENTS <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> <span class="token comment">// slightly conservative  </span>
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> RETRIES_BEFORE_LOCK <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token keyword">int</span> segmentMask<span class="token punctuation">;</span>  <span class="token comment">//\u6BB5\u63A9\u7801,\u4E3B\u8981\u4E3A\u4E86\u5B9A\u4F4DSegment</span>
  <span class="token keyword">final</span> <span class="token keyword">int</span> segmentShift<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> segments<span class="token punctuation">;</span>   <span class="token comment">//\u4E3B\u5E72\u5C31\u662F\u8FD9\u4E2A\u5206\u6BB5\u9501\u6570\u7EC4</span>
  
  <span class="token comment">//\u6784\u9020\u5668</span>
  <span class="token keyword">public</span> <span class="token class-name">ConcurrentHashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span>
                             <span class="token keyword">float</span> loadFactor<span class="token punctuation">,</span> <span class="token keyword">int</span> concurrencyLevel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>loadFactor <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">||</span> initialCapacity <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> concurrencyLevel <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token comment">//MAX_SEGMENTS \u4E3A1&lt;&lt;16=65536\uFF0C\u4E5F\u5C31\u662F\u6700\u5927\u5E76\u53D1\u6570\u4E3A65536</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>concurrencyLevel <span class="token operator">&gt;</span> MAX_SEGMENTS<span class="token punctuation">)</span>
            concurrencyLevel <span class="token operator">=</span> MAX_SEGMENTS<span class="token punctuation">;</span>
        <span class="token comment">// 2\u7684sshif\u6B21\u65B9\u7B49\u4E8Essize\uFF0C\u4F8B:ssize=16,sshift=4;ssize=32,sshif=5</span>
        <span class="token keyword">int</span> sshift <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// ssize \u4E3Asegments\u6570\u7EC4\u957F\u5EA6\uFF0C\u6839\u636EconcurrentLevel\u8BA1\u7B97\u5F97\u51FA</span>
        <span class="token keyword">int</span> ssize <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>ssize <span class="token operator">&lt;</span> concurrencyLevel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token operator">++</span>sshift<span class="token punctuation">;</span>
            ssize <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>segmentShift <span class="token operator">=</span> <span class="token number">32</span> <span class="token operator">-</span> sshift<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>segmentMask <span class="token operator">=</span> ssize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span>
            initialCapacity <span class="token operator">=</span> MAXIMUM_CAPACITY<span class="token punctuation">;</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> initialCapacity <span class="token operator">/</span> ssize<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">*</span> ssize <span class="token operator">&lt;</span> initialCapacity<span class="token punctuation">)</span>
            <span class="token operator">++</span>c<span class="token punctuation">;</span>
        <span class="token keyword">int</span> cap <span class="token operator">=</span> MIN_SEGMENT_TABLE_CAPACITY<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>cap <span class="token operator">&lt;</span> c<span class="token punctuation">)</span>
            cap <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token comment">// \u521B\u5EFAsegments\u6570\u7EC4\u5E76\u521D\u59CB\u5316\u7B2C\u4E00\u4E2ASegment\uFF0C\u5176\u4F59\u7684Segment\u5EF6\u8FDF\u521D\u59CB\u5316</span>
        <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> s0 <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>loadFactor<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>cap <span class="token operator">*</span> loadFactor<span class="token punctuation">)</span><span class="token punctuation">,</span>
                             <span class="token punctuation">(</span><span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">HashEntry</span><span class="token punctuation">[</span>cap<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> ss <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Segment</span><span class="token punctuation">[</span>ssize<span class="token punctuation">]</span><span class="token punctuation">;</span>
        UNSAFE<span class="token punctuation">.</span><span class="token function">putOrderedObject</span><span class="token punctuation">(</span>ss<span class="token punctuation">,</span> SBASE<span class="token punctuation">,</span> s0<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ordered write of segments[0]</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>segments <span class="token operator">=</span> ss<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="put-\u65B9\u6CD5-2" tabindex="-1"><a class="header-anchor" href="#put-\u65B9\u6CD5-2" aria-hidden="true">#</a> put() \u65B9\u6CD5</h4><ol><li><strong>\u5B9A\u4F4Dsegment\u5E76\u786E\u4FDD\u5B9A\u4F4D\u7684Segment\u5DF2\u521D\u59CB\u5316</strong></li><li><strong>\u8C03\u7528 Segment\u7684 put \u65B9\u6CD5\u3002</strong></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> s<span class="token punctuation">;</span>
  <span class="token comment">//concurrentHashMap\u4E0D\u5141\u8BB8key/value\u4E3A\u7A7A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//hash\u51FD\u6570\u5BF9key\u7684hashCode\u91CD\u65B0\u6563\u5217\uFF0C\u907F\u514D\u5DEE\u52B2\u7684\u4E0D\u5408\u7406\u7684hashcode\uFF0C\u4FDD\u8BC1\u6563\u5217\u5747\u5300</span>
  <span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u8FD4\u56DE\u7684hash\u503C\u65E0\u7B26\u53F7\u53F3\u79FBsegmentShift\u4F4D\u4E0E\u6BB5\u63A9\u7801\u8FDB\u884C\u4F4D\u8FD0\u7B97\uFF0C\u5B9A\u4F4Dsegment</span>
  <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token punctuation">(</span>hash <span class="token operator">&gt;&gt;&gt;</span> segmentShift<span class="token punctuation">)</span> <span class="token operator">&amp;</span> segmentMask<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>UNSAFE<span class="token punctuation">.</span>getObject          <span class="token comment">// nonvolatile; recheck</span>
       <span class="token punctuation">(</span>segments<span class="token punctuation">,</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;&lt;</span> SSHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> SBASE<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">//  in ensureSegment</span>
    s <span class="token operator">=</span> <span class="token function">ensureSegment</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="get-\u65B9\u6CD5-2" tabindex="-1"><a class="header-anchor" href="#get-\u65B9\u6CD5-2" aria-hidden="true">#</a> get() \u65B9\u6CD5</h4><p><strong>get\u65B9\u6CD5\u65E0\u9700\u52A0\u9501\uFF0C\u7531\u4E8E\u5176\u4E2D\u6D89\u53CA\u5230\u7684\u5171\u4EAB\u53D8\u91CF\u90FD\u4F7F\u7528volatile\u4FEE\u9970\uFF0Cvolatile\u53EF\u4EE5\u4FDD\u8BC1\u5185\u5B58\u53EF\u89C1\u6027\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u8BFB\u53D6\u5230\u8FC7\u671F\u6570\u636E</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> s<span class="token punctuation">;</span> <span class="token comment">// manually integrate access methods to reduce overhead</span>
  <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span>
  <span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">long</span> u <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> segmentShift<span class="token punctuation">)</span> <span class="token operator">&amp;</span> segmentMask<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> SSHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> SBASE<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>UNSAFE<span class="token punctuation">.</span><span class="token function">getObjectVolatile</span><span class="token punctuation">(</span>segments<span class="token punctuation">,</span> u<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
      <span class="token punctuation">(</span>tab <span class="token operator">=</span> s<span class="token punctuation">.</span>table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> UNSAFE<span class="token punctuation">.</span>getObjectVolatile
         <span class="token punctuation">(</span>tab<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>tab<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> h<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> TSHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> TBASE<span class="token punctuation">)</span><span class="token punctuation">;</span>
         e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">K</span> k<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> h <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jdk1-8-\u5B9E\u73B0-1" tabindex="-1"><a class="header-anchor" href="#jdk1-8-\u5B9E\u73B0-1" aria-hidden="true">#</a> JDK1.8 \u5B9E\u73B0</h3><p><img src="https://cdn.jsdelivr.net/gh/Jstarfish/picBed/others/concurrenthashmap-1.8.jpg" alt="" loading="lazy"></p><p>ConcurrentHashMap \u5728 JDK8 \u4E2D\u8FDB\u884C\u4E86\u5DE8\u5927\u6539\u52A8\uFF0C\u5149\u662F\u4EE3\u7801\u91CF\u5C31\u4ECE1000\u591A\u884C\u589E\u52A0\u52306000\u884C\uFF011.8 \u6452\u5F03\u4E86<code>Segment</code>(\u9501\u6BB5)\u7684\u6982\u5FF5\uFF0C\u91C7\u7528\u4E86 <code>CAS + synchronized</code> \u6765\u4FDD\u8BC1\u5E76\u53D1\u7684\u5B89\u5168\u6027\u3002</p><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u548C HashMap 1.8 \u7684\u6570\u636E\u7ED3\u6784\u5F88\u50CF\u3002\u5E95\u5C42\u6570\u636E\u7ED3\u6784\u6539\u53D8\u4E3A\u91C7\u7528<strong>\u6570\u7EC4+\u94FE\u8868+\u7EA2\u9ED1\u6811</strong>\u7684\u6570\u636E\u5F62\u5F0F\u3002</p><h4 id="\u548Chashmap1-8\u76F8\u540C\u7684\u4E00\u4E9B\u5730\u65B9" tabindex="-1"><a class="header-anchor" href="#\u548Chashmap1-8\u76F8\u540C\u7684\u4E00\u4E9B\u5730\u65B9" aria-hidden="true">#</a> \u548CHashMap1.8\u76F8\u540C\u7684\u4E00\u4E9B\u5730\u65B9</h4><ul><li>\u5E95\u5C42\u6570\u636E\u7ED3\u6784\u4E00\u81F4</li><li>HashMap\u521D\u59CB\u5316\u662F\u5728\u7B2C\u4E00\u6B21put\u5143\u7D20\u7684\u65F6\u5019\u8FDB\u884C\u7684\uFF0C\u800C\u4E0D\u662Finit</li><li>HashMap\u7684\u5E95\u5C42\u6570\u7EC4\u957F\u5EA6\u603B\u662F\u4E3A2\u7684\u6574\u6B21\u5E42</li><li>\u9ED8\u8BA4\u6811\u5316\u7684\u9608\u503C\u4E3A 8\uFF0C\u800C\u94FE\u8868\u5316\u7684\u9608\u503C\u4E3A 6\uFF08\u5F53\u4F4E\u4E8E\u8FD9\u4E2A\u9608\u503C\u65F6\uFF0C\u7EA2\u9ED1\u6811\u8F6C\u6210\u94FE\u8868\uFF09</li><li>hash\u7B97\u6CD5\u4E5F\u5F88\u7C7B\u4F3C\uFF0C\u4F46\u591A\u4E86\u4E00\u6B65<code>&amp; HASH_BITS</code>\uFF0C\u8BE5\u6B65\u662F\u4E3A\u4E86\u6D88\u9664\u6700\u9AD8\u4F4D\u4E0A\u7684\u8D1F\u7B26\u53F7\uFF0Chash\u7684\u8D1F\u5728ConcurrentHashMap\u4E2D\u6709\u7279\u6B8A\u610F\u4E49\u8868\u793A\u5728<strong>\u6269\u5BB9\u6216\u8005\u662F\u6811\u8282\u70B9</strong></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> HASH_BITS <span class="token operator">=</span> <span class="token number">0x7fffffff</span><span class="token punctuation">;</span> <span class="token comment">// usable bits of normal node hash</span>

<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">spread</span><span class="token punctuation">(</span><span class="token keyword">int</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>h <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> HASH_BITS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4E00\u4E9B\u5173\u952E\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E9B\u5173\u952E\u5C5E\u6027" aria-hidden="true">#</a> \u4E00\u4E9B\u5173\u952E\u5C5E\u6027</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAXIMUM_CAPACITY <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">30</span><span class="token punctuation">;</span> <span class="token comment">//\u6570\u7EC4\u6700\u5927\u5927\u5C0F \u540CHashMap</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_CAPACITY <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span><span class="token comment">//\u6570\u7EC4\u9ED8\u8BA4\u5927\u5C0F</span>

<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_ARRAY_SIZE <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">-</span> <span class="token number">8</span><span class="token punctuation">;</span> <span class="token comment">//\u6570\u7EC4\u53EF\u80FD\u6700\u5927\u503C\uFF0C\u9700\u8981\u4E0EtoArray\uFF08\uFF09\u76F8\u5173\u65B9\u6CD5\u5173\u8054</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_CONCURRENCY_LEVEL <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span> <span class="token comment">//\u517C\u5BB9\u65E7\u7248\u4FDD\u7559\u7684\u503C\uFF0C\u9ED8\u8BA4\u7EBF\u7A0B\u5E76\u53D1\u5EA6\uFF0C\u7C7B\u4F3C\u4FE1\u53F7\u91CF</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">float</span> LOAD_FACTOR <span class="token operator">=</span> <span class="token number">0.75f</span><span class="token punctuation">;</span><span class="token comment">//\u9ED8\u8BA4map\u6269\u5BB9\u6BD4\u4F8B\uFF0C\u5B9E\u9645\u7528(n &lt;&lt; 1) - (n &gt;&gt;&gt; 1)\u4EE3\u66FF\u4E86\u66F4\u9AD8\u6548</span>

<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> TREEIFY_THRESHOLD <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span> <span class="token comment">// \u94FE\u8868\u8F6C\u6811\u9600\u503C\uFF0C\u5927\u4E8E8\u65F6</span>

<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> UNTREEIFY_THRESHOLD <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span> <span class="token comment">//\u6811\u8F6C\u94FE\u8868\u9600\u503C\uFF0C\u5C0F\u4E8E\u7B49\u4E8E6\uFF08tranfer\u65F6\uFF0Clc\u3001hc=0\u4E24\u4E2A\u8BA1\u6570\u5668\u5206\u522B++\u8BB0\u5F55\u539Fbin\u3001\u65B0binTreeNode\u6570\u91CF\uFF0C&lt;=UNTREEIFY_THRESHOLD \u5219untreeify(lo)\uFF09\u3002\u3010\u4EC5\u5728\u6269\u5BB9tranfer\u65F6\u624D\u53EF\u80FD\u6811\u8F6C\u94FE\u8868\u3011</span>

<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MIN_TREEIFY_CAPACITY <span class="token operator">=</span> <span class="token number">64</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MIN_TRANSFER_STRIDE <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span><span class="token comment">//\u6269\u5BB9\u8F6C\u79FB\u65F6\u7684\u6700\u5C0F\u6570\u7EC4\u5206\u7EC4\u5927\u5C0F</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> RESIZE_STAMP_BITS <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span><span class="token comment">//\u672C\u7C7B\u4E2D\u6CA1\u63D0\u4F9B\u4FEE\u6539\u7684\u65B9\u6CD5 \u7528\u6765\u6839\u636En\u751F\u6210\u4F4D\u7F6E\u4E00\u4E2A\u7C7B\u4F3C\u65F6\u95F4\u6233\u7684\u529F\u80FD</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_RESIZERS <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">32</span> <span class="token operator">-</span> RESIZE_STAMP_BITS<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 2^15-1\uFF0Chelp resize\u7684\u6700\u5927\u7EBF\u7A0B\u6570</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> RESIZE_STAMP_SHIFT <span class="token operator">=</span> <span class="token number">32</span> <span class="token operator">-</span> RESIZE_STAMP_BITS<span class="token punctuation">;</span> <span class="token comment">// 32-16=16\uFF0CsizeCtl\u4E2D\u8BB0\u5F55size\u5927\u5C0F\u7684\u504F\u79FB\u91CF</span>

<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MOVED <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// hash for forwarding nodes\uFF08forwarding nodes\u7684hash\u503C\uFF09\u3001\u6807\u793A\u4F4D</span>

<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> TREEBIN <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// hash for roots of trees\uFF08\u6811\u6839\u8282\u70B9\u7684hash\u503C\uFF09</span>

<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> RESERVED <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// ReservationNode\u7684hash\u503C</span>

<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> HASH_BITS <span class="token operator">=</span> <span class="token number">0x7fffffff</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u5728\u8BA1\u7B97hash\u65F6\u8FDB\u884C\u5B89\u4F4D\u4E0E\u8BA1\u7B97\u6D88\u9664\u8D1Fhash</span>

<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> NCPU <span class="token operator">=</span> <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53EF\u7528\u5904\u7406\u5668\u6570\u91CF</span>

<span class="token comment">/* ---------------- Fields -------------- */</span>

<span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> table<span class="token punctuation">;</span> <span class="token comment">//\u88C5\u8F7DNode\u7684\u6570\u7EC4\uFF0C\u4F5C\u4E3AConcurrentHashMap\u7684\u6570\u636E\u5BB9\u5668\uFF0C\u91C7\u7528\u61D2\u52A0\u8F7D\u7684\u65B9\u5F0F\uFF0C\u76F4\u5230\u7B2C\u4E00\u6B21\u63D2\u5165\u6570\u636E\u7684\u65F6\u5019\u624D\u4F1A\u8FDB\u884C\u521D\u59CB\u5316\u64CD\u4F5C\uFF0C\u6570\u7EC4\u7684\u5927\u5C0F\u603B\u662F\u4E3A2\u7684\u5E42\u6B21\u65B9\u3002</span>

<span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> nextTable<span class="token punctuation">;</span> <span class="token comment">//\u6269\u5BB9\u65F6\u4F7F\u7528\uFF0C\u5E73\u65F6\u4E3Anull\uFF0C\u53EA\u6709\u5728\u6269\u5BB9\u7684\u65F6\u5019\u624D\u4E3A\u975Enull</span>

<span class="token doc-comment comment">/**
* \u5B9E\u9645\u4E0A\u4FDD\u5B58\u7684\u662Fhashmap\u4E2D\u7684\u5143\u7D20\u4E2A\u6570  \u5229\u7528CAS\u9501\u8FDB\u884C\u66F4\u65B0\u4F46\u5B83\u5E76\u4E0D\u7528\u8FD4\u56DE\u5F53\u524Dhashmap\u7684\u5143\u7D20\u4E2A\u6570 
*/</span>
<span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">long</span> baseCount<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
*\u8BE5\u5C5E\u6027\u7528\u6765\u63A7\u5236table\u6570\u7EC4\u7684\u5927\u5C0F\uFF0C\u6839\u636E\u662F\u5426\u521D\u59CB\u5316\u548C\u662F\u5426\u6B63\u5728\u6269\u5BB9\u6709\u51E0\u79CD\u60C5\u51B5\uFF1A
*\u5F53\u503C\u4E3A\u8D1F\u6570\u65F6\uFF1A\u5982\u679C\u4E3A-1\u8868\u793A\u6B63\u5728\u521D\u59CB\u5316\uFF0C\u5982\u679C\u4E3A-N\u5219\u8868\u793A\u5F53\u524D\u6B63\u6709N-1\u4E2A\u7EBF\u7A0B\u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C\uFF1B
*\u5F53\u503C\u4E3A\u6B63\u6570\u65F6\uFF1A\u5982\u679C\u5F53\u524D\u6570\u7EC4\u4E3Anull\u7684\u8BDD\u8868\u793Atable\u5728\u521D\u59CB\u5316\u8FC7\u7A0B\u4E2D\uFF0CsizeCtl\u8868\u793A\u4E3A\u9700\u8981\u65B0\u5EFA\u6570\u7EC4\u7684\u957F\u5EA6\uFF1B\u82E5\u5DF2\u7ECF\u521D\u59CB\u5316\u4E86\uFF0C\u8868\u793A\u5F53\u524D\u6570\u636E\u5BB9\u5668\uFF08table\u6570\u7EC4\uFF09\u53EF\u7528\u5BB9\u91CF\u4E5F\u53EF\u4EE5\u7406\u89E3\u6210\u4E34\u754C\u503C\uFF08\u63D2\u5165\u8282\u70B9\u6570\u8D85\u8FC7\u4E86\u8BE5\u4E34\u754C\u503C\u5C31\u9700\u8981\u6269\u5BB9\uFF09\uFF0C\u5177\u4F53\u6307\u4E3A\u6570\u7EC4\u7684\u957F\u5EA6n \u4E58\u4EE5 \u52A0\u8F7D\u56E0\u5B50loadFactor\uFF1B\u5F53\u503C\u4E3A0\u65F6\uFF0C\u5373\u6570\u7EC4\u957F\u5EA6\u4E3A\u9ED8\u8BA4\u521D\u59CB\u503C\u3002
*/</span>
<span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> sizeCtl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="put-\u65B9\u6CD5-3" tabindex="-1"><a class="header-anchor" href="#put-\u65B9\u6CD5-3" aria-hidden="true">#</a> put() \u65B9\u6CD5</h4><ol><li>\u9996\u5148\u4F1A\u5224\u65AD key\u3001value\u662F\u5426\u4E3A\u7A7A\uFF0C\u5982\u679C\u4E3A\u7A7A\u5C31\u629B\u5F02\u5E38\uFF01</li><li><code>spread()</code>\u65B9\u6CD5\u83B7\u53D6hash\uFF0C\u51CF\u5C0Fhash\u51B2\u7A81</li><li>\u5224\u65AD\u662F\u5426\u521D\u59CB\u5316table\u6570\u7EC4\uFF0C\u6CA1\u6709\u7684\u8BDD\u8C03\u7528<code>initTable()</code>\u65B9\u6CD5\u8FDB\u884C\u521D\u59CB\u5316</li><li>\u5224\u65AD\u662F\u5426\u80FD\u76F4\u63A5\u5C06\u65B0\u503C\u63D2\u5165\u5230table\u6570\u7EC4\u4E2D</li><li>\u5224\u65AD\u5F53\u524D\u662F\u5426\u5728\u6269\u5BB9\uFF0C<code>MOVED</code>\u4E3A-1\u8BF4\u660E\u5F53\u524DConcurrentHashMap\u6B63\u5728\u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C\uFF0C\u6B63\u5728\u6269\u5BB9\u7684\u8BDD\u5C31\u8FDB\u884C\u534F\u52A9\u6269\u5BB9</li><li>\u5F53table[i]\u4E3A\u94FE\u8868\u7684\u5934\u7ED3\u70B9\uFF0C\u5728\u94FE\u8868\u4E2D\u63D2\u5165\u65B0\u503C\uFF0C\u901A\u8FC7synchronized (f)\u7684\u65B9\u5F0F\u8FDB\u884C\u52A0\u9501\u4EE5\u5B9E\u73B0\u7EBF\u7A0B\u5B89\u5168\u6027\u3002 <ol><li>\u5728\u94FE\u8868\u4E2D\u5982\u679C\u627E\u5230\u4E86\u4E0E\u5F85\u63D2\u5165\u7684\u952E\u503C\u5BF9\u7684key\u76F8\u540C\u7684\u8282\u70B9\uFF0C\u5C31\u76F4\u63A5\u8986\u76D6</li><li>\u5982\u679C\u6CA1\u6709\u627E\u5230\u7684\u8BDD\uFF0C\u5C31\u76F4\u63A5\u5C06\u5F85\u63D2\u5165\u7684\u952E\u503C\u5BF9\u8FFD\u52A0\u5230\u94FE\u8868\u7684\u672B\u5C3E</li></ol></li><li>\u5F53table[i]\u4E3A\u7EA2\u9ED1\u6811\u7684\u6839\u8282\u70B9\uFF0C\u5728\u7EA2\u9ED1\u6811\u4E2D\u63D2\u5165\u65B0\u503C/\u8986\u76D6\u65E7\u503C</li><li>\u6839\u636E\u5F53\u524D\u8282\u70B9\u4E2A\u6570\u8FDB\u884C\u8C03\u6574\uFF0C\u5426\u9700\u8981\u8F6C\u6362\u6210\u7EA2\u9ED1\u6811(\u4E2A\u6570\u5927\u4E8E\u7B49\u4E8E8\uFF0C\u5C31\u4F1A\u8C03\u7528<code>treeifyBin</code>\u65B9\u6CD5\u5C06tabel[i]<code>\u7B2Ci\u4E2A\u6563\u5217\u6876</code>\u62C9\u94FE\u8F6C\u6362\u6210\u7EA2\u9ED1\u6811)</li><li>\u5BF9\u5F53\u524D\u5BB9\u91CF\u5927\u5C0F\u8FDB\u884C\u68C0\u67E5\uFF0C\u5982\u679C\u8D85\u8FC7\u4E86\u4E34\u754C\u503C\uFF08\u5B9E\u9645\u5927\u5C0F*\u52A0\u8F7D\u56E0\u5B50\uFF09\u5C31\u8FDB\u884C\u6269\u5BB9</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// key \u548C value \u5747\u4E0D\u5141\u8BB8\u4E3A null</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6839\u636E key \u8BA1\u7B97\u51FA hash \u503C</span>
    <span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token function">spread</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> binCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab <span class="token operator">=</span> table<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> f<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">,</span> fh<span class="token punctuation">;</span>
         <span class="token comment">// \u5224\u65AD\u662F\u5426\u9700\u8981\u8FDB\u884C\u521D\u59CB\u5316</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            tab <span class="token operator">=</span> <span class="token function">initTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// f \u5373\u4E3A\u5F53\u524D key \u5B9A\u4F4D\u51FA\u7684 Node\uFF0C\u5982\u679C\u4E3A\u7A7A\u8868\u793A\u5F53\u524D\u4F4D\u7F6E\u53EF\u4EE5\u5199\u5165\u6570\u636E\uFF0C\u5229\u7528 CAS \u5C1D\u8BD5\u5199\u5165\uFF0C\u5931\u8D25\u5219\u81EA\u65CB\u4FDD\u8BC1\u6210\u529F</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>f <span class="token operator">=</span> <span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">casTabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
                         <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>                   <span class="token comment">// no lock when adding to empty bin</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5982\u679C\u5F53\u524D\u4F4D\u7F6E\u7684 hashcode == MOVED == -1,\u5219\u9700\u8981\u8FDB\u884C\u6269\u5BB9</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fh <span class="token operator">=</span> f<span class="token punctuation">.</span>hash<span class="token punctuation">)</span> <span class="token operator">==</span> MOVED<span class="token punctuation">)</span>
            tab <span class="token operator">=</span> <span class="token function">helpTransfer</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u90FD\u4E0D\u6EE1\u8DB3\uFF0C\u5219\u5229\u7528 synchronized \u9501\u5199\u5165\u6570\u636E</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u5269\u4E0B\u60C5\u51B5\u53C8\u5206\u4E24\u79CD\uFF0C\u63D2\u5165\u94FE\u8868\u3001\u63D2\u5165\u7EA2\u9ED1\u6811</span>
            <span class="token class-name">V</span> oldVal <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
          <span class="token comment">//\u91C7\u7528\u540C\u6B65\u5185\u7F6E\u9501\u5B9E\u73B0\u5E76\u53D1\u63A7\u5236</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">==</span> f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u5982\u679C fh=f.hash &gt;=0\uFF0C\u5F53\u524D\u4E3A\u94FE\u8868\uFF0C\u5728\u94FE\u8868\u4E2D\u63D2\u5165\u65B0\u7684\u952E\u503C\u5BF9</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>fh <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        binCount <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                      <span class="token comment">//\u904D\u5386\u94FE\u8868\uFF0C\u5982\u679C\u627E\u5230\u5BF9\u5E94\u7684 node \u8282\u70B9\uFF0C\u4FEE\u6539 value,\u5426\u5219\u76F4\u63A5\u5728\u94FE\u8868\u5C3E\u90E8\u52A0\u5165\u8282\u70B9</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> f<span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token operator">++</span>binCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token class-name">K</span> ek<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                                <span class="token punctuation">(</span><span class="token punctuation">(</span>ek <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span>
                                 <span class="token punctuation">(</span>ek <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ek<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                oldVal <span class="token operator">=</span> e<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent<span class="token punctuation">)</span>
                                    e<span class="token punctuation">.</span>val <span class="token operator">=</span> value<span class="token punctuation">;</span>
                                <span class="token keyword">break</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> pred <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                pred<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span>
                                                          value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token keyword">break</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// \u5F53\u524D\u4E3A\u7EA2\u9ED1\u6811\uFF0C\u5C06\u65B0\u7684\u952E\u503C\u5BF9\u63D2\u5165\u5230\u7EA2\u9ED1\u6811\u4E2D</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token keyword">instanceof</span> <span class="token class-name">TreeBin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span>
                        binCount <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>f<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span>
                                                       value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            oldVal <span class="token operator">=</span> p<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent<span class="token punctuation">)</span>
                                p<span class="token punctuation">.</span>val <span class="token operator">=</span> value<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u63D2\u5165\u5B8C\u952E\u503C\u5BF9\u540E\u518D\u6839\u636E\u5B9E\u9645\u5927\u5C0F\u770B\u662F\u5426\u9700\u8981\u8F6C\u6362\u6210\u7EA2\u9ED1\u6811</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">&gt;=</span> TREEIFY_THRESHOLD<span class="token punctuation">)</span>
                    <span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVal <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> oldVal<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5BF9\u5F53\u524D\u5BB9\u91CF\u5927\u5C0F\u8FDB\u884C\u68C0\u67E5\uFF0C\u5982\u679C\u8D85\u8FC7\u4E86\u4E34\u754C\u503C\uFF08\u5B9E\u9645\u5927\u5C0F*\u52A0\u8F7D\u56E0\u5B50\uFF09\u5C31\u9700\u8981\u6269\u5BB9 </span>
    <span class="token function">addCount</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">,</span> binCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u53D1\u73B0 JDK8 \u4E2D\u7684\u5B9E\u73B0\u4E5F\u662F<strong>\u9501\u5206\u79BB</strong>\u7684\u601D\u60F3\uFF0C\u53EA\u662F\u9501\u4F4F\u7684\u662F\u4E00\u4E2ANode\uFF0C\u800C\u4E0D\u662FJDK7\u4E2D\u7684Segment\uFF0C\u800C\u9501\u4F4FNode\u4E4B\u524D\u7684\u64CD\u4F5C\u662F\u65E0\u9501\u7684\u5E76\u4E14\u4E5F\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u5EFA\u7ACB\u5728\u4E4B\u524D\u63D0\u5230\u7684\u539F\u5B50\u64CD\u4F5C\u4E0A\u3002</p><h4 id="get-\u65B9\u6CD5-3" tabindex="-1"><a class="header-anchor" href="#get-\u65B9\u6CD5-3" aria-hidden="true">#</a> get() \u65B9\u6CD5</h4><p>get\u65B9\u6CD5\u65E0\u9700\u52A0\u9501\uFF0C\u7531\u4E8E\u5176\u4E2D\u6D89\u53CA\u5230\u7684\u5171\u4EAB\u53D8\u91CF\u90FD\u4F7F\u7528volatile\u4FEE\u9970\uFF0Cvolatile\u53EF\u4EE5\u4FDD\u8BC1\u5185\u5B58\u53EF\u89C1\u6027\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u8BFB\u53D6\u5230\u8FC7\u671F\u6570\u636E</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">,</span> p<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> eh<span class="token punctuation">;</span> <span class="token class-name">K</span> ek<span class="token punctuation">;</span>
  <span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token function">spread</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5224\u65AD\u6570\u7EC4\u662F\u5426\u4E3A\u7A7A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
      <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> h<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5224\u65ADnode \u8282\u70B9\u7B2C\u4E00\u4E2A\u5143\u7D20\u662F\u4E0D\u662F\u8981\u627E\u7684\uFF0C\u5982\u679C\u662F\u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>eh <span class="token operator">=</span> e<span class="token punctuation">.</span>hash<span class="token punctuation">)</span> <span class="token operator">==</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ek <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>ek <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ek<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> e<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// // hash\u5C0F\u4E8E0,\u8BF4\u660E\u662F\u7279\u6B8A\u8282\u70B9\uFF08TreeBin\u6216ForwardingNode\uFF09\u8C03\u7528find</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>eh <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span>p <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> p<span class="token punctuation">.</span>val <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E0D\u662F\u4E0A\u9762\u7684\u60C5\u51B5,\u90A3\u5C31\u662F\u94FE\u8868\u4E86,\u904D\u5386\u94FE\u8868</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> h <span class="token operator">&amp;&amp;</span>
          <span class="token punctuation">(</span><span class="token punctuation">(</span>ek <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>ek <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ek<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> e<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E24\u4E2A\u5BF9\u8C61\u503C\u76F8\u540C-x-equals-y-true-\u4F46\u5374\u53EF\u6709\u4E0D\u540C\u7684-hash-code-\u8FD9\u53E5\u8BDD\u5BF9\u4E0D\u5BF9" tabindex="-1"><a class="header-anchor" href="#\u4E24\u4E2A\u5BF9\u8C61\u503C\u76F8\u540C-x-equals-y-true-\u4F46\u5374\u53EF\u6709\u4E0D\u540C\u7684-hash-code-\u8FD9\u53E5\u8BDD\u5BF9\u4E0D\u5BF9" aria-hidden="true">#</a> \u4E24\u4E2A\u5BF9\u8C61\u503C\u76F8\u540C (x.equals(y) == true)\uFF0C\u4F46\u5374\u53EF\u6709\u4E0D\u540C\u7684 hash code\uFF0C\u8FD9\u53E5\u8BDD\u5BF9\u4E0D\u5BF9?</h3><p>\u6B63\u786E</p><p>\u5982\u679C\u6B64\u5BF9\u8C61\u91CD\u5199\u4E86equals\u65B9\u6CD5\uFF0C\u90A3\u4E48\u53EF\u80FD\u51FA\u73B0\u8FD9\u4E24\u4E2A\u5BF9\u8C61\u7684equals\u76F8\u540C\uFF0C\u800Chashcode\u4E0D\u540C\u3002\u56E0\u6B64\u53EF\u4EE5\u8BF4\u5B83\u662F\u5BF9\u7684\u3002 \u4F46\u662F\uFF0C\u5982\u679C\u6B64\u5BF9\u8C61\u7EE7\u627FObject\uFF0C\u6CA1\u6709\u91CD\u5199equals\u65B9\u6CD5\uFF0C\u90A3\u4E48\u5C31\u4F7F\u7528Object\u7684equals\u65B9\u6CD5\uFF0CObject\u5BF9\u8C61\u7684equals\u65B9\u6CD5\u9ED8\u8BA4\u662F\u7528==\u5B9E\u73B0\u7684\uFF0C\u90A3\u4E48\u5982\u679Cequals\u76F8\u540C\uFF0Chashcode\u4E00\u5B9A\u76F8\u540C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EqualsTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">A</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">B</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//true</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span> <span class="token operator">+</span> b<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">//1086865489,452372241</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hashtable-\u548C-concurrenthashmap-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#hashtable-\u548C-concurrenthashmap-\u7684\u533A\u522B" aria-hidden="true">#</a> Hashtable \u548C ConcurrentHashMap \u7684\u533A\u522B</h3><p>ConcurrentHashMap \u548C Hashtable \u7684\u533A\u522B\u4E3B\u8981\u4F53\u73B0\u5728\u5B9E\u73B0\u7EBF\u7A0B\u5B89\u5168\u7684\u65B9\u5F0F\u4E0A\u4E0D\u540C\u3002</p><ul><li><strong>\u5E95\u5C42\u6570\u636E\u7ED3\u6784\uFF1A</strong> JDK1.7 \u7684 ConcurrentHashMap \u5E95\u5C42\u91C7\u7528 <strong>\u5206\u6BB5\u7684\u6570\u7EC4+\u94FE\u8868</strong> \u5B9E\u73B0\uFF0CJDK1.8 \u91C7\u7528\u7684\u6570\u636E\u7ED3\u6784\u548C HashMap1.8 \u7684\u7ED3\u6784\u7C7B\u4F3C\uFF0C<strong>\u6570\u7EC4+\u94FE\u8868/\u7EA2\u9ED1\u4E8C\u53C9\u6811</strong>\u3002Hashtable \u548C JDK1.8 \u4E4B\u524D\u7684 HashMap \u7684\u5E95\u5C42\u6570\u636E\u7ED3\u6784\u7C7B\u4F3C\u90FD\u662F\u91C7\u7528 <strong>\u6570\u7EC4+\u94FE\u8868</strong> \u7684\u5F62\u5F0F\uFF0C\u6570\u7EC4\u662F HashMap \u7684\u4E3B\u4F53\uFF0C\u94FE\u8868\u5219\u662F\u4E3B\u8981\u4E3A\u4E86\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\u800C\u5B58\u5728\u7684\uFF1B</li><li><strong>\u5B9E\u73B0\u7EBF\u7A0B\u5B89\u5168\u7684\u65B9\u5F0F\uFF08\u91CD\u8981\uFF09</strong> \uFF1A <ul><li><strong>\u5728 JDK1.7 \u7684\u65F6\u5019\uFF0CConcurrentHashMap\uFF08\u5206\u6BB5\u9501\uFF09</strong> \u5BF9\u6574\u4E2A\u6876\u6570\u7EC4\u8FDB\u884C\u4E86\u5206\u5272\u5206\u6BB5(Segment)\uFF0C\u6BCF\u4E00\u628A\u9501\u53EA\u9501\u5BB9\u5668\u5176\u4E2D\u4E00\u90E8\u5206\u6570\u636E\uFF0C\u591A\u7EBF\u7A0B\u8BBF\u95EE\u5BB9\u5668\u91CC\u4E0D\u540C\u6570\u636E\u6BB5\u7684\u6570\u636E\uFF0C\u5C31\u4E0D\u4F1A\u5B58\u5728\u9501\u7ADE\u4E89\uFF0C\u63D0\u9AD8\u5E76\u53D1\u8BBF\u95EE\u7387\u3002\uFF08\u9ED8\u8BA4\u5206\u914D16\u4E2ASegment\uFF0C\u6BD4Hashtable\u6548\u7387\u63D0\u9AD816\u500D\u3002\uFF09 <strong>\u5230\u4E86 JDK1.8 \u7684\u65F6\u5019\u5DF2\u7ECF\u6452\u5F03\u4E86Segment\u7684\u6982\u5FF5\uFF0C\u800C\u662F\u76F4\u63A5\u7528 Node \u6570\u7EC4+\u94FE\u8868/\u7EA2\u9ED1\u6811\u7684\u6570\u636E\u7ED3\u6784\u6765\u5B9E\u73B0\uFF0C\u5E76\u53D1\u63A7\u5236\u4F7F\u7528 synchronized \u548C CAS \u6765\u64CD\u4F5C\u3002\uFF08JDK1.6\u4EE5\u540E \u5BF9 synchronized\u9501\u505A\u4E86\u5F88\u591A\u4F18\u5316\uFF09</strong> \u6574\u4E2A\u770B\u8D77\u6765\u5C31\u50CF\u662F\u4F18\u5316\u8FC7\u4E14\u7EBF\u7A0B\u5B89\u5168\u7684 HashMap\uFF0C\u867D\u7136\u5728 JDK1.8 \u4E2D\u8FD8\u80FD\u770B\u5230 Segment \u7684\u6570\u636E\u7ED3\u6784\uFF0C\u4F46\u662F\u5DF2\u7ECF\u7B80\u5316\u4E86\u5C5E\u6027\uFF0C\u53EA\u662F\u4E3A\u4E86\u517C\u5BB9\u65E7\u7248\u672C\uFF1B</li><li>Hashtable(\u540C\u4E00\u628A\u9501) \uFF1A\u4F7F\u7528 synchronized \u6765\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\uFF0C\u6548\u7387\u975E\u5E38\u4F4E\u4E0B\u3002\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u8BBF\u95EE\u540C\u6B65\u65B9\u6CD5\u65F6\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u4E5F\u8BBF\u95EE\u540C\u6B65\u65B9\u6CD5\uFF0C\u53EF\u80FD\u4F1A\u8FDB\u5165\u963B\u585E\u6216\u8F6E\u8BE2\u72B6\u6001\uFF0C\u5982\u4F7F\u7528 put \u6DFB\u52A0\u5143\u7D20\uFF0C\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u4E0D\u80FD\u4F7F\u7528 put \u6DFB\u52A0\u5143\u7D20\uFF0C\u4E5F\u4E0D\u80FD\u4F7F\u7528 get\uFF0C\u7ADE\u4E89\u8D8A\u6FC0\u70C8\u6548\u7387\u8D8A\u4F4E\u3002</li></ul></li></ul><h2 id="java\u5FEB\u901F\u5931\u8D25-fail-fast-\u548C\u5B89\u5168\u5931\u8D25-fail-safe-\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#java\u5FEB\u901F\u5931\u8D25-fail-fast-\u548C\u5B89\u5168\u5931\u8D25-fail-safe-\u533A\u522B" aria-hidden="true">#</a> Java\u5FEB\u901F\u5931\u8D25\uFF08fail-fast\uFF09\u548C\u5B89\u5168\u5931\u8D25\uFF08fail-safe\uFF09\u533A\u522B</h2><h3 id="\u5FEB\u901F\u5931\u8D25-fail\u2014fast" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u5931\u8D25-fail\u2014fast" aria-hidden="true">#</a> \u5FEB\u901F\u5931\u8D25\uFF08fail\u2014fast\uFF09</h3><p>\u5728\u7528\u8FED\u4EE3\u5668\u904D\u5386\u4E00\u4E2A\u96C6\u5408\u5BF9\u8C61\u65F6\uFF0C\u5982\u679C\u904D\u5386\u8FC7\u7A0B\u4E2D\u5BF9\u96C6\u5408\u5BF9\u8C61\u7684\u5185\u5BB9\u8FDB\u884C\u4E86\u4FEE\u6539\uFF08\u589E\u52A0\u3001\u5220\u9664\u3001\u4FEE\u6539\uFF09\uFF0C\u5219\u4F1A\u629B\u51FA <code>ConcurrentModificationException</code>\u3002</p><p>\u539F\u7406\uFF1A\u8FED\u4EE3\u5668\u5728\u904D\u5386\u65F6\u76F4\u63A5\u8BBF\u95EE\u96C6\u5408\u4E2D\u7684\u5185\u5BB9\uFF0C\u5E76\u4E14\u5728\u904D\u5386\u8FC7\u7A0B\u4E2D\u4F7F\u7528\u4E00\u4E2A modCount \u53D8\u91CF\u3002\u96C6\u5408\u5728\u88AB\u904D\u5386\u671F\u95F4\u5982\u679C\u5185\u5BB9\u53D1\u751F\u53D8\u5316\uFF0C\u5C31\u4F1A\u6539\u53D8 modCount \u7684\u503C\u3002\u6BCF\u5F53\u8FED\u4EE3\u5668\u4F7F\u7528 hashNext()/next() \u904D\u5386\u4E0B\u4E00\u4E2A\u5143\u7D20\u4E4B\u524D\uFF0C\u90FD\u4F1A\u68C0\u6D4B modCount \u53D8\u91CF\u662F\u5426\u4E3A expectedmodCount \u503C\uFF0C\u662F\u7684\u8BDD\u5C31\u8FD4\u56DE\u904D\u5386\uFF1B\u5426\u5219\u629B\u51FA\u5F02\u5E38\uFF0C\u7EC8\u6B62\u904D\u5386\u3002</p><p>\u6CE8\u610F\uFF1A\u8FD9\u91CC\u5F02\u5E38\u7684\u629B\u51FA\u6761\u4EF6\u662F\u68C0\u6D4B\u5230 modCount\uFF01=expectedmodCount \u8FD9\u4E2A\u6761\u4EF6\u3002\u5982\u679C\u96C6\u5408\u53D1\u751F\u53D8\u5316\u65F6\u4FEE\u6539modCount \u503C\u521A\u597D\u53C8\u8BBE\u7F6E\u4E3A\u4E86 expectedmodCount \u503C\uFF0C\u5219\u5F02\u5E38\u4E0D\u4F1A\u629B\u51FA\u3002\u56E0\u6B64\uFF0C\u4E0D\u80FD\u4F9D\u8D56\u4E8E\u8FD9\u4E2A\u5F02\u5E38\u662F\u5426\u629B\u51FA\u800C\u8FDB\u884C\u5E76\u53D1\u64CD\u4F5C\u7684\u7F16\u7A0B\uFF0C\u8FD9\u4E2A\u5F02\u5E38\u53EA\u5EFA\u8BAE\u7528\u4E8E\u68C0\u6D4B\u5E76\u53D1\u4FEE\u6539\u7684 bug\u3002</p><p>\u573A\u666F\uFF1A<code>java.util</code> \u5305\u4E0B\u7684\u96C6\u5408\u7C7B\u90FD\u662F\u5FEB\u901F\u5931\u8D25\u7684\uFF0C\u4E0D\u80FD\u5728\u591A\u7EBF\u7A0B\u4E0B\u53D1\u751F\u5E76\u53D1\u4FEE\u6539\uFF08\u8FED\u4EE3\u8FC7\u7A0B\u4E2D\u88AB\u4FEE\u6539\uFF09\u3002</p><h3 id="\u5B89\u5168\u5931\u8D25-fail\u2014safe" tabindex="-1"><a class="header-anchor" href="#\u5B89\u5168\u5931\u8D25-fail\u2014safe" aria-hidden="true">#</a> \u5B89\u5168\u5931\u8D25\uFF08fail\u2014safe\uFF09</h3><p>\u91C7\u7528\u5B89\u5168\u5931\u8D25\u673A\u5236\u7684\u96C6\u5408\u5BB9\u5668\uFF0C\u5728\u904D\u5386\u65F6\u4E0D\u662F\u76F4\u63A5\u5728\u96C6\u5408\u5185\u5BB9\u4E0A\u8BBF\u95EE\u7684\uFF0C\u800C\u662F\u5148\u590D\u5236\u539F\u6709\u96C6\u5408\u5185\u5BB9\uFF0C\u5728\u62F7\u8D1D\u7684\u96C6\u5408\u4E0A\u8FDB\u884C\u904D\u5386\u3002</p><p>\u539F\u7406\uFF1A\u7531\u4E8E\u8FED\u4EE3\u65F6\u662F\u5BF9\u539F\u96C6\u5408\u7684\u62F7\u8D1D\u8FDB\u884C\u904D\u5386\uFF0C\u6240\u4EE5\u5728\u904D\u5386\u8FC7\u7A0B\u4E2D\u5BF9\u539F\u96C6\u5408\u6240\u4F5C\u7684\u4FEE\u6539\u5E76\u4E0D\u80FD\u88AB\u8FED\u4EE3\u5668\u68C0\u6D4B\u5230\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u89E6\u53D1 <code>Concurrent Modification Exception</code>\u3002</p><p>\u7F3A\u70B9\uFF1A\u57FA\u4E8E\u62F7\u8D1D\u5185\u5BB9\u7684\u4F18\u70B9\u662F\u907F\u514D\u4E86 <code>Concurrent Modification Exception</code>\uFF0C\u4F46\u540C\u6837\u5730\uFF0C\u8FED\u4EE3\u5668\u5E76\u4E0D\u80FD\u8BBF\u95EE\u5230\u4FEE\u6539\u540E\u7684\u5185\u5BB9\uFF0C\u5373\uFF1A\u8FED\u4EE3\u5668\u904D\u5386\u7684\u662F\u5F00\u59CB\u904D\u5386\u90A3\u4E00\u523B\u62FF\u5230\u7684\u96C6\u5408\u62F7\u8D1D\uFF0C\u5728\u904D\u5386\u671F\u95F4\u539F\u96C6\u5408\u53D1\u751F\u7684\u4FEE\u6539\u8FED\u4EE3\u5668\u662F\u4E0D\u77E5\u9053\u7684\u3002</p><p>\u573A\u666F\uFF1A<code>java.util.concurrent</code> \u5305\u4E0B\u7684\u5BB9\u5668\u90FD\u662F\u5B89\u5168\u5931\u8D25\uFF0C\u53EF\u4EE5\u5728\u591A\u7EBF\u7A0B\u4E0B\u5E76\u53D1\u4F7F\u7528\uFF0C\u5E76\u53D1\u4FEE\u6539\u3002</p><p><strong>\u5FEB\u901F\u5931\u8D25\u548C\u5B89\u5168\u5931\u8D25\u662F\u5BF9\u8FED\u4EE3\u5668\u800C\u8A00\u7684</strong>\u3002</p><p>\u5FEB\u901F\u5931\u8D25\uFF1A\u5F53\u5728\u8FED\u4EE3\u4E00\u4E2A\u96C6\u5408\u7684\u65F6\u5019\uFF0C\u5982\u679C\u6709\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0B\u5728\u4FEE\u6539\u8FD9\u4E2A\u96C6\u5408\uFF0C\u5C31\u4F1A\u629B\u51FA<code>ConcurrentModification</code>\u5F02\u5E38\uFF0C<code>java.util</code> \u4E0B\u90FD\u662F\u5FEB\u901F\u5931\u8D25\u3002</p><p>\u5B89\u5168\u5931\u8D25\uFF1A\u5728\u8FED\u4EE3\u65F6\u5019\u4F1A\u5728\u96C6\u5408\u4E8C\u5C42\u505A\u4E00\u4E2A\u62F7\u8D1D\uFF0C\u6240\u4EE5\u5728\u4FEE\u6539\u96C6\u5408\u4E0A\u5C42\u5143\u7D20\u4E0D\u4F1A\u5F71\u54CD\u4E0B\u5C42\u3002\u5728 <code>java.util.concurrent</code> \u4E0B\u90FD\u662F\u5B89\u5168\u5931\u8D25</p><h3 id="\u5982\u4F55\u907F\u514Dfail-fast" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u907F\u514Dfail-fast" aria-hidden="true">#</a> \u5982\u4F55\u907F\u514D<strong>fail-fast</strong> \uFF1F</h3><ul><li>\u5728\u5355\u7EBF\u7A0B\u7684\u904D\u5386\u8FC7\u7A0B\u4E2D\uFF0C\u5982\u679C\u8981\u8FDB\u884C remove \u64CD\u4F5C\uFF0C\u53EF\u4EE5\u8C03\u7528\u8FED\u4EE3\u5668 ListIterator \u7684 remove \u65B9\u6CD5\u800C\u4E0D\u662F\u96C6\u5408\u7C7B\u7684 remove\u65B9\u6CD5\u3002\u770B\u770B ArrayList \u4E2D\u8FED\u4EE3\u5668\u7684 remove \u65B9\u6CD5\u7684\u6E90\u7801\uFF0C\u8BE5\u65B9\u6CD5\u4E0D\u80FD\u6307\u5B9A\u5143\u7D20\u5220\u9664\uFF0C\u53EA\u80FD remove \u5F53\u524D\u904D\u5386\u5143\u7D20\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lastRet <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">SubList</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>lastRet<span class="token punctuation">)</span><span class="token punctuation">;</span>
        cursor <span class="token operator">=</span> lastRet<span class="token punctuation">;</span>
        lastRet <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        expectedModCount <span class="token operator">=</span> <span class="token class-name">ArrayList</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>modCount<span class="token punctuation">;</span>  <span class="token comment">//</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IndexOutOfBoundsException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4F7F\u7528\u5E76\u53D1\u5305(<code>java.util.concurrent</code>)\u4E2D\u7684\u7C7B\u6765\u4EE3\u66FF ArrayList \u548C hashMap <ul><li>CopyOnWriterArrayList \u4EE3\u66FF ArrayList</li><li>ConcurrentHashMap \u4EE3\u66FF HashMap</li></ul></li></ul><h2 id="iterator-\u548C-enumeration-\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#iterator-\u548C-enumeration-\u533A\u522B" aria-hidden="true">#</a> Iterator \u548C Enumeration \u533A\u522B</h2><p>\u5728 Java \u96C6\u5408\u4E2D\uFF0C\u6211\u4EEC\u901A\u5E38\u90FD\u901A\u8FC7 \u201CIterator(\u8FED\u4EE3\u5668)\u201D \u6216 \u201CEnumeration(\u679A\u4E3E\u7C7B)\u201D \u53BB\u904D\u5386\u96C6\u5408\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Enumeration</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> <span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">E</span> <span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">E</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>\u51FD\u6570\u63A5\u53E3\u4E0D\u540C</strong>\uFF0CEnumeration**\u53EA\u67092\u4E2A\u51FD\u6570\u63A5\u53E3\u3002<strong>\u901A\u8FC7Enumeration\uFF0C\u6211\u4EEC\u53EA\u80FD\u8BFB\u53D6\u96C6\u5408\u7684\u6570\u636E\uFF0C\u800C\u4E0D\u80FD\u5BF9\u6570\u636E\u8FDB\u884C\u4FEE\u6539\u3002Iterator</strong>\u53EA\u67093\u4E2A\u51FD\u6570\u63A5\u53E3\u3002**Iterator\u9664\u4E86\u80FD\u8BFB\u53D6\u96C6\u5408\u7684\u6570\u636E\u4E4B\u5916\uFF0C\u4E5F\u80FD\u6570\u636E\u8FDB\u884C\u5220\u9664\u64CD\u4F5C\u3002</li><li><strong>Iterator\u652F\u6301 fail-fast\u673A\u5236\uFF0C\u800CEnumeration\u4E0D\u652F\u6301</strong>\u3002Enumeration \u662F JDK 1.0 \u6DFB\u52A0\u7684\u63A5\u53E3\u3002\u4F7F\u7528\u5230\u5B83\u7684\u51FD\u6570\u5305\u62EC Vector\u3001Hashtable \u7B49\u7C7B\uFF0C\u8FD9\u4E9B\u7C7B\u90FD\u662F JDK 1.0\u4E2D\u52A0\u5165\u7684\uFF0CEnumeration \u5B58\u5728\u7684\u76EE\u7684\u5C31\u662F\u4E3A\u5B83\u4EEC\u63D0\u4F9B\u904D\u5386\u63A5\u53E3\u3002Enumeration \u672C\u8EAB\u5E76\u6CA1\u6709\u652F\u6301\u540C\u6B65\uFF0C\u800C\u5728 Vector\u3001Hashtable \u5B9E\u73B0 Enumeration \u65F6\uFF0C\u6DFB\u52A0\u4E86\u540C\u6B65\u3002 \u800C Iterator \u662F JDK 1.2 \u624D\u6DFB\u52A0\u7684\u63A5\u53E3\uFF0C\u5B83\u4E5F\u662F\u4E3A\u4E86 HashMap\u3001ArrayList \u7B49\u96C6\u5408\u63D0\u4F9B\u904D\u5386\u63A5\u53E3\u3002Iterator \u662F\u652F\u6301 fail-fast \u673A\u5236\u7684\uFF1A\u5F53\u591A\u4E2A\u7EBF\u7A0B\u5BF9\u540C\u4E00\u4E2A\u96C6\u5408\u7684\u5185\u5BB9\u8FDB\u884C\u64CD\u4F5C\u65F6\uFF0C\u5C31\u53EF\u80FD\u4F1A\u4EA7\u751F fail-fast \u4E8B\u4EF6</li></ul><h3 id="collection-\u548C-collections-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#collection-\u548C-collections-\u7684\u533A\u522B" aria-hidden="true">#</a> Collection \u548C Collections \u7684\u533A\u522B</h3><ul><li><p>Collection \u662F\u96C6\u5408\u7C7B\u7684\u4E0A\u7EA7\u63A5\u53E3, \u7EE7\u627F\u4E0E\u5B83\u7684\u63A5\u53E3\u4E3B\u8981\u662F set \u548C list\u3002</p></li><li><p>Collections \u7C7B\u662F\u9488\u5BF9\u96C6\u5408\u7C7B\u7684\u4E00\u4E2A\u5E2E\u52A9\u7C7B. \u5B83\u63D0\u4F9B\u4E00\u7CFB\u5217\u7684\u9759\u6001\u65B9\u6CD5\u5BF9\u5404\u79CD\u96C6\u5408\u7684\u641C\u7D22\uFF0C \u6392\u5E8F\uFF0C\u7EBF\u7A0B\u5B89\u5168\u5316\u7B49\u64CD\u4F5C\u3002</p></li></ul><h2 id="comparable-\u548C-comparator-\u63A5\u53E3\u6709\u4F55\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#comparable-\u548C-comparator-\u63A5\u53E3\u6709\u4F55\u533A\u522B" aria-hidden="true">#</a> Comparable \u548C Comparator \u63A5\u53E3\u6709\u4F55\u533A\u522B\uFF1F</h2><p>Java \u4E2D\u5BF9\u96C6\u5408\u5BF9\u8C61\u6216\u8005\u6570\u7EC4\u5BF9\u8C61\u6392\u5E8F\uFF0C\u6709\u4E24\u79CD\u5B9E\u73B0\u65B9\u5F0F\uFF1A</p><ul><li><p>\u5BF9\u8C61\u5B9E\u73B0 Comparable \u63A5\u53E3</p><ul><li><p>Comparable \u5728 <code>java.lang</code> \u5305\u4E0B\uFF0C\u662F\u4E00\u4E2A\u63A5\u53E3\uFF0C\u5185\u90E8\u53EA\u6709\u4E00\u4E2A\u65B9\u6CD5 <code>compareTo()</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">T</span> o<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Comparable \u53EF\u4EE5\u8BA9\u5B9E\u73B0\u5B83\u7684\u7C7B\u7684\u5BF9\u8C61\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5177\u4F53\u7684\u6BD4\u8F83\u89C4\u5219\u662F\u6309\u7167 compareTo \u65B9\u6CD5\u4E2D\u7684\u89C4\u5219\u8FDB\u884C\u3002\u8FD9\u79CD\u987A\u5E8F\u79F0\u4E3A <strong>\u81EA\u7136\u987A\u5E8F</strong>\u3002</p></li><li><p>\u5B9E\u73B0\u4E86 Comparable \u63A5\u53E3\u7684 List \u6216\u5219\u6570\u7EC4\u53EF\u4EE5\u4F7F\u7528 <code>Collections.sort()</code> \u6216\u8005 <code>Arrays.sort()</code> \u65B9\u6CD5\u8FDB\u884C\u6392\u5E8F</p></li></ul></li><li><p>\u5B9A\u4E49\u6BD4\u8F83\u5668\uFF0C\u5B9E\u73B0 Comparator\u63A5\u53E3</p><ul><li><p>Comparator \u5728 <code>java.util</code> \u5305\u4E0B\uFF0C\u4E5F\u662F\u4E00\u4E2A\u63A5\u53E3\uFF0CJDK 1.8 \u4EE5\u524D\u53EA\u6709\u4E24\u4E2A\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">T</span> lhs<span class="token punctuation">,</span> <span class="token class-name">T</span> rhs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><p><strong>comparable \u76F8\u5F53\u4E8E\u5185\u90E8\u6BD4\u8F83\u5668\u3002comparator \u76F8\u5F53\u4E8E\u5916\u90E8\u6BD4\u8F83\u5668</strong></p><p>\u533A\u522B\uFF1A</p><ul><li><p>Comparator \u4F4D\u4E8E <code>java.util</code> \u5305\u4E0B\uFF0C\u800C Comparable \u4F4D\u4E8E <code>java.lang</code> \u5305\u4E0B</p></li><li><p>Comparable \u63A5\u53E3\u7684\u5B9E\u73B0\u662F\u5728\u7C7B\u7684\u5185\u90E8\uFF08\u5982 String\u3001Integer\u5DF2\u7ECF\u5B9E\u73B0\u4E86 Comparable \u63A5\u53E3\uFF0C\u81EA\u5DF1\u5C31\u53EF\u4EE5\u5B8C\u6210\u6BD4\u8F83\u5927\u5C0F\u64CD\u4F5C\uFF09\uFF0CComparator \u63A5\u53E3\u7684\u5B9E\u73B0\u662F\u5728\u7C7B\u7684\u5916\u90E8\uFF08\u53EF\u4EE5\u7406\u89E3\u4E3A\u4E00\u4E2A\u662F\u81EA\u5DF2\u5B8C\u6210\u6BD4\u8F83\uFF0C\u4E00\u4E2A\u662F\u5916\u90E8\u7A0B\u5E8F\u5B9E\u73B0\u6BD4\u8F83\uFF09</p></li><li><p>\u5B9E\u73B0 Comparable \u63A5\u53E3\u8981\u91CD\u5199 compareTo \u65B9\u6CD5, \u5728 compareTo \u65B9\u6CD5\u91CC\u9762\u5B9E\u73B0\u6BD4\u8F83\u3002\u4E00\u4E2A\u5DF2\u7ECF\u5B9E\u73B0Comparable \u7684\u7C7B\u7684\u5BF9\u8C61\u6216\u6570\u636E\uFF0C\u53EF\u4EE5\u901A\u8FC7 **Collections.sort(list) \u6216\u8005 Arrays.sort(arr)**\u5B9E\u73B0\u6392\u5E8F\u3002\u901A\u8FC7 <strong>Collections.sort(list,Collections.reverseOrder())</strong> \u5BF9list\u8FDB\u884C\u5012\u5E8F\u6392\u5217\u3002</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdzefrcjolj30ui0u0dm0.jpg" alt="" loading="lazy"></p></li><li><p>\u5B9E\u73B0Comparator\u9700\u8981\u91CD\u5199 compare \u65B9\u6CD5</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdzefws30uj311s0t643v.jpg" alt="" loading="lazy"></p></li></ul><h2 id="hashset" tabindex="-1"><a class="header-anchor" href="#hashset" aria-hidden="true">#</a> HashSet</h2><p>HashSet \u662F\u7528\u6765\u5B58\u50A8\u6CA1\u6709\u91CD\u590D\u5143\u7D20\u7684\u96C6\u5408\u7C7B\uFF0C\u5E76\u4E14\u5B83\u662F\u65E0\u5E8F\u7684\u3002HashSet \u5185\u90E8\u5B9E\u73B0\u662F\u57FA\u4E8E HashMap \uFF0C\u5B9E\u73B0\u4E86 Set \u63A5\u53E3\u3002</p><p>\u4ECE HahSet \u63D0\u4F9B\u7684\u6784\u9020\u5668\u53EF\u4EE5\u770B\u51FA\uFF0C\u9664\u4E86\u6700\u540E\u4E00\u4E2A HashSet \u7684\u6784\u9020\u65B9\u6CD5\u5916\uFF0C\u5176\u4ED6\u6240\u6709\u5185\u90E8\u5C31\u662F\u53BB\u521B\u5EFA\u4E00\u4E2A HashMap \u3002\u6CA1\u6709\u5176\u4ED6\u7684\u64CD\u4F5C\u3002\u800C\u6700\u540E\u4E00\u4E2A\u6784\u9020\u65B9\u6CD5\u4E0D\u662F public \u7684\uFF0C\u6240\u4EE5\u4E0D\u5BF9\u5916\u516C\u5F00\u3002</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdzeqxhvj3j311s0ka787.jpg" alt="" loading="lazy"></p><h3 id="hashset\u5982\u4F55\u68C0\u67E5\u91CD\u590D" tabindex="-1"><a class="header-anchor" href="#hashset\u5982\u4F55\u68C0\u67E5\u91CD\u590D" aria-hidden="true">#</a> HashSet\u5982\u4F55\u68C0\u67E5\u91CD\u590D</h3><p>HashSet \u7684\u5E95\u5C42\u5176\u5B9E\u5C31\u662F HashMap\uFF0C\u53EA\u4E0D\u8FC7\u6211\u4EEC <strong>HashSet \u662F\u5B9E\u73B0\u4E86 Set \u63A5\u53E3\u5E76\u4E14\u628A\u6570\u636E\u4F5C\u4E3A K \u503C\uFF0C\u800C V \u503C\u4E00\u76F4\u4F7F\u7528\u4E00\u4E2A\u76F8\u540C\u7684\u865A\u503C\u6765\u4FDD\u5B58</strong>\uFF0CHashMap\u7684 K \u503C\u672C\u8EAB\u5C31\u4E0D\u5141\u8BB8\u91CD\u590D\uFF0C\u5E76\u4E14\u5728 HashMap \u4E2D\u5982\u679C K/V \u76F8\u540C\u65F6\uFF0C\u4F1A\u7528\u65B0\u7684 V \u8986\u76D6\u6389\u65E7\u7684 V\uFF0C\u7136\u540E\u8FD4\u56DE\u65E7\u7684 V\u3002</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdzeyvg5h0j311s0jen0n.jpg" alt="" loading="lazy"></p><h3 id="iterater-\u548C-listiterator-\u4E4B\u95F4\u6709\u4EC0\u4E48\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#iterater-\u548C-listiterator-\u4E4B\u95F4\u6709\u4EC0\u4E48\u533A\u522B" aria-hidden="true">#</a> Iterater \u548C ListIterator \u4E4B\u95F4\u6709\u4EC0\u4E48\u533A\u522B\uFF1F</h3><ul><li>\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 Iterator\u6765\u904D\u5386 Set \u548C List \u96C6\u5408\uFF0C\u800C ListIterator \u53EA\u80FD\u904D\u5386List</li><li>ListIterator\u6709add\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u5411List\u4E2D\u6DFB\u52A0\u5BF9\u8C61\uFF0C\u800CIterator\u4E0D\u80FD</li><li>ListIterator\u548CIterator\u90FD\u6709hasNext()\u548Cnext()\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u987A\u5E8F\u5411\u540E\u904D\u5386\uFF0C\u4F46\u662FListIterator\u6709hasPrevious()\u548Cprevious()\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u9006\u5411\uFF08\u987A\u5E8F\u5411\u524D\uFF09\u904D\u5386\u3002Iterator\u4E0D\u53EF\u4EE5</li><li>ListIterator\u53EF\u4EE5\u5B9A\u4F4D\u5F53\u524D\u7D22\u5F15\u7684\u4F4D\u7F6E\uFF0CnextIndex()\u548CpreviousIndex()\u53EF\u4EE5\u5B9E\u73B0\u3002Iterator\u6CA1\u6709\u6B64\u529F\u80FD</li><li>\u90FD\u53EF\u5B9E\u73B0\u5220\u9664\u64CD\u4F5C\uFF0C\u4F46\u662F ListIterator\u53EF\u4EE5\u5B9E\u73B0\u5BF9\u8C61\u7684\u4FEE\u6539\uFF0Cset()\u65B9\u6CD5\u53EF\u4EE5\u5B9E\u73B0\u3002Iterator\u4EC5\u80FD\u904D\u5386\uFF0C\u4E0D\u80FD\u4FEE\u6539</li></ul><img src="https://static01.imgkr.com/temp/ef920406f7274d06a9b203b6b03e3171.png" style="zoom:50%;"><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2><p>\u6240\u6709\u5185\u5BB9\u90FD\u662F\u57FA\u4E8E\u6E90\u7801\u9605\u8BFB\u548C\u5404\u79CD\u5927\u4F6C\u4E4B\u524D\u603B\u7ED3\u7684\u77E5\u8BC6\u6574\u7406\u800C\u6765\uFF0C\u8F93\u5165\u5E76\u8F93\u51FA\uFF0C\u5965\u5229\u7ED9\u3002</p>`,88),A={href:"https://www.javatpoint.com/java-arraylist",target:"_blank",rel:"noopener noreferrer"},T=s("https://www.javatpoint.com/java-arraylist"),j={href:"https://www.runoob.com/java/java-collections.html",target:"_blank",rel:"noopener noreferrer"},H=s("https://www.runoob.com/java/java-collections.html"),M={href:"https://www.javazhiyin.com/21717.html",target:"_blank",rel:"noopener noreferrer"},_=s("https://www.javazhiyin.com/21717.html"),L={href:"https://yuqirong.me/2018/01/31/LinkedList%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/",target:"_blank",rel:"noopener noreferrer"},I=s("https://yuqirong.me/2018/01/31/LinkedList\u5185\u90E8\u539F\u7406\u89E3\u6790/"),N={href:"https://youzhixueyuan.com/the-underlying-structure-and-principle-of-hashmap.html",target:"_blank",rel:"noopener noreferrer"},V=s("https://youzhixueyuan.com/the-underlying-structure-and-principle-of-hashmap.html"),S=s("\u300AHashMap\u6E90\u7801\u8BE6\u7EC6\u5206\u6790\u300B"),K={href:"http://www.tianxiaobo.com/2018/01/18/HashMap-%E6%BA%90%E7%A0%81%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90-JDK1-8/",target:"_blank",rel:"noopener noreferrer"},D=s("http://www.tianxiaobo.com/2018/01/18/HashMap-\u6E90\u7801\u8BE6\u7EC6\u5206\u6790-JDK1-8/"),F=s("\u300AConcurrentHashMap1.7\u6E90\u7801\u5206\u6790\u300B"),z={href:"https://www.cnblogs.com/chengxiao/p/6842045.html",target:"_blank",rel:"noopener noreferrer"},R=s("https://www.cnblogs.com/chengxiao/p/6842045.html"),O={href:"http://www.justdojava.com/2019/12/18/java-collection-15.1/",target:"_blank",rel:"noopener noreferrer"},q=s("http://www.justdojava.com/2019/12/18/java-collection-15.1/");function B(U,Y){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,k,r,d,m,n("p",null,[v,n("a",b,[h,p(a)])]),y,n("p",null,[w,g,f,n("a",x,[C,p(a)])]),E,n("ul",null,[n("li",null,[n("p",null,[n("a",A,[T,p(a)])])]),n("li",null,[n("p",null,[n("a",j,[H,p(a)])])]),n("li",null,[n("p",null,[n("a",M,[_,p(a)])])]),n("li",null,[n("p",null,[n("a",L,[I,p(a)])])]),n("li",null,[n("p",null,[n("a",N,[V,p(a)])])]),n("li",null,[n("p",null,[S,n("a",K,[D,p(a)])])]),n("li",null,[n("p",null,[F,n("a",z,[R,p(a)])])]),n("li",null,[n("p",null,[n("a",O,[q,p(a)])])])])])}var X=e(i,[["render",B],["__file","Collections-FAQ.html.vue"]]);export{X as default};
