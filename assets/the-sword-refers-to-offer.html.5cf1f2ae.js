import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as o,b as s,a as c,e as a,d as n,r as l}from"./app.3d6e11ca.js";const i={},u=a(`<h2 id="\u6590\u6CE2\u90A3\u5951\u6570\u5217" tabindex="-1"><a class="header-anchor" href="#\u6590\u6CE2\u90A3\u5951\u6570\u5217" aria-hidden="true">#</a> \u6590\u6CE2\u90A3\u5951\u6570\u5217</h2><p><strong>\u9898\u76EE\u63CF\u8FF0\uFF1A</strong></p><p>\u5927\u5BB6\u90FD\u77E5\u9053\u6590\u6CE2\u90A3\u5951\u6570\u5217\uFF0C\u73B0\u5728\u8981\u6C42\u8F93\u5165\u4E00\u4E2A\u6574\u6570n\uFF0C\u8BF7\u4F60\u8F93\u51FA\u6590\u6CE2\u90A3\u5951\u6570\u5217\u7684\u7B2Cn\u9879\u3002 n&lt;=39</p><p><strong>\u95EE\u9898\u5206\u6790\uFF1A</strong></p><p>\u53EF\u4EE5\u80AF\u5B9A\u7684\u662F\u8FD9\u4E00\u9898\u901A\u8FC7\u9012\u5F52\u7684\u65B9\u5F0F\u662F\u80AF\u5B9A\u80FD\u505A\u51FA\u6765\uFF0C\u4F46\u662F\u8FD9\u6837\u4F1A\u6709\u4E00\u4E2A\u5F88\u5927\u7684\u95EE\u9898\uFF0C\u90A3\u5C31\u662F\u9012\u5F52\u5927\u91CF\u7684\u91CD\u590D\u8BA1\u7B97\u4F1A\u5BFC\u81F4\u5185\u5B58\u6EA2\u51FA\u3002\u53E6\u5916\u53EF\u4EE5\u4F7F\u7528\u8FED\u4EE3\u6CD5\uFF0C\u7528fn1\u548Cfn2\u4FDD\u5B58\u8BA1\u7B97\u8FC7\u7A0B\u4E2D\u7684\u7ED3\u679C\uFF0C\u5E76\u590D\u7528\u8D77\u6765\u3002\u4E0B\u9762\u6211\u4F1A\u628A\u4E24\u4E2A\u65B9\u6CD5\u793A\u4F8B\u4EE3\u7801\u90FD\u7ED9\u51FA\u6765\u5E76\u7ED9\u51FA\u4E24\u4E2A\u65B9\u6CD5\u7684\u8FD0\u884C\u65F6\u95F4\u5BF9\u6BD4\u3002</p><p><strong>\u793A\u4F8B\u4EE3\u7801\uFF1A</strong></p><p>\u91C7\u7528\u8FED\u4EE3\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> <span class="token class-name">Fibonacci</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> number <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> first <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> second <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> third <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> number<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        third <span class="token operator">=</span> first <span class="token operator">+</span> second<span class="token punctuation">;</span>
        first <span class="token operator">=</span> second<span class="token punctuation">;</span>
        second <span class="token operator">=</span> third<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> third<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91C7\u7528\u9012\u5F52\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">Fibonacci</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span><span class="token operator">||</span>n<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token class-name">Fibonacci</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Fibonacci</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8DF3\u53F0\u9636\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u8DF3\u53F0\u9636\u95EE\u9898" aria-hidden="true">#</a> \u8DF3\u53F0\u9636\u95EE\u9898</h2><p><strong>\u9898\u76EE\u63CF\u8FF0\uFF1A</strong></p><p>\u4E00\u53EA\u9752\u86D9\u4E00\u6B21\u53EF\u4EE5\u8DF3\u4E0A1\u7EA7\u53F0\u9636\uFF0C\u4E5F\u53EF\u4EE5\u8DF3\u4E0A2\u7EA7\u3002\u6C42\u8BE5\u9752\u86D9\u8DF3\u4E0A\u4E00\u4E2An\u7EA7\u7684\u53F0\u9636\u603B\u5171\u6709\u591A\u5C11\u79CD\u8DF3\u6CD5\u3002</p><p><strong>\u95EE\u9898\u5206\u6790\uFF1A</strong></p><p>\u6B63\u5E38\u5206\u6790\u6CD5\uFF1A</p><blockquote><p>a.\u5982\u679C\u4E24\u79CD\u8DF3\u6CD5\uFF0C1\u9636\u6216\u80052\u9636\uFF0C\u90A3\u4E48\u5047\u5B9A\u7B2C\u4E00\u6B21\u8DF3\u7684\u662F\u4E00\u9636\uFF0C\u90A3\u4E48\u5269\u4E0B\u7684\u662Fn-1\u4E2A\u53F0\u9636\uFF0C\u8DF3\u6CD5\u662Ff(n-1); b.\u5047\u5B9A\u7B2C\u4E00\u6B21\u8DF3\u7684\u662F2\u9636\uFF0C\u90A3\u4E48\u5269\u4E0B\u7684\u662Fn-2\u4E2A\u53F0\u9636\uFF0C\u8DF3\u6CD5\u662Ff(n-2) c.\u7531a\uFF0Cb\u5047\u8BBE\u53EF\u4EE5\u5F97\u51FA\u603B\u8DF3\u6CD5\u4E3A: f(n) = f(n-1) + f(n-2) d.\u7136\u540E\u901A\u8FC7\u5B9E\u9645\u7684\u60C5\u51B5\u53EF\u4EE5\u5F97\u51FA\uFF1A\u53EA\u6709\u4E00\u9636\u7684\u65F6\u5019 f(1) = 1 ,\u53EA\u6709\u4E24\u9636\u7684\u65F6\u5019\u53EF\u4EE5\u6709 f(2) = 2</p></blockquote><p>\u627E\u89C4\u5F8B\u5206\u6790\u6CD5\uFF1A</p><blockquote><p>f(1) = 1, f(2) = 2, f(3) = 3, f(4) = 5\uFF0C \u53EF\u4EE5\u603B\u7ED3\u51FAf(n) = f(n-1) + f(n-2)\u7684\u89C4\u5F8B\u3002\u4F46\u662F\u4E3A\u4EC0\u4E48\u4F1A\u51FA\u73B0\u8FD9\u6837\u7684\u89C4\u5F8B\u5462\uFF1F\u5047\u8BBE\u73B0\u57286\u4E2A\u53F0\u9636\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4ECE\u7B2C5\u8DF3\u4E00\u6B65\u52306\uFF0C\u8FD9\u6837\u7684\u8BDD\u6709\u591A\u5C11\u79CD\u65B9\u6848\u8DF3\u52305\u5C31\u6709\u591A\u5C11\u79CD\u65B9\u6848\u8DF3\u52306\uFF0C\u53E6\u5916\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4ECE4\u8DF3\u4E24\u6B65\u8DF3\u52306\uFF0C\u8DF3\u52304\u6709\u591A\u5C11\u79CD\u65B9\u6848\u7684\u8BDD\uFF0C\u5C31\u6709\u591A\u5C11\u79CD\u65B9\u6848\u8DF3\u52306\uFF0C\u5176\u4ED6\u7684\u4E0D\u80FD\u4ECE3\u8DF3\u52306\u4EC0\u4E48\u7684\u5566\uFF0C\u6240\u4EE5\u6700\u540E\u5C31\u662Ff(6) = f(5) + f(4)\uFF1B\u8FD9\u6837\u5B50\u4E5F\u5F88\u597D\u7406\u89E3\u53D8\u6001\u8DF3\u53F0\u9636\u7684\u95EE\u9898\u4E86\u3002</p></blockquote><p><strong>\u6240\u4EE5\u8FD9\u9053\u9898\u5176\u5B9E\u5C31\u662F\u6590\u6CE2\u90A3\u5951\u6570\u5217\u7684\u95EE\u9898\u3002</strong></p><p>\u4EE3\u7801\u53EA\u9700\u8981\u5728\u4E0A\u4E00\u9898\u7684\u4EE3\u7801\u7A0D\u505A\u4FEE\u6539\u5373\u53EF\u3002\u548C\u4E0A\u4E00\u9898\u552F\u4E00\u4E0D\u540C\u7684\u5C31\u662F\u8FD9\u4E00\u9898\u7684\u521D\u59CB\u5143\u7D20\u53D8\u4E3A 1 2 3 5 8.....\u800C\u4E0A\u4E00\u9898\u4E3A1 1 2 3 5 .......\u3002\u53E6\u5916\u8FD9\u4E00\u9898\u4E5F\u53EF\u4EE5\u7528\u9012\u5F52\u505A\uFF0C\u4F46\u662F\u9012\u5F52\u6548\u7387\u592A\u4F4E\uFF0C\u6240\u4EE5\u6211\u8FD9\u91CC\u53EA\u7ED9\u51FA\u4E86\u8FED\u4EE3\u65B9\u5F0F\u7684\u4EE3\u7801\u3002</p><p><strong>\u793A\u4F8B\u4EE3\u7801\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> <span class="token function">jumpFloor</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> first <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> second <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> third <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> number<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        third <span class="token operator">=</span> first <span class="token operator">+</span> second<span class="token punctuation">;</span>
        first <span class="token operator">=</span> second<span class="token punctuation">;</span>
        second <span class="token operator">=</span> third<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> third<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53D8\u6001\u8DF3\u53F0\u9636\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u53D8\u6001\u8DF3\u53F0\u9636\u95EE\u9898" aria-hidden="true">#</a> \u53D8\u6001\u8DF3\u53F0\u9636\u95EE\u9898</h2><p><strong>\u9898\u76EE\u63CF\u8FF0\uFF1A</strong></p><p>\u4E00\u53EA\u9752\u86D9\u4E00\u6B21\u53EF\u4EE5\u8DF3\u4E0A1\u7EA7\u53F0\u9636\uFF0C\u4E5F\u53EF\u4EE5\u8DF3\u4E0A2\u7EA7\u2026\u2026\u5B83\u4E5F\u53EF\u4EE5\u8DF3\u4E0An\u7EA7\u3002\u6C42\u8BE5\u9752\u86D9\u8DF3\u4E0A\u4E00\u4E2An\u7EA7\u7684\u53F0\u9636\u603B\u5171\u6709\u591A\u5C11\u79CD\u8DF3\u6CD5\u3002</p><p><strong>\u95EE\u9898\u5206\u6790\uFF1A</strong></p><p>\u5047\u8BBEn&gt;=2\uFF0C\u7B2C\u4E00\u6B65\u6709n\u79CD\u8DF3\u6CD5\uFF1A\u8DF31\u7EA7\u3001\u8DF32\u7EA7\u3001\u5230\u8DF3n\u7EA7 \u8DF31\u7EA7\uFF0C\u5269\u4E0Bn-1\u7EA7\uFF0C\u5219\u5269\u4E0B\u8DF3\u6CD5\u662Ff(n-1) \u8DF32\u7EA7\uFF0C\u5269\u4E0Bn-2\u7EA7\uFF0C\u5219\u5269\u4E0B\u8DF3\u6CD5\u662Ff(n-2) ...... \u8DF3n-1\u7EA7\uFF0C\u5269\u4E0B1\u7EA7\uFF0C\u5219\u5269\u4E0B\u8DF3\u6CD5\u662Ff(1) \u8DF3n\u7EA7\uFF0C\u5269\u4E0B0\u7EA7\uFF0C\u5219\u5269\u4E0B\u8DF3\u6CD5\u662Ff(0) \u6240\u4EE5\u5728n&gt;=2\u7684\u60C5\u51B5\u4E0B\uFF1A f(n)=f(n-1)+f(n-2)+...+f(1) \u56E0\u4E3Af(n-1)=f(n-2)+f(n-3)+...+f(1) \u6240\u4EE5f(n)=2*f(n-1) \u53C8f(1)=1,\u6240\u4EE5\u53EF\u5F97<strong>f(n)=2^(number-1)</strong></p><p><strong>\u793A\u4F8B\u4EE3\u7801\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> <span class="token class-name">JumpFloorII</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">--</span>number<span class="token punctuation">;</span><span class="token comment">//2^(number-1)\u7528\u4F4D\u79FB\u64CD\u4F5C\u8FDB\u884C\uFF0C\u66F4\u5FEB</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8865\u5145\uFF1A</strong></p><p>java\u4E2D\u6709\u4E09\u79CD\u79FB\u4F4D\u8FD0\u7B97\u7B26\uFF1A</p><ol><li>\u201C&lt;&lt;\u201D : <strong>\u5DE6\u79FB\u8FD0\u7B97\u7B26</strong>\uFF0C\u7B49\u540C\u4E8E\u4E582\u7684n\u6B21\u65B9</li><li>\u201C&gt;&gt;\u201D: <strong>\u53F3\u79FB\u8FD0\u7B97\u7B26</strong>\uFF0C\u7B49\u540C\u4E8E\u96642\u7684n\u6B21\u65B9</li><li>\u201C&gt;&gt;&gt;\u201D : <strong>\u65E0\u7B26\u53F7\u53F3\u79FB\u8FD0\u7B97\u7B26</strong>\uFF0C\u4E0D\u7BA1\u79FB\u52A8\u524D\u6700\u9AD8\u4F4D\u662F0\u8FD8\u662F1\uFF0C\u53F3\u79FB\u540E\u5DE6\u4FA7\u4EA7\u751F\u7684\u7A7A\u4F4D\u90E8\u5206\u90FD\u4EE50\u6765\u586B\u5145\u3002\u4E0E&gt;&gt;\u7C7B\u4F3C\u3002</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> b <span class="token operator">=</span> a <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//\u5DE6\u79FB2\uFF0C\u7B49\u540C\u4E8E16 * 2\u76842\u6B21\u65B9\uFF0C\u4E5F\u5C31\u662F16 * 4</span>
<span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//\u53F3\u79FB2\uFF0C\u7B49\u540C\u4E8E16 / 2\u76842\u6B21\u65B9\uFF0C\u4E5F\u5C31\u662F16 / 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8C\u7EF4\u6570\u7EC4\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u7EF4\u6570\u7EC4\u67E5\u627E" aria-hidden="true">#</a> \u4E8C\u7EF4\u6570\u7EC4\u67E5\u627E</h2><p><strong>\u9898\u76EE\u63CF\u8FF0\uFF1A</strong></p><p>\u5728\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4\u4E2D\uFF0C\u6BCF\u4E00\u884C\u90FD\u6309\u7167\u4ECE\u5DE6\u5230\u53F3\u9012\u589E\u7684\u987A\u5E8F\u6392\u5E8F\uFF0C\u6BCF\u4E00\u5217\u90FD\u6309\u7167\u4ECE\u4E0A\u5230\u4E0B\u9012\u589E\u7684\u987A\u5E8F\u6392\u5E8F\u3002\u8BF7\u5B8C\u6210\u4E00\u4E2A\u51FD\u6570\uFF0C\u8F93\u5165\u8FD9\u6837\u7684\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4\u548C\u4E00\u4E2A\u6574\u6570\uFF0C\u5224\u65AD\u6570\u7EC4\u4E2D\u662F\u5426\u542B\u6709\u8BE5\u6574\u6570\u3002</p><p><strong>\u95EE\u9898\u89E3\u6790\uFF1A</strong></p><p>\u8FD9\u4E00\u9053\u9898\u8FD8\u662F\u6BD4\u8F83\u7B80\u5355\u7684\uFF0C\u6211\u4EEC\u9700\u8981\u8003\u8651\u7684\u662F\u5982\u4F55\u505A\uFF0C\u6548\u7387\u6700\u5FEB\u3002\u8FD9\u91CC\u6709\u4E00\u79CD\u5F88\u597D\u7406\u89E3\u7684\u601D\u8DEF\uFF1A</p><blockquote><p>\u77E9\u9635\u662F\u6709\u5E8F\u7684\uFF0C\u4ECE\u5DE6\u4E0B\u89D2\u6765\u770B\uFF0C\u5411\u4E0A\u6570\u5B57\u9012\u51CF\uFF0C\u5411\u53F3\u6570\u5B57\u9012\u589E\uFF0C \u56E0\u6B64\u4ECE\u5DE6\u4E0B\u89D2\u5F00\u59CB\u67E5\u627E\uFF0C\u5F53\u8981\u67E5\u627E\u6570\u5B57\u6BD4\u5DE6\u4E0B\u89D2\u6570\u5B57\u5927\u65F6\u3002\u53F3\u79FB \u8981\u67E5\u627E\u6570\u5B57\u6BD4\u5DE6\u4E0B\u89D2\u6570\u5B57\u5C0F\u65F6\uFF0C\u4E0A\u79FB\u3002\u8FD9\u6837\u627E\u7684\u901F\u5EA6\u6700\u5FEB\u3002</p></blockquote><p><strong>\u793A\u4F8B\u4EE3\u7801\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token class-name">Find</span><span class="token punctuation">(</span><span class="token keyword">int</span> target<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u57FA\u672C\u601D\u8DEF\u4ECE\u5DE6\u4E0B\u89D2\u5F00\u59CB\u627E\uFF0C\u8FD9\u6837\u901F\u5EA6\u6700\u5FEB</span>
    <span class="token keyword">int</span> row <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//\u884C</span>
    <span class="token keyword">int</span> column <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//\u5217</span>
    <span class="token comment">//\u5F53\u884C\u6570\u5927\u4E8E0\uFF0C\u5F53\u524D\u5217\u6570\u5C0F\u4E8E\u603B\u5217\u6570\u65F6\u5FAA\u73AF\u6761\u4EF6\u6210\u7ACB</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>row <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>column<span class="token operator">&lt;</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>column<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
            row<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>column<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
            column<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u66FF\u6362\u7A7A\u683C" tabindex="-1"><a class="header-anchor" href="#\u66FF\u6362\u7A7A\u683C" aria-hidden="true">#</a> \u66FF\u6362\u7A7A\u683C</h2><p><strong>\u9898\u76EE\u63CF\u8FF0\uFF1A</strong></p><p>\u8BF7\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\uFF0C\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u4E2D\u7684\u7A7A\u683C\u66FF\u6362\u6210\u201C%20\u201D\u3002\u4F8B\u5982\uFF0C\u5F53\u5B57\u7B26\u4E32\u4E3AWe Are Happy.\u5219\u7ECF\u8FC7\u66FF\u6362\u4E4B\u540E\u7684\u5B57\u7B26\u4E32\u4E3AWe%20Are%20Happy\u3002</p><p><strong>\u95EE\u9898\u5206\u6790\uFF1A</strong></p><p>\u8FD9\u9053\u9898\u4E0D\u96BE\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u5FAA\u73AF\u5224\u65AD\u5B57\u7B26\u4E32\u7684\u5B57\u7B26\u662F\u5426\u4E3A\u7A7A\u683C\uFF0C\u662F\u7684\u8BDD\u5C31\u5229\u7528append()\u65B9\u6CD5\u6DFB\u52A0\u8FFD\u52A0\u201C%20\u201D\uFF0C\u5426\u5219\u8FD8\u662F\u8FFD\u52A0\u539F\u5B57\u7B26\u3002</p><p>\u6216\u8005\u6700\u7B80\u5355\u7684\u65B9\u6CD5\u5C31\u662F\u5229\u7528\uFF1AreplaceAll(String regex,String replacement)\u65B9\u6CD5\u4E86\uFF0C\u4E00\u884C\u4EE3\u7801\u5C31\u53EF\u4EE5\u89E3\u51B3\u3002</p><p><strong>\u793A\u4F8B\u4EE3\u7801\uFF1A</strong></p><p>\u5E38\u89C4\u505A\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">replaceSpace</span><span class="token punctuation">(</span><span class="token class-name">StringBuffer</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">StringBuffer</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span> b <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            out<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;%20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            out<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> out<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u884C\u4EE3\u7801\u89E3\u51B3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">replaceSpace</span><span class="token punctuation">(</span><span class="token class-name">StringBuffer</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//return str.toString().replaceAll(&quot; &quot;, &quot;%20&quot;);</span>
    <span class="token comment">//public String replaceAll(String regex,String replacement)</span>
    <span class="token comment">//\u7528\u7ED9\u5B9A\u7684\u66FF\u6362\u66FF\u6362\u4E0E\u7ED9\u5B9A\u7684regular expression\u5339\u914D\u7684\u6B64\u5B57\u7B26\u4E32\u7684\u6BCF\u4E2A\u5B50\u5B57\u7B26\u4E32\u3002 </span>
    <span class="token comment">//\\ \u8F6C\u4E49\u5B57\u7B26. \u5982\u679C\u4F60\u8981\u4F7F\u7528 &quot;\\&quot; \u672C\u8EAB, \u5219\u5E94\u8BE5\u4F7F\u7528 &quot;\\\\&quot;. String\u7C7B\u578B\u4E2D\u7684\u7A7A\u683C\u7528\u201C\\s\u201D\u8868\u793A\uFF0C\u6240\u4EE5\u6211\u8FD9\u91CC\u731C\u6D4B&quot;\\\\s&quot;\u5C31\u662F\u4EE3\u8868\u7A7A\u683C\u7684\u610F\u601D</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\s&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;%20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u503C\u7684\u6574\u6570\u6B21\u65B9" tabindex="-1"><a class="header-anchor" href="#\u6570\u503C\u7684\u6574\u6570\u6B21\u65B9" aria-hidden="true">#</a> \u6570\u503C\u7684\u6574\u6570\u6B21\u65B9</h2><p><strong>\u9898\u76EE\u63CF\u8FF0\uFF1A</strong></p><p>\u7ED9\u5B9A\u4E00\u4E2Adouble\u7C7B\u578B\u7684\u6D6E\u70B9\u6570base\u548Cint\u7C7B\u578B\u7684\u6574\u6570exponent\u3002\u6C42base\u7684exponent\u6B21\u65B9\u3002</p><p><strong>\u95EE\u9898\u89E3\u6790\uFF1A</strong></p><p>\u8FD9\u9053\u9898\u7B97\u662F\u6BD4\u8F83\u9EBB\u70E6\u548C\u96BE\u4E00\u70B9\u7684\u4E00\u4E2A\u4E86\u3002\u6211\u8FD9\u91CC\u91C7\u7528\u7684\u662F<strong>\u4E8C\u5206\u5E42</strong>\u601D\u60F3\uFF0C\u5F53\u7136\u4E5F\u53EF\u4EE5\u91C7\u7528<strong>\u5FEB\u901F\u5E42</strong>\u3002 \u66F4\u5177\u5251\u6307offer\u4E66\u4E2D\u7EC6\u8282\uFF0C\u8BE5\u9898\u7684\u89E3\u9898\u601D\u8DEF\u5982\u4E0B\uFF1A 1.\u5F53\u5E95\u6570\u4E3A0\u4E14\u6307\u6570&lt;0\u65F6\uFF0C\u4F1A\u51FA\u73B0\u5BF90\u6C42\u5012\u6570\u7684\u60C5\u51B5\uFF0C\u9700\u8FDB\u884C\u9519\u8BEF\u5904\u7406\uFF0C\u8BBE\u7F6E\u4E00\u4E2A\u5168\u5C40\u53D8\u91CF\uFF1B 2.\u5224\u65AD\u5E95\u6570\u662F\u5426\u7B49\u4E8E0\uFF0C\u7531\u4E8Ebase\u4E3Adouble\u578B\uFF0C\u6240\u4EE5\u4E0D\u80FD\u76F4\u63A5\u7528==\u5224\u65AD 3.\u4F18\u5316\u6C42\u5E42\u51FD\u6570\uFF08\u4E8C\u5206\u5E42\uFF09\u3002 \u5F53n\u4E3A\u5076\u6570\uFF0Ca^n =\uFF08a<sup>n/2\uFF09*\uFF08a</sup>n/2\uFF09\uFF1B \u5F53n\u4E3A\u5947\u6570\uFF0Ca^n = a<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup> * a<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup> * a\u3002\u65F6\u95F4\u590D\u6742\u5EA6O(logn)</p><p><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong>\uFF1AO(logn)</p><p><strong>\u793A\u4F8B\u4EE3\u7801\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span> 
      <span class="token keyword">boolean</span> invalidInput<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>    
      <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token class-name">Power</span><span class="token punctuation">(</span><span class="token keyword">double</span> base<span class="token punctuation">,</span> <span class="token keyword">int</span> exponent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">//\u5982\u679C\u5E95\u6570\u7B49\u4E8E0\u5E76\u4E14\u6307\u6570\u5C0F\u4E8E0</span>
          <span class="token comment">//\u7531\u4E8Ebase\u4E3Adouble\u578B\uFF0C\u4E0D\u80FD\u76F4\u63A5\u7528==\u5224\u65AD</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">equal</span><span class="token punctuation">(</span>base<span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>exponent<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            invalidInput<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token number">0.0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> absexponent<span class="token operator">=</span>exponent<span class="token punctuation">;</span>
         <span class="token comment">//\u5982\u679C\u6307\u6570\u5C0F\u4E8E0\uFF0C\u5C06\u6307\u6570\u8F6C\u6B63</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>exponent<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>
            absexponent<span class="token operator">=</span><span class="token operator">-</span>exponent<span class="token punctuation">;</span>
         <span class="token comment">//getPower\u65B9\u6CD5\u6C42\u51FAbase\u7684exponent\u6B21\u65B9\u3002</span>
        <span class="token keyword">double</span> res<span class="token operator">=</span><span class="token function">getPower</span><span class="token punctuation">(</span>base<span class="token punctuation">,</span>absexponent<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">//\u5982\u679C\u6307\u6570\u5C0F\u4E8E0\uFF0C\u6240\u5F97\u7ED3\u679C\u4E3A\u4E0A\u9762\u6C42\u7684\u7ED3\u679C\u7684\u5012\u6570</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>exponent<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>
            res<span class="token operator">=</span><span class="token number">1.0</span><span class="token operator">/</span>res<span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
    <span class="token comment">//\u6BD4\u8F83\u4E24\u4E2Adouble\u578B\u53D8\u91CF\u662F\u5426\u76F8\u7B49\u7684\u65B9\u6CD5</span>
    <span class="token keyword">boolean</span> <span class="token function">equal</span><span class="token punctuation">(</span><span class="token keyword">double</span> num1<span class="token punctuation">,</span><span class="token keyword">double</span> num2<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>num1<span class="token operator">-</span>num2<span class="token operator">&gt;</span><span class="token operator">-</span><span class="token number">0.000001</span><span class="token operator">&amp;&amp;</span>num1<span class="token operator">-</span>num2<span class="token operator">&lt;</span><span class="token number">0.000001</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u6C42\u51FAb\u7684e\u6B21\u65B9\u7684\u65B9\u6CD5</span>
    <span class="token keyword">double</span> <span class="token function">getPower</span><span class="token punctuation">(</span><span class="token keyword">double</span> b<span class="token punctuation">,</span><span class="token keyword">int</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//\u5982\u679C\u6307\u6570\u4E3A0\uFF0C\u8FD4\u56DE1</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token number">1.0</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5982\u679C\u6307\u6570\u4E3A1\uFF0C\u8FD4\u56DEb</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> b<span class="token punctuation">;</span>
        <span class="token comment">//e&gt;&gt;1\u76F8\u7B49\u4E8Ee/2\uFF0C\u8FD9\u91CC\u5C31\u662F\u6C42a^n =\uFF08a^n/2\uFF09*\uFF08a^n/2\uFF09</span>
        <span class="token keyword">double</span> result<span class="token operator">=</span><span class="token function">getPower</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>e<span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token operator">*=</span>result<span class="token punctuation">;</span>
        <span class="token comment">//\u5982\u679C\u6307\u6570n\u4E3A\u5947\u6570\uFF0C\u5219\u8981\u518D\u4E58\u4E00\u6B21\u5E95\u6570base</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>
            result<span class="token operator">*=</span>b<span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u7136\u8FD9\u4E00\u9898\u4E5F\u53EF\u4EE5\u91C7\u7528\u7B28\u65B9\u6CD5\uFF1A\u7D2F\u4E58\u3002\u4E0D\u8FC7\u8FD9\u79CD\u65B9\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO\uFF08n\uFF09\uFF0C\u8FD9\u6837\u6CA1\u6709\u524D\u4E00\u79CD\u65B9\u6CD5\u6548\u7387\u9AD8\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u4F7F\u7528\u7D2F\u4E58</span>
<span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">powerAnother</span><span class="token punctuation">(</span><span class="token keyword">double</span> base<span class="token punctuation">,</span> <span class="token keyword">int</span> exponent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">double</span> result <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>exponent<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">*=</span> base<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>exponent <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">/</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8C03\u6574\u6570\u7EC4\u987A\u5E8F\u4F7F\u5947\u6570\u4F4D\u4E8E\u5076\u6570\u524D\u9762" tabindex="-1"><a class="header-anchor" href="#\u8C03\u6574\u6570\u7EC4\u987A\u5E8F\u4F7F\u5947\u6570\u4F4D\u4E8E\u5076\u6570\u524D\u9762" aria-hidden="true">#</a> \u8C03\u6574\u6570\u7EC4\u987A\u5E8F\u4F7F\u5947\u6570\u4F4D\u4E8E\u5076\u6570\u524D\u9762</h2><p><strong>\u9898\u76EE\u63CF\u8FF0\uFF1A</strong></p><p>\u8F93\u5165\u4E00\u4E2A\u6574\u6570\u6570\u7EC4\uFF0C\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\u6765\u8C03\u6574\u8BE5\u6570\u7EC4\u4E2D\u6570\u5B57\u7684\u987A\u5E8F\uFF0C\u4F7F\u5F97\u6240\u6709\u7684\u5947\u6570\u4F4D\u4E8E\u6570\u7EC4\u7684\u524D\u534A\u90E8\u5206\uFF0C\u6240\u6709\u7684\u5076\u6570\u4F4D\u4E8E\u4F4D\u4E8E\u6570\u7EC4\u7684\u540E\u534A\u90E8\u5206\uFF0C\u5E76\u4FDD\u8BC1\u5947\u6570\u548C\u5947\u6570\uFF0C\u5076\u6570\u548C\u5076\u6570\u4E4B\u95F4\u7684\u76F8\u5BF9\u4F4D\u7F6E\u4E0D\u53D8\u3002</p><p><strong>\u95EE\u9898\u89E3\u6790\uFF1A</strong></p><p>\u8FD9\u9053\u9898\u6709\u633A\u591A\u79CD\u89E3\u6CD5\u7684\uFF0C\u7ED9\u5927\u5BB6\u4ECB\u7ECD\u4E00\u79CD\u6211\u89C9\u5F97\u633A\u597D\u7406\u89E3\u7684\u65B9\u6CD5\uFF1A \u6211\u4EEC\u9996\u5148\u7EDF\u8BA1\u5947\u6570\u7684\u4E2A\u6570\u5047\u8BBE\u4E3An,\u7136\u540E\u65B0\u5EFA\u4E00\u4E2A\u7B49\u957F\u6570\u7EC4\uFF0C\u7136\u540E\u901A\u8FC7\u5FAA\u73AF\u5224\u65AD\u539F\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u4E3A\u5076\u6570\u8FD8\u662F\u5947\u6570\u3002\u5982\u679C\u662F\u5219\u4ECE\u6570\u7EC4\u4E0B\u68070\u7684\u5143\u7D20\u5F00\u59CB\uFF0C\u628A\u8BE5\u5947\u6570\u6DFB\u52A0\u5230\u65B0\u6570\u7EC4\uFF1B\u5982\u679C\u662F\u5076\u6570\u5219\u4ECE\u6570\u7EC4\u4E0B\u6807\u4E3An\u7684\u5143\u7D20\u5F00\u59CB\u628A\u8BE5\u5076\u6570\u6DFB\u52A0\u5230\u65B0\u6570\u7EC4\u4E2D\u3002</p><p><strong>\u793A\u4F8B\u4EE3\u7801\uFF1A</strong></p><p>\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO\uFF08n\uFF09\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3AO\uFF08n\uFF09\u7684\u7B97\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reOrderArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u5982\u679C\u6570\u7EC4\u957F\u5EA6\u7B49\u4E8E0\u6216\u8005\u7B49\u4E8E1\uFF0C\u4EC0\u4E48\u90FD\u4E0D\u505A\u76F4\u63A5\u8FD4\u56DE</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">0</span><span class="token operator">||</span>array<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> 
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token comment">//oddCount\uFF1A\u4FDD\u5B58\u5947\u6570\u4E2A\u6570</span>
        <span class="token comment">//oddBegin\uFF1A\u5947\u6570\u4ECE\u6570\u7EC4\u5934\u90E8\u5F00\u59CB\u6DFB\u52A0</span>
        <span class="token keyword">int</span> oddCount<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>oddBegin<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">//\u65B0\u5EFA\u4E00\u4E2A\u6570\u7EC4</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newArray<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>array<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8BA1\u7B97\u51FA\uFF08\u6570\u7EC4\u4E2D\u7684\u5947\u6570\u4E2A\u6570\uFF09\u5F00\u59CB\u6DFB\u52A0\u5143\u7D20</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> oddCount<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//\u5982\u679C\u6570\u4E3A\u57FA\u6570\u65B0\u6570\u7EC4\u4ECE\u5934\u5F00\u59CB\u6DFB\u52A0\u5143\u7D20</span>
            <span class="token comment">//\u5982\u679C\u4E3A\u5076\u6570\u5C31\u4ECEoddCount\uFF08\u6570\u7EC4\u4E2D\u7684\u5947\u6570\u4E2A\u6570\uFF09\u5F00\u59CB\u6DFB\u52A0\u5143\u7D20</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> 
                newArray<span class="token punctuation">[</span>oddBegin<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> newArray<span class="token punctuation">[</span>oddCount<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>newArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9" aria-hidden="true">#</a> \u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9</h2><p><strong>\u9898\u76EE\u63CF\u8FF0\uFF1A</strong></p><p>\u8F93\u5165\u4E00\u4E2A\u94FE\u8868\uFF0C\u8F93\u51FA\u8BE5\u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u7ED3\u70B9</p><p><strong>\u95EE\u9898\u5206\u6790\uFF1A</strong></p><p><strong>\u4E00\u53E5\u8BDD\u6982\u62EC\uFF1A</strong> \u4E24\u4E2A\u6307\u9488\u4E00\u4E2A\u6307\u9488p1\u5148\u5F00\u59CB\u8DD1\uFF0C\u6307\u9488p1\u8DD1\u5230k-1\u4E2A\u8282\u70B9\u540E\uFF0C\u53E6\u4E00\u4E2A\u8282\u70B9p2\u5F00\u59CB\u8DD1\uFF0C\u5F53p1\u8DD1\u5230\u6700\u540E\u65F6\uFF0Cp2\u6240\u6307\u7684\u6307\u9488\u5C31\u662F\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9\u3002</p><p><strong>\u601D\u60F3\u7684\u7B80\u5355\u7406\u89E3\uFF1A</strong> \u524D\u63D0\u5047\u8BBE\uFF1A\u94FE\u8868\u7684\u7ED3\u70B9\u4E2A\u6570(\u957F\u5EA6)\u4E3An\u3002 \u89C4\u5F8B\u4E00\uFF1A\u8981\u627E\u5230\u5012\u6570\u7B2Ck\u4E2A\u7ED3\u70B9\uFF0C\u9700\u8981\u5411\u524D\u8D70\u591A\u5C11\u6B65\u5462\uFF1F\u6BD4\u5982\u5012\u6570\u7B2C\u4E00\u4E2A\u7ED3\u70B9\uFF0C\u9700\u8981\u8D70n\u6B65\uFF0C\u90A3\u5012\u6570\u7B2C\u4E8C\u4E2A\u7ED3\u70B9\u5462\uFF1F\u5F88\u660E\u663E\u662F\u5411\u524D\u8D70\u4E86n-1\u6B65\uFF0C\u6240\u4EE5\u53EF\u4EE5\u627E\u5230\u89C4\u5F8B\u662F\u627E\u5230\u5012\u6570\u7B2Ck\u4E2A\u7ED3\u70B9\uFF0C\u9700\u8981\u5411\u524D\u8D70n-k+1\u6B65\u3002</p><p><strong>\u7B97\u6CD5\u5F00\u59CB\uFF1A</strong></p><ol><li>\u8BBE\u4E24\u4E2A\u90FD\u6307\u5411head\u7684\u6307\u9488p1\u548Cp2\uFF0C\u5F53p1\u8D70\u4E86k-1\u6B65\u7684\u65F6\u5019\uFF0C\u505C\u4E0B\u6765\u3002p2\u4E4B\u524D\u4E00\u76F4\u4E0D\u52A8\u3002</li><li>p1\u7684\u4E0B\u4E00\u6B65\u662F\u8D70\u7B2Ck\u6B65\uFF0C\u8FD9\u4E2A\u65F6\u5019\uFF0Cp2\u5F00\u59CB\u4E00\u8D77\u52A8\u4E86\u3002\u81F3\u4E8E\u4E3A\u4EC0\u4E48p2\u8FD9\u4E2A\u65F6\u5019\u52A8\u5462\uFF1F\u770B\u4E0B\u9762\u7684\u5206\u6790\u3002</li><li>\u5F53p1\u8D70\u5230\u94FE\u8868\u7684\u5C3E\u90E8\u65F6\uFF0C\u5373p1\u8D70\u4E86n\u6B65\u3002\u7531\u4E8E\u6211\u4EEC\u77E5\u9053p2\u662F\u5728p1\u8D70\u4E86k-1\u6B65\u624D\u5F00\u59CB\u52A8\u7684\uFF0C\u4E5F\u5C31\u662F\u8BF4p1\u548Cp2\u6C38\u8FDC\u5DEEk-1\u6B65\u3002\u6240\u4EE5\u5F53p1\u8D70\u4E86n\u6B65\u65F6\uFF0Cp2\u8D70\u7684\u5E94\u8BE5\u662F\u5728n-(k-1)\u6B65\u3002\u5373p2\u8D70\u4E86n-k+1\u6B65\uFF0C\u6B64\u65F6\u5DE7\u5999\u7684\u662Fp2\u6B63\u597D\u6307\u5411\u7684\u662F\u89C4\u5F8B\u4E00\u7684\u5012\u6570\u7B2Ck\u4E2A\u7ED3\u70B9\u5904\u3002 \u8FD9\u6837\u662F\u4E0D\u662F\u5F88\u597D\u7406\u89E3\u4E86\u5462\uFF1F</li></ol><p><strong>\u8003\u5BDF\u5185\u5BB9\uFF1A</strong></p><p>\u94FE\u8868+\u4EE3\u7801\u7684\u9C81\u68D2\u6027</p><p><strong>\u793A\u4F8B\u4EE3\u7801\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/*
//\u94FE\u8868\u7C7B
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/</span>

<span class="token comment">//\u65F6\u95F4\u590D\u6742\u5EA6O(n),\u4E00\u6B21\u904D\u5386\u5373\u53EF</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token class-name">FindKthToTail</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">,</span><span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> pre<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span>p<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">//\u4E24\u4E2A\u6307\u9488\u90FD\u6307\u5411\u5934\u7ED3\u70B9</span>
        p<span class="token operator">=</span>head<span class="token punctuation">;</span>
        pre<span class="token operator">=</span>head<span class="token punctuation">;</span>
        <span class="token comment">//\u8BB0\u5F55k\u503C</span>
        <span class="token keyword">int</span> a<span class="token operator">=</span>k<span class="token punctuation">;</span>
        <span class="token comment">//\u8BB0\u5F55\u8282\u70B9\u7684\u4E2A\u6570</span>
        <span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">//p\u6307\u9488\u5148\u8DD1\uFF0C\u5E76\u4E14\u8BB0\u5F55\u8282\u70B9\u6570\uFF0C\u5F53p\u6307\u9488\u8DD1\u4E86k-1\u4E2A\u8282\u70B9\u540E\uFF0Cpre\u6307\u9488\u5F00\u59CB\u8DD1\uFF0C</span>
        <span class="token comment">//\u5F53p\u6307\u9488\u8DD1\u5230\u6700\u540E\u65F6\uFF0Cpre\u6240\u6307\u6307\u9488\u5C31\u662F\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>p<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            p<span class="token operator">=</span>p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>k<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                pre<span class="token operator">=</span>pre<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            k<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u5982\u679C\u8282\u70B9\u4E2A\u6570\u5C0F\u4E8E\u6240\u6C42\u7684\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9\uFF0C\u5219\u8FD4\u56DE\u7A7A</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>count<span class="token operator">&lt;</span>a<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> pre<span class="token punctuation">;</span>
            
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53CD\u8F6C\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u53CD\u8F6C\u94FE\u8868" aria-hidden="true">#</a> \u53CD\u8F6C\u94FE\u8868</h2><p><strong>\u9898\u76EE\u63CF\u8FF0\uFF1A</strong></p><p>\u8F93\u5165\u4E00\u4E2A\u94FE\u8868\uFF0C\u53CD\u8F6C\u94FE\u8868\u540E\uFF0C\u8F93\u51FA\u94FE\u8868\u7684\u6240\u6709\u5143\u7D20\u3002</p><p><strong>\u95EE\u9898\u5206\u6790\uFF1A</strong></p><p>\u94FE\u8868\u7684\u5F88\u5E38\u89C4\u7684\u4E00\u9053\u9898\uFF0C\u8FD9\u4E00\u9053\u9898\u601D\u8DEF\u4E0D\u7B97\u96BE\uFF0C\u4F46\u81EA\u5DF1\u5B9E\u73B0\u8D77\u6765\u771F\u7684\u53EF\u80FD\u4F1A\u611F\u89C9\u65E0\u4ECE\u4E0B\u624B\uFF0C\u6211\u662F\u53C2\u8003\u4E86\u522B\u4EBA\u7684\u4EE3\u7801\u3002 \u601D\u8DEF\u5C31\u662F\u6211\u4EEC\u6839\u636E\u94FE\u8868\u7684\u7279\u70B9\uFF0C\u524D\u4E00\u4E2A\u8282\u70B9\u6307\u5411\u4E0B\u4E00\u4E2A\u8282\u70B9\u7684\u7279\u70B9\uFF0C\u628A\u540E\u9762\u7684\u8282\u70B9\u79FB\u5230\u524D\u9762\u6765\u3002 \u5C31\u6BD4\u5982\u4E0B\u56FE\uFF1A\u6211\u4EEC\u628A1\u8282\u70B9\u548C2\u8282\u70B9\u4E92\u6362\u4F4D\u7F6E\uFF0C\u7136\u540E\u518D\u5C063\u8282\u70B9\u6307\u54112\u8282\u70B9\uFF0C4\u8282\u70B9\u6307\u54113\u8282\u70B9\uFF0C\u8FD9\u6837\u4EE5\u6765\u4E0B\u9762\u7684\u94FE\u8868\u5C31\u88AB\u53CD\u8F6C\u4E86\u3002</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/844773c7300e4373922bb1a6ae2a55a3~tplv-k3u1fbpfcp-zoom-1.image" alt="\u94FE\u8868" loading="lazy"></p><p><strong>\u8003\u5BDF\u5185\u5BB9\uFF1A</strong></p><p>\u94FE\u8868+\u4EE3\u7801\u7684\u9C81\u68D2\u6027</p><p><strong>\u793A\u4F8B\u4EE3\u7801\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token class-name">ReverseList</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token class-name">ListNode</span> next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
       <span class="token class-name">ListNode</span> pre <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>head <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment">//\u4FDD\u5B58\u8981\u53CD\u8F6C\u5230\u5934\u6765\u7684\u90A3\u4E2A\u8282\u70B9</span>
               next <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
               <span class="token comment">//\u8981\u53CD\u8F6C\u7684\u90A3\u4E2A\u8282\u70B9\u6307\u5411\u5DF2\u7ECF\u53CD\u8F6C\u7684\u4E0A\u4E00\u4E2A\u8282\u70B9</span>
               head<span class="token punctuation">.</span>next <span class="token operator">=</span> pre<span class="token punctuation">;</span>
               <span class="token comment">//\u4E0A\u4E00\u4E2A\u5DF2\u7ECF\u53CD\u8F6C\u5230\u5934\u90E8\u7684\u8282\u70B9</span>
               pre <span class="token operator">=</span> head<span class="token punctuation">;</span>
               <span class="token comment">//\u4E00\u76F4\u5411\u94FE\u8868\u5C3E\u8D70</span>
               head <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> pre<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868" aria-hidden="true">#</a> \u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868</h2><p><strong>\u9898\u76EE\u63CF\u8FF0\uFF1A</strong></p><p>\u8F93\u5165\u4E24\u4E2A\u5355\u8C03\u9012\u589E\u7684\u94FE\u8868\uFF0C\u8F93\u51FA\u4E24\u4E2A\u94FE\u8868\u5408\u6210\u540E\u7684\u94FE\u8868\uFF0C\u5F53\u7136\u6211\u4EEC\u9700\u8981\u5408\u6210\u540E\u7684\u94FE\u8868\u6EE1\u8DB3\u5355\u8C03\u4E0D\u51CF\u89C4\u5219\u3002</p><p><strong>\u95EE\u9898\u5206\u6790\uFF1A</strong></p><p>\u6211\u4EEC\u53EF\u4EE5\u8FD9\u6837\u5206\u6790:</p><ol><li>\u5047\u8BBE\u6211\u4EEC\u6709\u4E24\u4E2A\u94FE\u8868 A,B\uFF1B</li><li>A\u7684\u5934\u8282\u70B9A1\u7684\u503C\u4E0EB\u7684\u5934\u7ED3\u70B9B1\u7684\u503C\u6BD4\u8F83\uFF0C\u5047\u8BBEA1\u5C0F\uFF0C\u5219A1\u4E3A\u5934\u8282\u70B9\uFF1B</li><li>A2\u518D\u548CB1\u6BD4\u8F83\uFF0C\u5047\u8BBEB1\u5C0F,\u5219\uFF0CA1\u6307\u5411B1\uFF1B</li><li>A2\u518D\u548CB2\u6BD4\u8F83\u3002\u3002\u3002\u3002\u3002\u3002\u3002 \u5C31\u8FD9\u6837\u5FAA\u73AF\u5F80\u590D\u5C31\u884C\u4E86\uFF0C\u5E94\u8BE5\u8FD8\u7B97\u597D\u7406\u89E3\u3002</li></ol><p><strong>\u8003\u5BDF\u5185\u5BB9\uFF1A</strong></p><p>\u94FE\u8868+\u4EE3\u7801\u7684\u9C81\u68D2\u6027</p><p><strong>\u793A\u4F8B\u4EE3\u7801\uFF1A</strong></p><p>\u975E\u9012\u5F52\u7248\u672C\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token class-name">Merge</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> list1<span class="token punctuation">,</span><span class="token class-name">ListNode</span> list2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment">//list1\u4E3A\u7A7A\uFF0C\u76F4\u63A5\u8FD4\u56DElist2</span>
       <span class="token keyword">if</span><span class="token punctuation">(</span>list1 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> list2<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//list2\u4E3A\u7A7A\uFF0C\u76F4\u63A5\u8FD4\u56DElist1</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>list2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> list1<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">ListNode</span> mergeHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> current <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>   
        <span class="token comment">//\u5F53list1\u548Clist2\u4E0D\u4E3A\u7A7A\u65F6</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>list1<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> list2<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//\u53D6\u8F83\u5C0F\u503C\u4F5C\u5934\u7ED3\u70B9 </span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>list1<span class="token punctuation">.</span>val <span class="token operator">&lt;=</span> list2<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>mergeHead <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                   mergeHead <span class="token operator">=</span> current <span class="token operator">=</span> list1<span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                   current<span class="token punctuation">.</span>next <span class="token operator">=</span> list1<span class="token punctuation">;</span>
                    <span class="token comment">//current\u8282\u70B9\u4FDD\u5B58list1\u8282\u70B9\u7684\u503C\u56E0\u4E3A\u4E0B\u4E00\u6B21\u8FD8\u8981\u7528</span>
                   current <span class="token operator">=</span> list1<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//list1\u6307\u5411\u4E0B\u4E00\u4E2A\u8282\u70B9</span>
                list1 <span class="token operator">=</span> list1<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>mergeHead <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                   mergeHead <span class="token operator">=</span> current <span class="token operator">=</span> list2<span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                   current<span class="token punctuation">.</span>next <span class="token operator">=</span> list2<span class="token punctuation">;</span>
                     <span class="token comment">//current\u8282\u70B9\u4FDD\u5B58list2\u8282\u70B9\u7684\u503C\u56E0\u4E3A\u4E0B\u4E00\u6B21\u8FD8\u8981\u7528</span>
                   current <span class="token operator">=</span> list2<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//list2\u6307\u5411\u4E0B\u4E00\u4E2A\u8282\u70B9</span>
                list2 <span class="token operator">=</span> list2<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>list1 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            current<span class="token punctuation">.</span>next <span class="token operator">=</span> list2<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            current<span class="token punctuation">.</span>next <span class="token operator">=</span> list1<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> mergeHead<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9012\u5F52\u7248\u672C\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token class-name">Merge</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> list1<span class="token punctuation">,</span><span class="token class-name">ListNode</span> list2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>list1 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> list2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>list2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> list1<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>list1<span class="token punctuation">.</span>val <span class="token operator">&lt;=</span> list2<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">{</span>
        list1<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token class-name">Merge</span><span class="token punctuation">(</span>list1<span class="token punctuation">.</span>next<span class="token punctuation">,</span> list2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> list1<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        list2<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token class-name">Merge</span><span class="token punctuation">(</span>list1<span class="token punctuation">,</span> list2<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> list2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>       
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#\u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217" aria-hidden="true">#</a> \u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217</h2><p><strong>\u9898\u76EE\u63CF\u8FF0\uFF1A</strong></p><p>\u7528\u4E24\u4E2A\u6808\u6765\u5B9E\u73B0\u4E00\u4E2A\u961F\u5217\uFF0C\u5B8C\u6210\u961F\u5217\u7684Push\u548CPop\u64CD\u4F5C\u3002 \u961F\u5217\u4E2D\u7684\u5143\u7D20\u4E3Aint\u7C7B\u578B\u3002</p><p><strong>\u95EE\u9898\u5206\u6790\uFF1A</strong></p><p>\u5148\u6765\u56DE\u987E\u4E00\u4E0B\u6808\u548C\u961F\u5217\u7684\u57FA\u672C\u7279\u70B9\uFF1A **\u6808\uFF1A**\u540E\u8FDB\u5148\u51FA\uFF08LIFO\uFF09 <strong>\u961F\u5217\uFF1A</strong> \u5148\u8FDB\u5148\u51FA \u5F88\u660E\u663E\u6211\u4EEC\u9700\u8981\u6839\u636EJDK\u7ED9\u6211\u4EEC\u63D0\u4F9B\u7684\u6808\u7684\u4E00\u4E9B\u57FA\u672C\u65B9\u6CD5\u6765\u5B9E\u73B0\u3002\u5148\u6765\u770B\u4E00\u4E0BStack\u7C7B\u7684\u4E00\u4E9B\u57FA\u672C\u65B9\u6CD5\uFF1A <img src="https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/18-4-4/5985000.jpg" alt="Stack\u7C7B\u7684\u4E00\u4E9B\u5E38\u89C1\u65B9\u6CD5" loading="lazy"></p><p>\u65E2\u7136\u9898\u76EE\u7ED9\u4E86\u6211\u4EEC\u4E24\u4E2A\u6808\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8FD9\u6837\u8003\u8651\u5F53push\u7684\u65F6\u5019\u5C06\u5143\u7D20push\u8FDBstack1\uFF0Cpop\u7684\u65F6\u5019\u6211\u4EEC\u5148\u628Astack1\u7684\u5143\u7D20pop\u5230stack2\uFF0C\u7136\u540E\u518D\u5BF9stack2\u6267\u884Cpop\u64CD\u4F5C\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u4FDD\u8BC1\u662F\u5148\u8FDB\u5148\u51FA\u7684\u3002\uFF08\u8D1F[pop]\u8D1F[pop]\u5F97\u6B63[\u5148\u8FDB\u5148\u51FA]\uFF09</p><p><strong>\u8003\u5BDF\u5185\u5BB9\uFF1A</strong></p><p>\u961F\u5217+\u6808</p><p>\u793A\u4F8B\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u5DE6\u7A0B\u4E91\u7684\u300A\u7A0B\u5E8F\u5458\u4EE3\u7801\u9762\u8BD5\u6307\u5357\u300B\u7684\u7B54\u6848</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Stack</span></span><span class="token punctuation">;</span>
 
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> stack1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> stack2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     
    <span class="token comment">//\u5F53\u6267\u884Cpush\u64CD\u4F5C\u65F6\uFF0C\u5C06\u5143\u7D20\u6DFB\u52A0\u5230stack1</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        stack1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
     
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u5982\u679C\u4E24\u4E2A\u961F\u5217\u90FD\u4E3A\u7A7A\u5219\u629B\u51FA\u5F02\u5E38,\u8BF4\u660E\u7528\u6237\u6CA1\u6709push\u8FDB\u4EFB\u4F55\u5143\u7D20</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>stack1<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>stack2<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;Queue is empty!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u5982\u679Cstack2\u4E0D\u4E3A\u7A7A\u76F4\u63A5\u5BF9stack2\u6267\u884Cpop\u64CD\u4F5C\uFF0C</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>stack2<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>stack1<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//\u5C06stack1\u7684\u5143\u7D20\u6309\u540E\u8FDB\u5148\u51FApush\u8FDBstack2\u91CC\u9762</span>
                stack2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>stack1<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
          <span class="token keyword">return</span> stack2<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6808\u7684\u538B\u5165-\u5F39\u51FA\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#\u6808\u7684\u538B\u5165-\u5F39\u51FA\u5E8F\u5217" aria-hidden="true">#</a> \u6808\u7684\u538B\u5165,\u5F39\u51FA\u5E8F\u5217</h2><p><strong>\u9898\u76EE\u63CF\u8FF0\uFF1A</strong></p><p>\u8F93\u5165\u4E24\u4E2A\u6574\u6570\u5E8F\u5217\uFF0C\u7B2C\u4E00\u4E2A\u5E8F\u5217\u8868\u793A\u6808\u7684\u538B\u5165\u987A\u5E8F\uFF0C\u8BF7\u5224\u65AD\u7B2C\u4E8C\u4E2A\u5E8F\u5217\u662F\u5426\u4E3A\u8BE5\u6808\u7684\u5F39\u51FA\u987A\u5E8F\u3002\u5047\u8BBE\u538B\u5165\u6808\u7684\u6240\u6709\u6570\u5B57\u5747\u4E0D\u76F8\u7B49\u3002\u4F8B\u5982\u5E8F\u52171,2,3,4,5\u662F\u67D0\u6808\u7684\u538B\u5165\u987A\u5E8F\uFF0C\u5E8F\u52174\uFF0C5,3,2,1\u662F\u8BE5\u538B\u6808\u5E8F\u5217\u5BF9\u5E94\u7684\u4E00\u4E2A\u5F39\u51FA\u5E8F\u5217\uFF0C\u4F464,3,5,1,2\u5C31\u4E0D\u53EF\u80FD\u662F\u8BE5\u538B\u6808\u5E8F\u5217\u7684\u5F39\u51FA\u5E8F\u5217\u3002\uFF08\u6CE8\u610F\uFF1A\u8FD9\u4E24\u4E2A\u5E8F\u5217\u7684\u957F\u5EA6\u662F\u76F8\u7B49\u7684\uFF09</p><p><strong>\u9898\u76EE\u5206\u6790\uFF1A</strong></p>`,119),r=n("\u8FD9\u9053\u9898\u60F3\u4E86\u534A\u5929\u6CA1\u6709\u601D\u8DEF\uFF0C\u53C2\u8003\u4E86Alias\u7684\u7B54\u6848\uFF0C\u4ED6\u7684\u601D\u8DEF\u5199\u7684\u4E5F\u5F88\u8BE6\u7EC6\u5E94\u8BE5\u5F88\u5BB9\u6613\u770B\u61C2\u3002 \u4F5C\u8005\uFF1AAlias "),k={href:"https://www.nowcoder.com/questionTerminal/d77d11405cc7470d82554cb392585106",target:"_blank",rel:"noopener noreferrer"},d=n("https://www.nowcoder.com/questionTerminal/d77d11405cc7470d82554cb392585106"),v=n(" \u6765\u6E90\uFF1A\u725B\u5BA2\u7F51"),m=a(`<p>\u3010\u601D\u8DEF\u3011\u501F\u7528\u4E00\u4E2A\u8F85\u52A9\u7684\u6808\uFF0C\u904D\u5386\u538B\u6808\u987A\u5E8F\uFF0C\u5148\u8BB2\u7B2C\u4E00\u4E2A\u653E\u5165\u6808\u4E2D\uFF0C\u8FD9\u91CC\u662F1\uFF0C\u7136\u540E\u5224\u65AD\u6808\u9876\u5143\u7D20\u662F\u4E0D\u662F\u51FA\u6808\u987A\u5E8F\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u8FD9\u91CC\u662F4\uFF0C\u5F88\u663E\u71361\u22604\uFF0C\u6240\u4EE5\u6211\u4EEC\u7EE7\u7EED\u538B\u6808\uFF0C\u76F4\u5230\u76F8\u7B49\u4EE5\u540E\u5F00\u59CB\u51FA\u6808\uFF0C\u51FA\u6808\u4E00\u4E2A\u5143\u7D20\uFF0C\u5219\u5C06\u51FA\u6808\u987A\u5E8F\u5411\u540E\u79FB\u52A8\u4E00\u4F4D\uFF0C\u76F4\u5230\u4E0D\u76F8\u7B49\uFF0C\u8FD9\u6837\u5FAA\u73AF\u7B49\u538B\u6808\u987A\u5E8F\u904D\u5386\u5B8C\u6210\uFF0C\u5982\u679C\u8F85\u52A9\u6808\u8FD8\u4E0D\u4E3A\u7A7A\uFF0C\u8BF4\u660E\u5F39\u51FA\u5E8F\u5217\u4E0D\u662F\u8BE5\u6808\u7684\u5F39\u51FA\u987A\u5E8F\u3002</p><p>\u4E3E\u4F8B\uFF1A</p><p>\u5165\u68081,2,3,4,5</p><p>\u51FA\u68084,5,3,2,1</p><p>\u9996\u51481\u5165\u8F85\u52A9\u6808\uFF0C\u6B64\u65F6\u6808\u98761\u22604\uFF0C\u7EE7\u7EED\u5165\u68082</p><p>\u6B64\u65F6\u6808\u98762\u22604\uFF0C\u7EE7\u7EED\u5165\u68083</p><p>\u6B64\u65F6\u6808\u98763\u22604\uFF0C\u7EE7\u7EED\u5165\u68084</p><p>\u6B64\u65F6\u6808\u98764\uFF1D4\uFF0C\u51FA\u68084\uFF0C\u5F39\u51FA\u5E8F\u5217\u5411\u540E\u4E00\u4F4D\uFF0C\u6B64\u65F6\u4E3A5\uFF0C,\u8F85\u52A9\u6808\u91CC\u9762\u662F1,2,3</p><p>\u6B64\u65F6\u6808\u98763\u22605\uFF0C\u7EE7\u7EED\u5165\u68085</p><p>\u6B64\u65F6\u6808\u98765=5\uFF0C\u51FA\u68085,\u5F39\u51FA\u5E8F\u5217\u5411\u540E\u4E00\u4F4D\uFF0C\u6B64\u65F6\u4E3A3\uFF0C,\u8F85\u52A9\u6808\u91CC\u9762\u662F1,2,3</p><p>\u2026. \u4F9D\u6B21\u6267\u884C\uFF0C\u6700\u540E\u8F85\u52A9\u6808\u4E3A\u7A7A\u3002\u5982\u679C\u4E0D\u4E3A\u7A7A\u8BF4\u660E\u5F39\u51FA\u5E8F\u5217\u4E0D\u662F\u8BE5\u6808\u7684\u5F39\u51FA\u987A\u5E8F\u3002</p><p><strong>\u8003\u5BDF\u5185\u5BB9\uFF1A</strong></p><p>\u6808</p><p><strong>\u793A\u4F8B\u4EE3\u7801\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Stack</span></span><span class="token punctuation">;</span>
<span class="token comment">//\u8FD9\u9053\u9898\u6CA1\u60F3\u51FA\u6765\uFF0C\u53C2\u8003\u4E86Alias\u540C\u5B66\u7684\u7B54\u6848\uFF1Ahttps://www.nowcoder.com/questionTerminal/d77d11405cc7470d82554cb392585106</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token class-name">IsPopOrder</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> pushA<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> popA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>pushA<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> popA<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u7528\u4E8E\u6807\u8BC6\u5F39\u51FA\u5E8F\u5217\u7684\u4F4D\u7F6E</span>
        <span class="token keyword">int</span> popIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> pushA<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            s<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>pushA<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u5982\u679C\u6808\u4E0D\u4E3A\u7A7A\uFF0C\u4E14\u6808\u9876\u5143\u7D20\u7B49\u4E8E\u5F39\u51FA\u5E8F\u5217</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>s<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>s<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> popA<span class="token punctuation">[</span>popIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//\u51FA\u6808</span>
                s<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//\u5F39\u51FA\u5E8F\u5217\u5411\u540E\u4E00\u4F4D</span>
                popIndex<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>(n-1)/2 <a href="#footnote-ref1" class="footnote-backref">\u21A9\uFE0E</a></p></li><li id="footnote2" class="footnote-item"><p>(n-1)/2 <a href="#footnote-ref2" class="footnote-backref">\u21A9\uFE0E</a></p></li></ol></section>`,17);function b(g,w){const p=l("ExternalLinkIcon");return e(),o("div",null,[u,s("p",null,[r,s("a",k,[d,c(p)]),v]),m])}var h=t(i,[["render",b],["__file","the-sword-refers-to-offer.html.vue"]]);export{h as default};
