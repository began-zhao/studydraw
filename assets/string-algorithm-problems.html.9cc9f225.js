import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c,b as n,a as t,d as s,e as p,r as l}from"./app.801c5d10.js";const i={},u=n("p",null,"\u6388\u6743\u8F6C\u8F7D\uFF01",-1),r=n("li",null,"\u672C\u6587\u4F5C\u8005\uFF1Awwwxmu",-1),k=s("\u539F\u6587\u5730\u5740:"),d={href:"https://www.weiweiblog.cn/13string/",target:"_blank",rel:"noopener noreferrer"},v=s("https://www.weiweiblog.cn/13string/"),m=n("h2",{id:"_1-kmp-\u7B97\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-kmp-\u7B97\u6CD5","aria-hidden":"true"},"#"),s(" 1. KMP \u7B97\u6CD5")],-1),b=n("p",null,"\u8C08\u5230\u5B57\u7B26\u4E32\u95EE\u9898\uFF0C\u4E0D\u5F97\u4E0D\u63D0\u7684\u5C31\u662F KMP \u7B97\u6CD5\uFF0C\u5B83\u662F\u7528\u6765\u89E3\u51B3\u5B57\u7B26\u4E32\u67E5\u627E\u7684\u95EE\u9898\uFF0C\u53EF\u4EE5\u5728\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF08S\uFF09\u4E2D\u67E5\u627E\u4E00\u4E2A\u5B50\u4E32\uFF08W\uFF09\u51FA\u73B0\u7684\u4F4D\u7F6E\u3002KMP \u7B97\u6CD5\u628A\u5B57\u7B26\u5339\u914D\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u7F29\u5C0F\u5230 O(m+n) ,\u800C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E5F\u53EA\u6709O(m)\u3002\u56E0\u4E3A\u201C\u66B4\u529B\u641C\u7D22\u201D\u7684\u65B9\u6CD5\u4F1A\u53CD\u590D\u56DE\u6EAF\u4E3B\u4E32\uFF0C\u5BFC\u81F4\u6548\u7387\u4F4E\u4E0B\uFF0C\u800CKMP\u7B97\u6CD5\u53EF\u4EE5\u5229\u7528\u5DF2\u7ECF\u90E8\u5206\u5339\u914D\u8FD9\u4E2A\u6709\u6548\u4FE1\u606F\uFF0C\u4FDD\u6301\u4E3B\u4E32\u4E0A\u7684\u6307\u9488\u4E0D\u56DE\u6EAF\uFF0C\u901A\u8FC7\u4FEE\u6539\u5B50\u4E32\u7684\u6307\u9488\uFF0C\u8BA9\u6A21\u5F0F\u4E32\u5C3D\u91CF\u5730\u79FB\u52A8\u5230\u6709\u6548\u7684\u4F4D\u7F6E\u3002",-1),h=n("p",null,"\u5177\u4F53\u7B97\u6CD5\u7EC6\u8282\u8BF7\u53C2\u8003\uFF1A",-1),g=n("strong",null,"\u5B57\u7B26\u4E32\u5339\u914D\u7684KMP\u7B97\u6CD5:",-1),w=s(),f={href:"http://www.ruanyifeng.com/blog/2013/05/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm.html",target:"_blank",rel:"noopener noreferrer"},y=s("http://www.ruanyifeng.com/blog/2013/05/Knuth\u2013Morris\u2013Pratt_algorithm.html"),_=n("strong",null,"\u4ECE\u5934\u5230\u5C3E\u5F7B\u5E95\u7406\u89E3KMP:",-1),q=s(),x={href:"https://blog.csdn.net/v_july_v/article/details/7041827",target:"_blank",rel:"noopener noreferrer"},S=s("https://blog.csdn.net/v_july_v/article/details/7041827"),j=n("strong",null,"\u5982\u4F55\u66F4\u597D\u7684\u7406\u89E3\u548C\u638C\u63E1 KMP \u7B97\u6CD5?:",-1),A=s(),M={href:"https://www.zhihu.com/question/21923021",target:"_blank",rel:"noopener noreferrer"},P=s("https://www.zhihu.com/question/21923021"),C=n("strong",null,"KMP \u7B97\u6CD5\u8BE6\u7EC6\u89E3\u6790:",-1),K=s(),B={href:"https://blog.sengxian.com/algorithms/kmp",target:"_blank",rel:"noopener noreferrer"},L=s("https://blog.sengxian.com/algorithms/kmp"),E=n("strong",null,"\u56FE\u89E3 KMP \u7B97\u6CD5:",-1),O=s(),I={href:"http://blog.jobbole.com/76611/",target:"_blank",rel:"noopener noreferrer"},X=s("http://blog.jobbole.com/76611/"),D=n("strong",null,"\u6C6A\u90FD\u80FD\u542C\u61C2\u7684KMP\u5B57\u7B26\u4E32\u5339\u914D\u7B97\u6CD5\u3010\u53CC\u8BED\u5B57\u5E55\u3011:",-1),H=s(),T={href:"https://www.bilibili.com/video/av3246487/?from=search&seid=17173603269940723925",target:"_blank",rel:"noopener noreferrer"},N=s("https://www.bilibili.com/video/av3246487/?from=search&seid=17173603269940723925"),V=n("strong",null,"KMP\u5B57\u7B26\u4E32\u5339\u914D\u7B97\u6CD51:",-1),Y=s(),W={href:"https://www.bilibili.com/video/av11866460?from=search&seid=12730654434238709250",target:"_blank",rel:"noopener noreferrer"},z=s("https://www.bilibili.com/video/av11866460?from=search&seid=12730654434238709250"),J=n("p",null,[n("strong",null,"\u9664\u6B64\u4E4B\u5916\uFF0C\u518D\u6765\u4E86\u89E3\u4E00\u4E0BBM\u7B97\u6CD5\uFF01")],-1),F=s("BM\u7B97\u6CD5\u4E5F\u662F\u4E00\u79CD\u7CBE\u786E\u5B57\u7B26\u4E32\u5339\u914D\u7B97\u6CD5\uFF0C\u5B83\u91C7\u7528\u4ECE\u53F3\u5411\u5DE6\u6BD4\u8F83\u7684\u65B9\u6CD5\uFF0C\u540C\u65F6\u5E94\u7528\u5230\u4E86\u4E24\u79CD\u542F\u53D1\u5F0F\u89C4\u5219\uFF0C\u5373\u574F\u5B57\u7B26\u89C4\u5219 \u548C\u597D\u540E\u7F00\u89C4\u5219 \uFF0C\u6765\u51B3\u5B9A\u5411\u53F3\u8DF3\u8DC3\u7684\u8DDD\u79BB\u3002\u57FA\u672C\u601D\u8DEF\u5C31\u662F\u4ECE\u53F3\u5F80\u5DE6\u8FDB\u884C\u5B57\u7B26\u5339\u914D\uFF0C\u9047\u5230\u4E0D\u5339\u914D\u7684\u5B57\u7B26\u540E\u4ECE\u574F\u5B57\u7B26\u8868\u548C\u597D\u540E\u7F00\u8868\u627E\u4E00\u4E2A\u6700\u5927\u7684\u53F3\u79FB\u503C\uFF0C\u5C06\u6A21\u5F0F\u4E32\u53F3\u79FB\u7EE7\u7EED\u5339\u914D\u3002 \u300A\u5B57\u7B26\u4E32\u5339\u914D\u7684KMP\u7B97\u6CD5\u300B:"),G={href:"http://www.ruanyifeng.com/blog/2013/05/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm.html",target:"_blank",rel:"noopener noreferrer"},Q=s("http://www.ruanyifeng.com/blog/2013/05/Knuth\u2013Morris\u2013Pratt_algorithm.html"),R=p(`<h2 id="_2-\u66FF\u6362\u7A7A\u683C" tabindex="-1"><a class="header-anchor" href="#_2-\u66FF\u6362\u7A7A\u683C" aria-hidden="true">#</a> 2. \u66FF\u6362\u7A7A\u683C</h2><blockquote><p>\u5251\u6307offer\uFF1A\u8BF7\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\uFF0C\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u4E2D\u7684\u6BCF\u4E2A\u7A7A\u683C\u66FF\u6362\u6210\u201C%20\u201D\u3002\u4F8B\u5982\uFF0C\u5F53\u5B57\u7B26\u4E32\u4E3AWe Are Happy.\u5219\u7ECF\u8FC7\u66FF\u6362\u4E4B\u540E\u7684\u5B57\u7B26\u4E32\u4E3AWe%20Are%20Happy\u3002</p></blockquote><p>\u8FD9\u91CC\u6211\u63D0\u4F9B\u4E86\u4E24\u79CD\u65B9\u6CD5\uFF1A\u2460\u5E38\u89C4\u65B9\u6CD5\uFF1B\u2461\u5229\u7528 API \u89E3\u51B3\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//https://www.weiweiblog.cn/replacespace/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

  <span class="token doc-comment comment">/**
   * \u7B2C\u4E00\u79CD\u65B9\u6CD5\uFF1A\u5E38\u89C4\u65B9\u6CD5\u3002\u5229\u7528String.charAt(i)\u4EE5\u53CAString.valueOf(char).equals(&quot; &quot;
   * )\u904D\u5386\u5B57\u7B26\u4E32\u5E76\u5224\u65AD\u5143\u7D20\u662F\u5426\u4E3A\u7A7A\u683C\u3002\u662F\u5219\u66FF\u6362\u4E3A&quot;%20&quot;,\u5426\u5219\u4E0D\u66FF\u6362
   */</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">replaceSpace</span><span class="token punctuation">(</span><span class="token class-name">StringBuffer</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">int</span> length <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// System.out.println(&quot;length=&quot; + length);</span>
    <span class="token class-name">StringBuffer</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">char</span> b <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;%20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * \u7B2C\u4E8C\u79CD\u65B9\u6CD5\uFF1A\u5229\u7528API\u66FF\u6362\u6389\u6240\u7528\u7A7A\u683C\uFF0C\u4E00\u884C\u4EE3\u7801\u89E3\u51B3\u95EE\u9898
   */</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">replaceSpace2</span><span class="token punctuation">(</span><span class="token class-name">StringBuffer</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\s&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;%20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u66FF\u6362\u56FA\u5B9A\u5B57\u7B26\uFF08\u6BD4\u5982\u7A7A\u683C\uFF09\u7684\u60C5\u51B5\uFF0C\u7B2C\u4E8C\u79CD\u65B9\u6CD5\u5176\u5B9E\u53EF\u4EE5\u4F7F\u7528 <code>replace</code> \u65B9\u6CD5\u66FF\u6362\uFF0C\u6027\u80FD\u66F4\u597D!</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>str<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span><span class="token string">&quot;%20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-\u6700\u957F\u516C\u5171\u524D\u7F00" tabindex="-1"><a class="header-anchor" href="#_3-\u6700\u957F\u516C\u5171\u524D\u7F00" aria-hidden="true">#</a> 3. \u6700\u957F\u516C\u5171\u524D\u7F00</h2><blockquote><p>Leetcode: \u7F16\u5199\u4E00\u4E2A\u51FD\u6570\u6765\u67E5\u627E\u5B57\u7B26\u4E32\u6570\u7EC4\u4E2D\u7684\u6700\u957F\u516C\u5171\u524D\u7F00\u3002\u5982\u679C\u4E0D\u5B58\u5728\u516C\u5171\u524D\u7F00\uFF0C\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32 &quot;&quot;\u3002</p></blockquote><p>\u793A\u4F8B 1:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: [&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]
\u8F93\u51FA: &quot;fl&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u793A\u4F8B 2:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: [&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]
\u8F93\u51FA: &quot;&quot;
\u89E3\u91CA: \u8F93\u5165\u4E0D\u5B58\u5728\u516C\u5171\u524D\u7F00\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u601D\u8DEF\u5F88\u7B80\u5355\uFF01\u5148\u5229\u7528Arrays.sort(strs)\u4E3A\u6570\u7EC4\u6392\u5E8F\uFF0C\u518D\u5C06\u6570\u7EC4\u7B2C\u4E00\u4E2A\u5143\u7D20\u548C\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u7684\u5B57\u7B26\u4ECE\u524D\u5F80\u540E\u5BF9\u6BD4\u5373\u53EF\uFF01</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">replaceSpace</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>

		<span class="token comment">// \u5982\u679C\u68C0\u67E5\u503C\u4E0D\u5408\u6CD5\u53CA\u5C31\u8FD4\u56DE\u7A7A\u4E32</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">checkStrs</span><span class="token punctuation">(</span>strs<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// \u6570\u7EC4\u957F\u5EA6</span>
		<span class="token keyword">int</span> len <span class="token operator">=</span> strs<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
		<span class="token comment">// \u7528\u4E8E\u4FDD\u5B58\u7ED3\u679C</span>
		<span class="token class-name">StringBuilder</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u7ED9\u5B57\u7B26\u4E32\u6570\u7EC4\u7684\u5143\u7D20\u6309\u7167\u5347\u5E8F\u6392\u5E8F(\u5305\u542B\u6570\u5B57\u7684\u8BDD\uFF0C\u6570\u5B57\u4F1A\u6392\u5728\u524D\u9762)</span>
		<span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>strs<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> m <span class="token operator">=</span> strs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> n <span class="token operator">=</span> strs<span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>strs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> strs<span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>

		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">chechStrs</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>strs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u904D\u5386strs\u68C0\u67E5\u5143\u7D20\u503C</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> strs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>strs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> strs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
					flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> flag<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u6D4B\u8BD5</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;customer&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;car&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cat&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
		<span class="token comment">// String[] strs = { &quot;customer&quot;, &quot;car&quot;, null };//\u7A7A\u4E32</span>
		<span class="token comment">// String[] strs = {};//\u7A7A\u4E32</span>
		<span class="token comment">// String[] strs = null;//\u7A7A\u4E32</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Main</span><span class="token punctuation">.</span><span class="token function">replaceSpace</span><span class="token punctuation">(</span>strs<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// c</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u56DE\u6587\u4E32" tabindex="-1"><a class="header-anchor" href="#_4-\u56DE\u6587\u4E32" aria-hidden="true">#</a> 4. \u56DE\u6587\u4E32</h2><h3 id="_4-1-\u6700\u957F\u56DE\u6587\u4E32" tabindex="-1"><a class="header-anchor" href="#_4-1-\u6700\u957F\u56DE\u6587\u4E32" aria-hidden="true">#</a> 4.1. \u6700\u957F\u56DE\u6587\u4E32</h3><blockquote><p>LeetCode: \u7ED9\u5B9A\u4E00\u4E2A\u5305\u542B\u5927\u5199\u5B57\u6BCD\u548C\u5C0F\u5199\u5B57\u6BCD\u7684\u5B57\u7B26\u4E32\uFF0C\u627E\u5230\u901A\u8FC7\u8FD9\u4E9B\u5B57\u6BCD\u6784\u9020\u6210\u7684\u6700\u957F\u7684\u56DE\u6587\u4E32\u3002\u5728\u6784\u9020\u8FC7\u7A0B\u4E2D\uFF0C\u8BF7\u6CE8\u610F\u533A\u5206\u5927\u5C0F\u5199\u3002\u6BD4\u5982<code>&quot;Aa&quot;</code>\u4E0D\u80FD\u5F53\u505A\u4E00\u4E2A\u56DE\u6587\u5B57\u7B26\u4E32\u3002\u6CE8 \u610F:\u5047\u8BBE\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u4E0D\u4F1A\u8D85\u8FC7 1010\u3002</p></blockquote>`,17),U=s("\u56DE\u6587\u4E32\uFF1A\u201C\u56DE\u6587\u4E32\u201D\u662F\u4E00\u4E2A\u6B63\u8BFB\u548C\u53CD\u8BFB\u90FD\u4E00\u6837\u7684\u5B57\u7B26\u4E32\uFF0C\u6BD4\u5982\u201Clevel\u201D\u6216\u8005\u201Cnoon\u201D\u7B49\u7B49\u5C31\u662F\u56DE\u6587\u4E32\u3002\u2014\u2014\u767E\u5EA6\u767E\u79D1 \u5730\u5740\uFF1A"),Z={href:"https://baike.baidu.com/item/%E5%9B%9E%E6%96%87%E4%B8%B2/1274921?fr=aladdin",target:"_blank",rel:"noopener noreferrer"},$=s("https://baike.baidu.com/item/\u56DE\u6587\u4E32/1274921?fr=aladdin"),nn=p(`<p>\u793A\u4F8B 1:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165:
&quot;abccccdd&quot;

\u8F93\u51FA:
7

\u89E3\u91CA:
\u6211\u4EEC\u53EF\u4EE5\u6784\u9020\u7684\u6700\u957F\u7684\u56DE\u6587\u4E32\u662F&quot;dccaccd&quot;, \u5B83\u7684\u957F\u5EA6\u662F 7\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u4E0A\u9762\u5DF2\u7ECF\u77E5\u9053\u4E86\u4EC0\u4E48\u662F\u56DE\u6587\u4E32\uFF1F\u73B0\u5728\u6211\u4EEC\u8003\u8651\u4E00\u4E0B\u53EF\u4EE5\u6784\u6210\u56DE\u6587\u4E32\u7684\u4E24\u79CD\u60C5\u51B5\uFF1A</p>`,3),sn=n("li",null,"\u5B57\u7B26\u51FA\u73B0\u6B21\u6570\u4E3A\u53CC\u6570\u7684\u7EC4\u5408",-1),an=n("strong",null,"\u5B57\u7B26\u51FA\u73B0\u6B21\u6570\u4E3A\u5076\u6570\u7684\u7EC4\u5408+\u5355\u4E2A\u5B57\u7B26\u4E2D\u51FA\u73B0\u6B21\u6570\u6700\u591A\u4E14\u4E3A\u5947\u6570\u6B21\u7684\u5B57\u7B26",-1),tn=s(" \uFF08\u53C2\u89C1 "),pn={href:"https://github.com/Snailclimb/JavaGuide/issues/665",target:"_blank",rel:"noopener noreferrer"},en=s("issue665"),on=s(" \uFF09"),cn=p(`<p>\u7EDF\u8BA1\u5B57\u7B26\u51FA\u73B0\u7684\u6B21\u6570\u5373\u53EF\uFF0C\u53CC\u6570\u624D\u80FD\u6784\u6210\u56DE\u6587\u3002\u56E0\u4E3A\u5141\u8BB8\u4E2D\u95F4\u4E00\u4E2A\u6570\u5355\u72EC\u51FA\u73B0\uFF0C\u6BD4\u5982\u201Cabcba\u201D\uFF0C\u6240\u4EE5\u5982\u679C\u6700\u540E\u6709\u5B57\u6BCD\u843D\u5355\uFF0C\u603B\u957F\u5EA6\u53EF\u4EE5\u52A0 1\u3002\u9996\u5148\u5C06\u5B57\u7B26\u4E32\u8F6C\u53D8\u4E3A\u5B57\u7B26\u6570\u7EC4\u3002\u7136\u540E\u904D\u5386\u8BE5\u6570\u7EC4\uFF0C\u5224\u65AD\u5BF9\u5E94\u5B57\u7B26\u662F\u5426\u5728hashset\u4E2D\uFF0C\u5982\u679C\u4E0D\u5728\u5C31\u52A0\u8FDB\u53BB\uFF0C\u5982\u679C\u5728\u5C31\u8BA9count++\uFF0C\u7136\u540E\u79FB\u9664\u8BE5\u5B57\u7B26\uFF01\u8FD9\u6837\u5C31\u80FD\u627E\u5230\u51FA\u73B0\u6B21\u6570\u4E3A\u53CC\u6570\u7684\u5B57\u7B26\u4E2A\u6570\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//https://leetcode-cn.com/problems/longest-palindrome/description/</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span>  <span class="token keyword">int</span> <span class="token function">longestPalindrome</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7528\u4E8E\u5B58\u653E\u5B57\u7B26</span>
    <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> hashset <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> chars<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hashset<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u5982\u679Chashset\u6CA1\u6709\u8BE5\u5B57\u7B26\u5C31\u4FDD\u5B58\u8FDB\u53BB</span>
        hashset<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">// \u5982\u679C\u6709,\u5C31\u8BA9count++\uFF08\u8BF4\u660E\u627E\u5230\u4E86\u4E00\u4E2A\u6210\u5BF9\u7684\u5B57\u7B26\uFF09\uFF0C\u7136\u540E\u628A\u8BE5\u5B57\u7B26\u79FB\u9664</span>
        hashset<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        count<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> hashset<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> count <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">:</span> count <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-\u9A8C\u8BC1\u56DE\u6587\u4E32" tabindex="-1"><a class="header-anchor" href="#_4-2-\u9A8C\u8BC1\u56DE\u6587\u4E32" aria-hidden="true">#</a> 4.2. \u9A8C\u8BC1\u56DE\u6587\u4E32</h3><blockquote><p>LeetCode: \u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u9A8C\u8BC1\u5B83\u662F\u5426\u662F\u56DE\u6587\u4E32\uFF0C\u53EA\u8003\u8651\u5B57\u6BCD\u548C\u6570\u5B57\u5B57\u7B26\uFF0C\u53EF\u4EE5\u5FFD\u7565\u5B57\u6BCD\u7684\u5927\u5C0F\u5199\u3002 \u8BF4\u660E\uFF1A\u672C\u9898\u4E2D\uFF0C\u6211\u4EEC\u5C06\u7A7A\u5B57\u7B26\u4E32\u5B9A\u4E49\u4E3A\u6709\u6548\u7684\u56DE\u6587\u4E32\u3002</p></blockquote><p>\u793A\u4F8B 1:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: &quot;A man, a plan, a canal: Panama&quot;
\u8F93\u51FA: true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u793A\u4F8B 2:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: &quot;race a car&quot;
\u8F93\u51FA: false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//https://leetcode-cn.com/problems/valid-palindrome/description/</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span>  <span class="token keyword">boolean</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> r <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4ECE\u5934\u548C\u5C3E\u5F00\u59CB\u5411\u4E2D\u95F4\u904D\u5386</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isLetterOrDigit</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u5B57\u7B26\u4E0D\u662F\u5B57\u6BCD\u548C\u6570\u5B57\u7684\u60C5\u51B5</span>
        l<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isLetterOrDigit</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u5B57\u7B26\u4E0D\u662F\u5B57\u6BCD\u548C\u6570\u5B57\u7684\u60C5\u51B5</span>
        r<span class="token operator">--</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5224\u65AD\u4E8C\u8005\u662F\u5426\u76F8\u7B49</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        l<span class="token operator">++</span><span class="token punctuation">;</span>
        r<span class="token operator">--</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-\u6700\u957F\u56DE\u6587\u5B50\u4E32" tabindex="-1"><a class="header-anchor" href="#_4-3-\u6700\u957F\u56DE\u6587\u5B50\u4E32" aria-hidden="true">#</a> 4.3. \u6700\u957F\u56DE\u6587\u5B50\u4E32</h3><blockquote><p>Leetcode: LeetCode: \u6700\u957F\u56DE\u6587\u5B50\u4E32 \u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32 s\uFF0C\u627E\u5230 s \u4E2D\u6700\u957F\u7684\u56DE\u6587\u5B50\u4E32\u3002\u4F60\u53EF\u4EE5\u5047\u8BBE s \u7684\u6700\u5927\u957F\u5EA6\u4E3A1000\u3002</p></blockquote><p>\u793A\u4F8B 1\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: &quot;babad&quot;
\u8F93\u51FA: &quot;bab&quot;
\u6CE8\u610F: &quot;aba&quot;\u4E5F\u662F\u4E00\u4E2A\u6709\u6548\u7B54\u6848\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u793A\u4F8B 2\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: &quot;cbbd&quot;
\u8F93\u51FA: &quot;bb&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u67D0\u4E2A\u5143\u7D20\u4E3A\u4E2D\u5FC3\uFF0C\u5206\u522B\u8BA1\u7B97\u5076\u6570\u957F\u5EA6\u7684\u56DE\u6587\u6700\u5927\u957F\u5EA6\u548C\u5947\u6570\u957F\u5EA6\u7684\u56DE\u6587\u6700\u5927\u957F\u5EA6\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//https://leetcode-cn.com/problems/longest-palindromic-substring/description/</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">int</span> index<span class="token punctuation">,</span> len<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">longestPalindrome</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> s<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">PalindromeHelper</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> i<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">PalindromeHelper</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> i<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> index <span class="token operator">+</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">PalindromeHelper</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> r <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span> <span class="token operator">==</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      l<span class="token operator">--</span><span class="token punctuation">;</span>
      r<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">&lt;</span> r <span class="token operator">-</span> l <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      index <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
      len <span class="token operator">=</span> r <span class="token operator">-</span> l <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-\u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#_4-4-\u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217" aria-hidden="true">#</a> 4.4. \u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217</h3><blockquote><p>LeetCode: \u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217 \u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32s\uFF0C\u627E\u5230\u5176\u4E2D\u6700\u957F\u7684\u56DE\u6587\u5B50\u5E8F\u5217\u3002\u53EF\u4EE5\u5047\u8BBEs\u7684\u6700\u5927\u957F\u5EA6\u4E3A1000\u3002 <strong>\u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217\u548C\u4E0A\u4E00\u9898\u6700\u957F\u56DE\u6587\u5B50\u4E32\u7684\u533A\u522B\u662F\uFF0C\u5B50\u4E32\u662F\u5B57\u7B26\u4E32\u4E2D\u8FDE\u7EED\u7684\u4E00\u4E2A\u5E8F\u5217\uFF0C\u800C\u5B50\u5E8F\u5217\u662F\u5B57\u7B26\u4E32\u4E2D\u4FDD\u6301\u76F8\u5BF9\u4F4D\u7F6E\u7684\u5B57\u7B26\u5E8F\u5217\uFF0C\u4F8B\u5982\uFF0C&quot;bbbb&quot;\u53EF\u4EE5\u662F\u5B57\u7B26\u4E32&quot;bbbab&quot;\u7684\u5B50\u5E8F\u5217\u4F46\u4E0D\u662F\u5B50\u4E32\u3002</strong></p></blockquote><p>\u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32s\uFF0C\u627E\u5230\u5176\u4E2D\u6700\u957F\u7684\u56DE\u6587\u5B50\u5E8F\u5217\u3002\u53EF\u4EE5\u5047\u8BBEs\u7684\u6700\u5927\u957F\u5EA6\u4E3A1000\u3002</p><p>\u793A\u4F8B 1:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165:
&quot;bbbab&quot;
\u8F93\u51FA:
4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u4E2A\u53EF\u80FD\u7684\u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217\u4E3A &quot;bbbb&quot;\u3002</p><p>\u793A\u4F8B 2:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165:
&quot;cbbd&quot;
\u8F93\u51FA:
2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u4E2A\u53EF\u80FD\u7684\u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217\u4E3A &quot;bb&quot;\u3002</p><p><strong>\u52A8\u6001\u89C4\u5212\uFF1A</strong> dp[i][j] = dp[i+1][j-1] + 2 if s.charAt(i) == s.charAt(j) otherwise, dp[i][j] = Math.max(dp[i+1][j], dp[i][j-1])</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">longestPalindromeSubseq</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>len<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-\u62EC\u53F7\u5339\u914D\u6DF1\u5EA6" tabindex="-1"><a class="header-anchor" href="#_5-\u62EC\u53F7\u5339\u914D\u6DF1\u5EA6" aria-hidden="true">#</a> 5. \u62EC\u53F7\u5339\u914D\u6DF1\u5EA6</h2><blockquote><p>\u7231\u5947\u827A 2018 \u79CB\u62DB Java\uFF1A \u4E00\u4E2A\u5408\u6CD5\u7684\u62EC\u53F7\u5339\u914D\u5E8F\u5217\u6709\u4EE5\u4E0B\u5B9A\u4E49:</p><ol><li>\u7A7A\u4E32&quot;&quot;\u662F\u4E00\u4E2A\u5408\u6CD5\u7684\u62EC\u53F7\u5339\u914D\u5E8F\u5217</li><li>\u5982\u679C&quot;X&quot;\u548C&quot;Y&quot;\u90FD\u662F\u5408\u6CD5\u7684\u62EC\u53F7\u5339\u914D\u5E8F\u5217,&quot;XY&quot;\u4E5F\u662F\u4E00\u4E2A\u5408\u6CD5\u7684\u62EC\u53F7\u5339\u914D\u5E8F\u5217</li><li>\u5982\u679C&quot;X&quot;\u662F\u4E00\u4E2A\u5408\u6CD5\u7684\u62EC\u53F7\u5339\u914D\u5E8F\u5217,\u90A3\u4E48&quot;(X)&quot;\u4E5F\u662F\u4E00\u4E2A\u5408\u6CD5\u7684\u62EC\u53F7\u5339\u914D\u5E8F\u5217</li><li>\u6BCF\u4E2A\u5408\u6CD5\u7684\u62EC\u53F7\u5E8F\u5217\u90FD\u53EF\u4EE5\u7531\u4EE5\u4E0A\u89C4\u5219\u751F\u6210\u3002</li></ol></blockquote><blockquote><p>\u4F8B\u5982: &quot;&quot;,&quot;()&quot;,&quot;()()&quot;,&quot;((()))&quot;\u90FD\u662F\u5408\u6CD5\u7684\u62EC\u53F7\u5E8F\u5217 \u5BF9\u4E8E\u4E00\u4E2A\u5408\u6CD5\u7684\u62EC\u53F7\u5E8F\u5217\u6211\u4EEC\u53C8\u6709\u4EE5\u4E0B\u5B9A\u4E49\u5B83\u7684\u6DF1\u5EA6:</p><ol><li>\u7A7A\u4E32&quot;&quot;\u7684\u6DF1\u5EA6\u662F0</li><li>\u5982\u679C\u5B57\u7B26\u4E32&quot;X&quot;\u7684\u6DF1\u5EA6\u662Fx,\u5B57\u7B26\u4E32&quot;Y&quot;\u7684\u6DF1\u5EA6\u662Fy,\u90A3\u4E48\u5B57\u7B26\u4E32&quot;XY&quot;\u7684\u6DF1\u5EA6\u4E3Amax(x,y)</li><li>\u5982\u679C&quot;X&quot;\u7684\u6DF1\u5EA6\u662Fx,\u90A3\u4E48\u5B57\u7B26\u4E32&quot;(X)&quot;\u7684\u6DF1\u5EA6\u662Fx+1</li></ol></blockquote><blockquote><p>\u4F8B\u5982: &quot;()()()&quot;\u7684\u6DF1\u5EA6\u662F1,&quot;((()))&quot;\u7684\u6DF1\u5EA6\u662F3\u3002\u725B\u725B\u73B0\u5728\u7ED9\u4F60\u4E00\u4E2A\u5408\u6CD5\u7684\u62EC\u53F7\u5E8F\u5217,\u9700\u8981\u4F60\u8BA1\u7B97\u51FA\u5176\u6DF1\u5EA6\u3002</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\u63CF\u8FF0:
\u8F93\u5165\u5305\u62EC\u4E00\u4E2A\u5408\u6CD5\u7684\u62EC\u53F7\u5E8F\u5217s,s\u957F\u5EA6length(2 \u2264 length \u2264 50),\u5E8F\u5217\u4E2D\u53EA\u5305\u542B&#39;(&#39;\u548C&#39;)&#39;\u3002

\u8F93\u51FA\u63CF\u8FF0:
\u8F93\u51FA\u4E00\u4E2A\u6B63\u6574\u6570,\u5373\u8FD9\u4E2A\u5E8F\u5217\u7684\u6DF1\u5EA6\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u793A\u4F8B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165:
(())
\u8F93\u51FA:
2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * https://www.nowcoder.com/test/8246651/summary
 * 
 * <span class="token keyword">@author</span> Snailclimb
 * <span class="token keyword">@date</span> 2018\u5E749\u67086\u65E5
 * @Description: TODO \u6C42\u7ED9\u5B9A\u5408\u6CD5\u62EC\u53F7\u5E8F\u5217\u7684\u6DF1\u5EA6
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> s <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">&#39;(&#39;</span><span class="token punctuation">)</span>
        cnt<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span>
        cnt<span class="token operator">--</span><span class="token punctuation">;</span>
      max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> cnt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-\u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570" tabindex="-1"><a class="header-anchor" href="#_6-\u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570" aria-hidden="true">#</a> 6. \u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570</h2><blockquote><p>\u5251\u6307offer: \u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u4E00\u4E2A\u6574\u6570(\u5B9E\u73B0Integer.valueOf(string)\u7684\u529F\u80FD\uFF0C\u4F46\u662Fstring\u4E0D\u7B26\u5408\u6570\u5B57\u8981\u6C42\u65F6\u8FD4\u56DE0)\uFF0C\u8981\u6C42\u4E0D\u80FD\u4F7F\u7528\u5B57\u7B26\u4E32\u8F6C\u6362\u6574\u6570\u7684\u5E93\u51FD\u6570\u3002 \u6570\u503C\u4E3A0\u6216\u8005\u5B57\u7B26\u4E32\u4E0D\u662F\u4E00\u4E2A\u5408\u6CD5\u7684\u6570\u503C\u5219\u8FD4\u56DE0\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//https://www.weiweiblog.cn/strtoint/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">StrToInt</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5224\u65AD\u662F\u5426\u5B58\u5728\u7B26\u53F7\u4F4D</span>
    <span class="token keyword">int</span> flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>chars<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;+&#39;</span><span class="token punctuation">)</span>
      flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>chars<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;-&#39;</span><span class="token punctuation">)</span>
      flag <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> start <span class="token operator">=</span> flag <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">// \u4FDD\u5B58\u7ED3\u679C</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> chars<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isDigit</span><span class="token punctuation">(</span>chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u8C03\u7528Character.isDigit(char)\u65B9\u6CD5\u5224\u65AD\u662F\u5426\u662F\u6570\u5B57\uFF0C\u662F\u8FD4\u56DETrue\uFF0C\u5426\u5219False</span>
        <span class="token keyword">int</span> temp <span class="token operator">=</span> chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">;</span>
        res <span class="token operator">=</span> res <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> temp<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
   <span class="token keyword">return</span> flag <span class="token operator">!=</span> <span class="token number">2</span> <span class="token operator">?</span> res <span class="token operator">:</span> <span class="token operator">-</span>res<span class="token punctuation">;</span>

  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// TODO Auto-generated method stub</span>
    <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token string">&quot;-12312312&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F7F\u7528\u5E93\u51FD\u6570\u8F6C\u6362\uFF1A&quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token class-name">Main<span class="token punctuation">.</span>StrToInt</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F7F\u7528\u81EA\u5DF1\u5199\u7684\u65B9\u6CD5\u8F6C\u6362\uFF1A&quot;</span> <span class="token operator">+</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,40);function ln(un,rn){const a=l("ExternalLinkIcon");return o(),c("div",null,[n("blockquote",null,[u,n("ul",null,[r,n("li",null,[k,n("a",d,[v,t(a)])])])]),m,b,h,n("ul",null,[n("li",null,[g,w,n("a",f,[y,t(a)])]),n("li",null,[_,q,n("a",x,[S,t(a)])]),n("li",null,[j,A,n("a",M,[P,t(a)])]),n("li",null,[C,K,n("a",B,[L,t(a)])]),n("li",null,[E,O,n("a",I,[X,t(a)])]),n("li",null,[D,H,n("a",T,[N,t(a)])]),n("li",null,[V,Y,n("a",W,[z,t(a)])])]),J,n("blockquote",null,[n("p",null,[F,n("a",G,[Q,t(a)])])]),R,n("blockquote",null,[n("p",null,[U,n("a",Z,[$,t(a)])])]),nn,n("ul",null,[sn,n("li",null,[an,tn,n("strong",null,[n("a",pn,[en,t(a)])]),on])]),cn])}var vn=e(i,[["render",ln],["__file","string-algorithm-problems.html.vue"]]);export{vn as default};
