export const data = JSON.parse("{\"key\":\"v-3cf6ceee\",\"path\":\"/code/java/common/jvm/JVMOptimize.html\",\"title\":\"JVM 调优及常用命令记录\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"JVM 调优及常用命令记录\",\"date\":\"2022-07-27T00:00:00.000Z\",\"category\":[\"JVM\"],\"tag\":[\"JVM\"],\"summary\":\"JVM调优及常用命令记录 大家好，我是咖飞，今天跟大家一起学习JVM调优 1、调优原则 一般的Java项目通常使用不到具体参数级别的调优，要知道JVM调优应该算是Java性能优化的最后选择。JVM调优并不是性能问题的常规手段，性能问题一般第一选择是优化程序，最后的选择才是进行JVM调优。 \\\" JVM的自动内存管理本来就是为了帮助开发人员简化内存管理的流程。即\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vuepress-theme-hope-v2-demo.mrhope.site/code/java/common/jvm/JVMOptimize.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"咖飞的博客\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"JVM 调优及常用命令记录\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://vuepress-theme-hope-v2-demo.mrhope.site/\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"JVM 调优及常用命令记录\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"JVM\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2022-07-27T00:00:00.000Z\"}]]},\"excerpt\":\"\",\"headers\":[{\"level\":3,\"title\":\"基本参数\",\"slug\":\"基本参数\",\"children\":[]},{\"level\":2,\"title\":\"5.2、并行收集器相关参数\",\"slug\":\"_5-2、并行收集器相关参数\",\"children\":[]},{\"level\":2,\"title\":\"5.3、CMS相关参数\",\"slug\":\"_5-3、cms相关参数\",\"children\":[]},{\"level\":2,\"title\":\"5.4、辅助信息\",\"slug\":\"_5-4、辅助信息\",\"children\":[]},{\"level\":2,\"title\":\"6.1、JDK工具\",\"slug\":\"_6-1、jdk工具\",\"children\":[]},{\"level\":2,\"title\":\"6.2、Linux 命令行工具\",\"slug\":\"_6-2、linux-命令行工具\",\"children\":[]},{\"level\":2,\"title\":\"7.1、选择合适的垃圾回收器\",\"slug\":\"_7-1、选择合适的垃圾回收器\",\"children\":[]},{\"level\":2,\"title\":\"7.2、调整内存大小\",\"slug\":\"_7-2、调整内存大小\",\"children\":[]},{\"level\":2,\"title\":\"7.3、设置符合预期的停顿时间\",\"slug\":\"_7-3、设置符合预期的停顿时间\",\"children\":[]},{\"level\":2,\"title\":\"7.4、调整内存区域大小比率\",\"slug\":\"_7-4、调整内存区域大小比率\",\"children\":[]},{\"level\":2,\"title\":\"7.5、调整对象升老年代的年龄\",\"slug\":\"_7-5、调整对象升老年代的年龄\",\"children\":[]},{\"level\":2,\"title\":\"7.6、调整大对象的标准\",\"slug\":\"_7-6、调整大对象的标准\",\"children\":[]},{\"level\":2,\"title\":\"7.7、调整GC的触发时机\",\"slug\":\"_7-7、调整gc的触发时机\",\"children\":[]},{\"level\":2,\"title\":\"7.8、调整 JVM本地内存大小\",\"slug\":\"_7-8、调整-jvm本地内存大小\",\"children\":[]},{\"level\":2,\"title\":\"8.1、网站流量浏览量暴增后，网站反应页面响很慢\",\"slug\":\"_8-1、网站流量浏览量暴增后-网站反应页面响很慢\",\"children\":[]},{\"level\":2,\"title\":\"8.2、后台导出数据引发的OOM\",\"slug\":\"_8-2、后台导出数据引发的oom\",\"children\":[]},{\"level\":2,\"title\":\"8.3、单个缓存数据过大导致的系统CPU飚高\",\"slug\":\"_8-3、单个缓存数据过大导致的系统cpu飚高\",\"children\":[]},{\"level\":2,\"title\":\"8.4、CPU经常100% 问题定位\",\"slug\":\"_8-4、cpu经常100-问题定位\",\"children\":[]},{\"level\":2,\"title\":\"8.5、内存飚高问题定位\",\"slug\":\"_8-5、内存飚高问题定位\",\"children\":[]},{\"level\":2,\"title\":\"8.6、数据分析平台系统频繁 Full GC\",\"slug\":\"_8-6、数据分析平台系统频繁-full-gc\",\"children\":[]},{\"level\":2,\"title\":\"8.7、业务对接网关 OOM\",\"slug\":\"_8-7、业务对接网关-oom\",\"children\":[]},{\"level\":2,\"title\":\"8.8、鉴权系统频繁长时间 Full GC\",\"slug\":\"_8-8、鉴权系统频繁长时间-full-gc\",\"children\":[]}],\"readingTime\":{\"minutes\":26.72,\"words\":8016},\"filePathRelative\":\"code/java/common/jvm/JVMOptimize.md\",\"localizedDate\":\"2022年7月27日\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
